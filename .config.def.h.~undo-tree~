(undo-tree-save-format-version . 1)
"cf1dd15a12b3056ddec5e78d26e8672719e984d4"
[nil nil nil nil (25433 25875 893142 507000) 0 nil]
([nil nil (("Mod4Mask" . 64561) (64569 . 64577) ("Mod4Mask" . 64427) (64435 . 64443) ("Mod4Mask" . 64293) (64301 . 64309) ("Mod4Mask" . 64159) (64167 . 64175) ("Mod4Mask" . 63278) (63286 . 63294) ("Mod4Mask" . 63192) (63200 . 63208) ("Mod4Mask" . 63057) (63065 . 63073) ("Mod4Mask" . 62971) (62979 . 62987) ("Mod4Mask" . 58806) (58814 . 58822) ("Mod4Mask" . 54446) (54454 . 54462) ("Mod4Mask" . 54359) (54367 . 54375) ("Mod4Mask" . 53837) (53845 . 53853) ("Mod4Mask" . 53750) (53758 . 53766) ("Mod4Mask" . 52608) (52616 . 52624) ("Mod4Mask" . 52529) (52537 . 52545) ("Mod4Mask" . 52443) (52451 . 52459) ("Mod4Mask" . 52357) (52365 . 52373) ("Mod4Mask" . 52271) (52279 . 52287) ("Mod4Mask" . 52185) (52193 . 52201) ("Mod4Mask" . 52099) (52107 . 52115) ("Mod4Mask" . 52013) (52021 . 52029) ("Mod4Mask" . 51927) (51935 . 51943) ("Mod4Mask" . 51841) (51849 . 51857) ("Mod4Mask" . 51755) (51763 . 51771) ("Mod4Mask" . 51669) (51677 . 51685) ("Mod4Mask" . 51583) (51591 . 51599) ("Mod4Mask" . 51497) (51505 . 51513) ("Mod4Mask" . 51411) (51419 . 51427) ("Mod4Mask" . 51325) (51333 . 51341) ("Mod4Mask" . 50205) (50213 . 50221) ("Mod4Mask" . 50107) (50115 . 50123) ("Mod4Mask" . 50008) (50016 . 50024) ("Mod4Mask" . 49910) (49918 . 49926) ("Mod4Mask" . 49811) (49819 . 49827) ("Mod4Mask" . 49713) (49721 . 49729) ("Mod4Mask" . 49614) (49622 . 49630) ("Mod4Mask" . 49516) (49524 . 49532) ("Mod4Mask" . 48030) (48038 . 48046) ("Mod4Mask" . 47945) (47953 . 47961) ("Mod4Mask" . 47835) (47843 . 47851) ("Mod4Mask" . 47726) (47734 . 47742) ("Mod4Mask" . 47586) (47594 . 47602) ("Mod4Mask" . 47500) (47508 . 47516) (#("Mod4Mask" 0 8 (c-in-sws t fontified nil)) . 42954) (42962 . 42970) (#("Mod4Mask" 0 8 (c-in-sws t)) . 42873) (42881 . 42889) (#("Mod4Mask" 0 8 (c-in-sws t)) . 42415) (42423 . 42431) (#("Mod4Mask" 0 8 (fontified nil c-in-sws t)) . 41964) (41972 . 41980) (#("Mod4Mask" 0 8 (c-in-sws t fontified nil)) . 41883) (41891 . 41899) (#("Mod4Mask" 0 8 (c-in-sws t)) . 41802) (41810 . 41818) (#("Mod4Mask" 0 8 (c-in-sws t fontified nil)) . 40959) (40967 . 40975) (#("Mod4Mask" 0 8 (c-in-sws t fontified t)) . 40878) (40886 . 40894) (#("Mod4Mask" 0 8 (c-in-sws t fontified t)) . 40405) (40413 . 40421) (#("Mod4Mask" 0 8 (fontified nil c-in-sws t)) . 39939) (39947 . 39955) (#("Mod4Mask" 0 8 (fontified nil c-in-sws t)) . 39858) (39866 . 39874) (#("Mod4Mask" 0 8 (c-in-sws t fontified t)) . 39777) (t 25431 43742 622961 804000) (39785 . 39793) (t 25431 43742 622961 804000)) nil (25433 26005 703150 747000) 0 nil] [nil nil ((39351 . 39352) (#("1" 0 1 (fontified t c-in-sws t)) . 39351) (t 25431 43742 622961 804000)) ((39351 . 39352) (#("4" 0 1 (c-in-sws t fontified t)) . 39351)) (25433 25875 889583 744000) 0 nil] [nil nil ((39351 . 39352) (#("1" 0 1 (fontified t c-in-sws t)) . 39351) (t 25431 43742 622961 804000)) ((39351 . 39352) (#("4" 0 1 (c-in-sws t fontified t)) . 39351)) (25433 25850 382986 121000) 0 nil])
([nil nil ((39351 . 39352) (#("1" 0 1 (fontified t c-in-sws t)) . 39351)) nil (25433 26005 702957 566000) 0 nil])
nil
nil
([nil nil ((44426 . 44436) (#("st" 0 2 (fontified t face font-lock-string-face)) . 44426) (t 25433 26005 841808 523000)) nil (25433 26180 691133 348000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t face font-lock-string-face)) . 44428)) nil (25433 26180 691120 916000) 0 nil])
([nil nil ((nil rear-nonsticky nil 44390 . 44391) (#("
" 0 1 (fontified nil)) . -44424) (44390 . 44425) 44389) nil (25433 26180 691109 113000) 0 nil])
([nil nil ((44410 . 44414) (#("dmenu" 0 5 (fontified t face font-lock-variable-name-face)) . 44410) (undo-tree-id8 . -4) (undo-tree-id9 . -4) (undo-tree-id10 . -4) (undo-tree-id11 . -4) 44414) nil (25433 26180 691093 259000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t face (rainbow-delimiters-depth-1-face) c-type c-not-decl)) . 44422) (undo-tree-id5 . -1) (undo-tree-id6 . 1) (undo-tree-id7 . -1)) nil (25433 26180 691066 999000) 0 nil])
([nil nil ((44422 . 44423)) nil (25433 26180 691048 491000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t face (rainbow-delimiters-depth-1-face) c-type c-not-decl)) . 44422) (undo-tree-id3 . 1) (undo-tree-id4 . -1)) nil (25433 26180 691036 967000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . -44477) (undo-tree-id2 . -1) 44478 (44477 . 44478)) nil (25433 26180 691019 926000) 0 nil])
([nil nil ((nil rear-nonsticky nil 44444 . 44445) (nil fontified nil 44422 . 44445) (44422 . 44445) 44421) nil (25433 26180 690995 62000) 0 nil])
([nil nil ((44426 . 44430) (#("alacritty" 0 9 (fontified t face font-lock-string-face)) . 44426) (undo-tree-id0 . -8) (undo-tree-id1 . -8) 44434) nil (25433 26180 690981 303000) 0 nil])
([nil nil ((45764 . 45768) (45761 . 45764) (#("dmenucmd" 0 8 (fontified t)) . 45761)) nil (25433 36074 607987 340000) 0 nil])
([nil nil ((45962 . 45969) (#("dmenucmd" 0 8 (fontified t)) . 45962)) ((45962 . 45970) (#("roficmd" 0 7 (fontified t)) . 45962)) (25433 36076 711175 644000) 0 nil])
([nil nil ((75632 . 75639) ("dmenucmd" . 75632)) ((75632 . 75640) (#("roficmd" 0 7 (fontified t)) . 75632)) (25433 36077 396377 962000) 0 nil])
([nil nil ((75762 . 75769) (#("dmenucmd" 0 6 (fontified t) 6 8 (fontified t)) . 75762)) ((75762 . 75770) (#("roficmd" 0 7 (fontified t)) . 75762)) (25433 36079 576794 675000) 0 nil] [nil nil ((75768 . 75775) (#("md" 0 2 (fontified t)) . 75768)) ((75768 . 75770) (#("roficmd" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t)) . 75768) (undo-tree-id12 . -6) (undo-tree-id13 . -6) (undo-tree-id14 . -6)) (25433 26180 690855 310000) 0 nil])
([nil nil ((76800 . 76807) (#("dmenucmd" 0 8 (fontified t)) . 76800)) ((76800 . 76808) ("roficmd" . 76800)) (25433 36080 756151 243000) 0 nil])
nil
([nil nil ((44430 . 44440)) ((" -show run" . 44430)) (25433 36081 898919 482000) 0 nil])
([nil nil ((44433 . 44434) (nil syntax-table nil 44452 . 44453) (nil syntax-table (1) 44442 . 44443) (44432 . 44433) (nil syntax-table nil 44451 . 44452) (nil syntax-table (1) 44441 . 44442) (44431 . 44432) (nil syntax-table nil 44450 . 44451) (nil syntax-table (1) 44440 . 44441) (44430 . 44431) (#(" " 0 1 (fontified t face font-lock-string-face)) . 44430)) nil (25433 36942 531797 583000) 0 nil] [nil nil ((nil fontified t 10323 . 10330) (nil face ((:foreground "black") (:background "#bbbbbb")) 10323 . 10330) (#("#bbbbbb" 0 7 (face ((:foreground "black") (:background "#bbbbbb")) fontified t)) . 10323) (10330 . 10337) (nil fontified t 9672 . 9679) (nil face ((:foreground "black") (:background "#bbbbbb")) 9672 . 9679) (#("#bbbbbb" 0 7 (face ((:foreground "black") (:background "#bbbbbb")) fontified t)) . 9672) (9679 . 9686) (nil fontified t 9238 . 9245) (nil face ((:foreground "black") (:background "#bbbbbb")) 9238 . 9245) (#("#bbbbbb" 0 7 (face ((:foreground "black") (:background "#bbbbbb")) fontified t)) . 9238) (9245 . 9252) (nil fontified t 8804 . 8811) (t 25433 27418 783010 778000) (nil face ((:foreground "black") (:background "#bbbbbb")) 8804 . 8811) (t 25433 27418 783010 778000) (#("#bbbbbb" 0 7 (face ((:foreground "black") (:background "#bbbbbb")) fontified t)) . 8804) (t 25433 27418 783010 778000) (8811 . 8818) (t 25433 27418 783010 778000)) ((#("#ff79c6" 0 7 (fontified nil face ((:foreground "black") (:background "#bbbbbb")))) . 8811) (undo-tree-id22 . 7) (8804 . 8811) (nil face ((:foreground "black") (:background "#ff79c6")) 8804 . 8811) (#("#ff79c6" 0 7 (fontified nil face ((:foreground "black") (:background "#bbbbbb")))) . 9245) (9238 . 9245) (nil face ((:foreground "black") (:background "#ff79c6")) 9238 . 9245) (nil fontified nil 9238 . 9245) (#("#ff79c6" 0 7 (fontified nil face ((:foreground "black") (:background "#bbbbbb")))) . 9679) (9672 . 9679) (nil face ((:foreground "black") (:background "#ff79c6")) 9672 . 9679) (nil fontified nil 9672 . 9679) (#("#ff79c6" 0 7 (fontified nil face ((:foreground "black") (:background "#bbbbbb")))) . 10330) (10323 . 10330) (nil face ((:foreground "black") (:background "#ff79c6")) 10323 . 10330)) (25433 36072 77245 612000) 0 nil] [nil nil ((nil fontified t 10323 . 10330) (nil face ((:foreground "black") (:background "#bbbbbb")) 10323 . 10330) (#("#bbbbbb" 0 7 (face ((:foreground "black") (:background "#bbbbbb")) fontified t)) . 10323) (10330 . 10337) (nil fontified t 9672 . 9679) (nil face ((:foreground "black") (:background "#bbbbbb")) 9672 . 9679) (#("#bbbbbb" 0 7 (face ((:foreground "black") (:background "#bbbbbb")) fontified t)) . 9672) (9679 . 9686) (nil fontified t 9238 . 9245) (nil face ((:foreground "black") (:background "#bbbbbb")) 9238 . 9245) (#("#bbbbbb" 0 7 (face ((:foreground "black") (:background "#bbbbbb")) fontified t)) . 9238) (9245 . 9252) (nil fontified t 8804 . 8811) (t 25433 27418 783010 778000) (nil face ((:foreground "black") (:background "#bbbbbb")) 8804 . 8811) (t 25433 27418 783010 778000) (#("#bbbbbb" 0 7 (face ((:foreground "black") (:background "#bbbbbb")) fontified t)) . 8804) (t 25433 27418 783010 778000) (8811 . 8818) (t 25433 27418 783010 778000)) ((#("#ffb86c" 0 7 (face ((:foreground "black") (:background "#bbbbbb")) fontified nil)) . 8811) (undo-tree-id47 . -7) (undo-tree-id48 . 7) (t 25433 27418 783010 778000) (8804 . 8811) (t 25433 27418 783010 778000) (nil face ((:foreground "black") (:background "#ffb86c")) 8804 . 8811) (t 25433 27418 783010 778000) (#("#ffb86c" 0 7 (fontified nil face ((:foreground "black") (:background "#bbbbbb")))) . 9245) (undo-tree-id49 . 7) (9238 . 9245) (nil face ((:foreground "black") (:background "#ffb86c")) 9238 . 9245) (nil fontified nil 9238 . 9245) (#("#ffb86c" 0 7 (face ((:foreground "black") (:background "#bbbbbb")) fontified nil)) . 9679) (undo-tree-id50 . 7) (9672 . 9679) (nil face ((:foreground "black") (:background "#ffb86c")) 9672 . 9679) (#("#ffb86c" 0 7 (face ((:foreground "black") (:background "#bbbbbb")) fontified nil)) . 10330) (undo-tree-id51 . 7) (10323 . 10330) (nil face ((:foreground "black") (:background "#ffb86c")) 10323 . 10330)) (25433 35474 900493 213000) 0 nil] [nil nil ((nil face ((:foreground "black") (:background "#bbbbbb")) 10323 . 10330) (#("#bbbbbb" 0 7 (face ((:foreground "black") (:background "#bbbbbb")) fontified nil)) . 10323) (10330 . 10337) (nil face ((:foreground "black") (:background "#bbbbbb")) 9672 . 9679) (#("#bbbbbb" 0 7 (face ((:foreground "black") (:background "#bbbbbb")) fontified nil)) . 9672) (9679 . 9686) (nil face ((:foreground "black") (:background "#bbbbbb")) 9238 . 9245) (#("#bbbbbb" 0 7 (face ((:foreground "black") (:background "#bbbbbb")) fontified nil)) . 9238) (9245 . 9252) (t 25433 27418 783010 778000) (nil face ((:foreground "black") (:background "#bbbbbb")) 8804 . 8811) (t 25433 27418 783010 778000) (#("#bbbbbb" 0 7 (face ((:foreground "black") (:background "#bbbbbb")) fontified nil)) . 8804) (undo-tree-id29 . -7) (t 25433 27418 783010 778000) (8811 . 8818) (t 25433 27418 783010 778000)) ((#("#282a36" 0 7 (face ((:foreground "black") (:background "#bbbbbb")) fontified nil)) . 8811) (undo-tree-id43 . 7) (t 25433 27418 783010 778000) (8804 . 8811) (t 25433 27418 783010 778000) (nil face ((:foreground "white") (:background "#282a36")) 8804 . 8811) (t 25433 27418 783010 778000) (#("#282a36" 0 7 (face ((:foreground "black") (:background "#bbbbbb")) fontified nil)) . 9245) (undo-tree-id44 . 7) (9238 . 9245) (nil face ((:foreground "white") (:background "#282a36")) 9238 . 9245) (#("#282a36" 0 7 (face ((:foreground "black") (:background "#bbbbbb")) fontified nil)) . 9679) (undo-tree-id45 . 7) (9672 . 9679) (nil face ((:foreground "white") (:background "#282a36")) 9672 . 9679) (#("#282a36" 0 7 (face ((:foreground "black") (:background "#bbbbbb")) fontified nil)) . 10330) (undo-tree-id46 . 7) (10323 . 10330) (nil face ((:foreground "white") (:background "#282a36")) 10323 . 10330)) (25433 35419 246229 625000) 0 nil])
([nil nil ((44442 . 44443) (nil syntax-table nil 44455 . 44456) (nil syntax-table (1) 44445 . 44446) (44441 . 44442) (nil syntax-table nil 44454 . 44455) (nil syntax-table (1) 44444 . 44445) (44440 . 44441) (nil syntax-table nil 44453 . 44454) (nil syntax-table (1) 44443 . 44444) (44439 . 44440) (#(" " 0 1 (fontified t face font-lock-string-face)) . 44439)) nil (25433 36942 531769 926000) 0 nil])
([nil nil ((nil fontified t 10377 . 10384) (nil face ((:foreground "white") (:background "#222222")) 10377 . 10384) (#("#222222" 0 7 (face ((:foreground "white") (:background "#222222")) fontified t)) . 10377) (10384 . 10391) (nil fontified t 10268 . 10275) (nil face ((:foreground "white") (:background "#222222")) 10268 . 10275) (#("#222222" 0 7 (face ((:foreground "white") (:background "#222222")) fontified t)) . 10268) (10275 . 10282) (nil fontified t 10214 . 10221) (nil face ((:foreground "white") (:background "#222222")) 10214 . 10221) (#("#222222" 0 7 (face ((:foreground "white") (:background "#222222")) fontified t)) . 10214) (10221 . 10228) (nil fontified t 9726 . 9733) (nil face ((:foreground "white") (:background "#222222")) 9726 . 9733) (#("#222222" 0 7 (face ((:foreground "white") (:background "#222222")) fontified t)) . 9726) (9733 . 9740) (nil fontified t 9292 . 9299) (nil face ((:foreground "white") (:background "#222222")) 9292 . 9299) (#("#222222" 0 7 (face ((:foreground "white") (:background "#222222")) fontified t)) . 9292) (9299 . 9306) (nil fontified t 8858 . 8865) (nil face ((:foreground "white") (:background "#222222")) 8858 . 8865) (#("#222222" 0 7 (face ((:foreground "white") (:background "#222222")) fontified t)) . 8858) (8865 . 8872)) ((#("#ff79c6" 0 7 (fontified nil face ((:foreground "white") (:background "#222222")))) . 8865) (undo-tree-id16 . 7) (8858 . 8865) (nil face ((:foreground "black") (:background "#ff79c6")) 8858 . 8865) (#("#ff79c6" 0 7 (fontified nil face ((:foreground "white") (:background "#222222")))) . 9299) (undo-tree-id17 . 7) (9292 . 9299) (nil face ((:foreground "black") (:background "#ff79c6")) 9292 . 9299) (nil fontified nil 9292 . 9299) (#("#ff79c6" 0 7 (fontified nil face ((:foreground "white") (:background "#222222")))) . 9733) (undo-tree-id18 . 7) (9726 . 9733) (nil face ((:foreground "black") (:background "#ff79c6")) 9726 . 9733) (nil fontified nil 9726 . 9733) (#("#ff79c6" 0 7 (fontified nil face ((:foreground "white") (:background "#222222")))) . 10221) (undo-tree-id19 . 7) (10214 . 10221) (nil face ((:foreground "black") (:background "#ff79c6")) 10214 . 10221) (nil fontified nil 10214 . 10221) (#("#ff79c6" 0 7 (fontified nil face ((:foreground "white") (:background "#222222")))) . 10275) (undo-tree-id20 . 7) (10268 . 10275) (nil face ((:foreground "black") (:background "#ff79c6")) 10268 . 10275) (nil fontified nil 10268 . 10275) (#("#ff79c6" 0 7 (fontified nil face ((:foreground "white") (:background "#222222")))) . 10384) (undo-tree-id21 . 7) (10377 . 10384) (nil face ((:foreground "black") (:background "#ff79c6")) 10377 . 10384)) (25433 36071 699339 164000) 0 nil])
nil
([nil nil ((nil face ((:foreground "white") (:background "#222222")) 10377 . 10384) (#("#222222" 0 7 (face ((:foreground "white") (:background "#222222")) fontified nil)) . 10377) (10384 . 10391) (nil face ((:foreground "white") (:background "#222222")) 10268 . 10275) (#("#222222" 0 7 (face ((:foreground "white") (:background "#222222")) fontified nil)) . 10268) (10275 . 10282) (nil face ((:foreground "white") (:background "#222222")) 10214 . 10221) (#("#222222" 0 7 (face ((:foreground "white") (:background "#222222")) fontified nil)) . 10214) (10221 . 10228) (nil face ((:foreground "white") (:background "#222222")) 9726 . 9733) (#("#222222" 0 7 (face ((:foreground "white") (:background "#222222")) fontified nil)) . 9726) (9733 . 9740) (nil face ((:foreground "white") (:background "#222222")) 9292 . 9299) (#("#222222" 0 7 (fontified nil face ((:foreground "white") (:background "#222222")))) . 9292) (9299 . 9306) (nil face ((:foreground "white") (:background "#222222")) 8858 . 8865) (#("#222222" 0 7 (fontified nil face ((:foreground "white") (:background "#222222")))) . 8858) (8865 . 8872)) ((#("#ffb86c" 0 7 (fontified nil face ((:foreground "white") (:background "#222222")))) . 8865) (undo-tree-id37 . 7) (8858 . 8865) (nil face nil 8858 . 8865) (#("#ffb86c" 0 7 (fontified nil face ((:foreground "white") (:background "#222222")))) . 9299) (undo-tree-id38 . 7) (9292 . 9299) (nil face nil 9292 . 9299) (#("#ffb86c" 0 7 (face ((:foreground "white") (:background "#222222")) fontified nil)) . 9733) (undo-tree-id39 . 7) (9726 . 9733) (nil face ((:foreground "black") (:background "#ffb86c")) 9726 . 9733) (#("#ffb86c" 0 7 (face ((:foreground "white") (:background "#222222")) fontified nil)) . 10221) (undo-tree-id40 . 7) (10214 . 10221) (nil face ((:foreground "black") (:background "#ffb86c")) 10214 . 10221) (#("#ffb86c" 0 7 (face ((:foreground "white") (:background "#222222")) fontified nil)) . 10275) (undo-tree-id41 . 7) (10268 . 10275) (nil face ((:foreground "black") (:background "#ffb86c")) 10268 . 10275) (#("#ffb86c" 0 7 (face ((:foreground "white") (:background "#222222")) fontified nil)) . 10384) (undo-tree-id42 . 7) (10377 . 10384) (nil face ((:foreground "black") (:background "#ffb86c")) 10377 . 10384)) (25433 35418 383807 110000) 0 nil])
([nil nil ((8759 . 8760) (8758 . 8759) 8728) nil (25433 36942 531743 176000) 0 nil])
([nil nil ((nil fontified t 9780 . 9787) (nil face ((:foreground "white") (:background "#444444")) 9780 . 9787) (#("#444444" 0 7 (face ((:foreground "white") (:background "#444444")) fontified t)) . 9780) (9787 . 9794) (nil fontified t 9346 . 9353) (nil face ((:foreground "white") (:background "#444444")) 9346 . 9353) (#("#444444" 0 7 (face ((:foreground "white") (:background "#444444")) fontified t)) . 9346) (9353 . 9360) (nil fontified t 8912 . 8919) (nil face ((:foreground "white") (:background "#444444")) 8912 . 8919) (#("#444444" 0 7 (face ((:foreground "white") (:background "#444444")) fontified t)) . 8912) (8919 . 8926)) ((#("#282a36" 0 7 (fontified nil face ((:foreground "white") (:background "#444444")))) . 8919) (undo-tree-id13 . 7) (8912 . 8919) (nil face ((:foreground "white") (:background "#282a36")) 8912 . 8919) (#("#282a36" 0 7 (fontified nil face ((:foreground "white") (:background "#444444")))) . 9353) (undo-tree-id14 . 7) (9346 . 9353) (nil face ((:foreground "white") (:background "#282a36")) 9346 . 9353) (nil fontified nil 9346 . 9353) (#("#282a36" 0 7 (fontified nil face ((:foreground "white") (:background "#444444")))) . 9787) (undo-tree-id15 . 7) (9780 . 9787) (nil face ((:foreground "white") (:background "#282a36")) 9780 . 9787)) (25433 36071 216017 246000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 9003 . 9004) (nil fontified nil 8761 . 9004) (nil fontified nil 8760 . 8761) (8760 . 9004)) nil (25433 36942 534434 204000) 0 nil])
([nil nil ((nil fontified t 9889 . 9896) (nil face ((:foreground "black") (:background "#eeeeee")) 9889 . 9896) (#("#eeeeee" 0 7 (face ((:foreground "black") (:background "#eeeeee")) fontified t)) . 9889) (9896 . 9903) (nil fontified t 9455 . 9462) (nil face ((:foreground "black") (:background "#eeeeee")) 9455 . 9462) (#("#eeeeee" 0 7 (face ((:foreground "black") (:background "#eeeeee")) fontified t)) . 9455) (9462 . 9469) (nil fontified t 9021 . 9028) (nil face ((:foreground "black") (:background "#eeeeee")) 9021 . 9028) (#("#eeeeee" 0 7 (face ((:foreground "black") (:background "#eeeeee")) fontified t)) . 9021) (9028 . 9035)) ((#("#ffb86c" 0 7 (fontified nil face ((:foreground "black") (:background "#eeeeee")))) . 9028) (undo-tree-id10 . 7) (9021 . 9028) (nil face ((:foreground "black") (:background "#ffb86c")) 9021 . 9028) (#("#ffb86c" 0 7 (fontified nil face ((:foreground "black") (:background "#eeeeee")))) . 9462) (undo-tree-id11 . 7) (9455 . 9462) (nil face ((:foreground "black") (:background "#ffb86c")) 9455 . 9462) (nil fontified nil 9455 . 9462) (#("#ffb86c" 0 7 (fontified nil face ((:foreground "black") (:background "#eeeeee")))) . 9896) (undo-tree-id12 . 7) (9889 . 9896) (nil face ((:foreground "black") (:background "#ffb86c")) 9889 . 9896)) (25433 36070 459389 932000) 0 nil])
([nil nil ((#("	" 0 1 (fontified t)) . -13414) (undo-tree-id104 . -1) 13415 (13413 . 13415) 13363) nil (25433 37052 854260 596000) 0 nil] [nil nil ((nil rear-nonsticky nil 13607 . 13608) (nil fontified nil 13364 . 13608) (13364 . 13608) 13363) ((#("static const char col_gray1[]       = \"#282a36\";
static const char col_gray2[]       = \"#ffb86c\";
static const char col_gray3[]       = \"#ff79c6\";
static const char col_gray4[]       = \"#ffb86c\";
static const char col_cyan[]        = \"#282a36\";" 0 7 (fontified nil) 7 12 (fontified nil face font-lock-keyword-face) 12 13 (fontified nil) 13 17 (fontified nil face font-lock-type-face) 17 27 (fontified nil) 27 28 (fontified nil face (rainbow-delimiters-depth-3-face)) 28 29 (fontified nil face (rainbow-delimiters-depth-3-face)) 29 38 (fontified nil) 38 39 (fontified nil face font-lock-string-face) 39 46 (fontified nil face ((:foreground "white") (:background "#282a36"))) 46 47 (fontified nil face font-lock-string-face) 47 49 (fontified nil) 49 55 (fontified nil face font-lock-keyword-face) 55 56 (fontified nil) 56 61 (fontified nil face font-lock-keyword-face) 61 62 (fontified nil) 62 65 (fontified nil face font-lock-type-face) 65 66 (fontified nil c-type c-decl-id-start face font-lock-type-face) 66 67 (fontified nil) 67 76 (fontified nil face font-lock-variable-name-face) 76 77 (fontified nil face (rainbow-delimiters-depth-3-face)) 77 78 (fontified nil face (rainbow-delimiters-depth-3-face)) 78 87 (fontified nil) 87 88 (fontified nil face font-lock-string-face) 88 95 (fontified nil face ((:foreground "black") (:background "#ffb86c"))) 95 96 (fontified nil face font-lock-string-face) 96 98 (fontified nil) 98 104 (fontified nil face font-lock-keyword-face) 104 105 (fontified nil) 105 110 (fontified nil face font-lock-keyword-face) 110 111 (fontified nil) 111 114 (fontified nil face font-lock-type-face) 114 115 (fontified nil c-type c-decl-id-start face font-lock-type-face) 115 116 (fontified nil) 116 125 (fontified nil face font-lock-variable-name-face) 125 126 (fontified nil face (rainbow-delimiters-depth-3-face)) 126 127 (fontified nil face (rainbow-delimiters-depth-3-face)) 127 136 (fontified nil) 136 137 (fontified nil face font-lock-string-face) 137 144 (fontified nil face ((:foreground "black") (:background "#ff79c6"))) 144 145 (fontified nil face font-lock-string-face) 145 147 (fontified nil) 147 153 (fontified nil face font-lock-keyword-face) 153 154 (fontified nil) 154 159 (fontified nil face font-lock-keyword-face) 159 160 (fontified nil) 160 163 (fontified nil face font-lock-type-face) 163 164 (fontified nil c-type c-decl-id-start face font-lock-type-face) 164 165 (fontified nil) 165 174 (fontified nil face font-lock-variable-name-face) 174 175 (fontified nil face (rainbow-delimiters-depth-3-face)) 175 176 (fontified nil face (rainbow-delimiters-depth-3-face)) 176 185 (fontified nil) 185 186 (fontified nil face font-lock-string-face) 186 193 (fontified nil face ((:foreground "black") (:background "#ffb86c"))) 193 194 (fontified nil face font-lock-string-face) 194 196 (fontified nil) 196 202 (fontified nil face font-lock-keyword-face) 202 203 (fontified nil) 203 208 (fontified nil face font-lock-keyword-face) 208 209 (fontified nil) 209 212 (fontified nil face font-lock-type-face) 212 213 (fontified nil c-type c-decl-id-start face font-lock-type-face) 213 214 (fontified nil) 214 222 (fontified nil face font-lock-variable-name-face) 222 223 (fontified nil face (rainbow-delimiters-depth-3-face)) 223 224 (fontified nil face (rainbow-delimiters-depth-3-face)) 224 234 (fontified nil) 234 235 (fontified nil face font-lock-string-face) 235 242 (fontified nil face ((:foreground "white") (:background "#282a36"))) 242 243 (fontified nil face font-lock-string-face) 243 244 (rear-nonsticky nil fontified nil)) . 13364) (undo-tree-id23 . -243) (undo-tree-id24 . -243) (undo-tree-id25 . -196) (undo-tree-id26 . -196) (undo-tree-id27 . -147) (undo-tree-id28 . -147) (undo-tree-id29 . -98) (undo-tree-id30 . -98) (undo-tree-id31 . -49) (undo-tree-id32 . -49) (undo-tree-id33 . -196) (undo-tree-id34 . -243) (undo-tree-id35 . -243) (undo-tree-id36 . -243) (nil rear-nonsticky t 13607 . 13608)) (25433 36942 531686 604000) 0 nil])
([nil nil ((nil fontified t 10106 . 10113) (nil face ((:foreground "white") (:background "#005577")) 10106 . 10113) (#("#005577" 0 7 (face ((:foreground "white") (:background "#005577")) fontified t)) . 10106) (10113 . 10120) (nil fontified t 10051 . 10058) (nil face ((:foreground "white") (:background "#005577")) 10051 . 10058) (#("#005577" 0 7 (face ((:foreground "white") (:background "#005577")) fontified t)) . 10051) (10058 . 10065) (nil fontified t 9997 . 10004) (nil face ((:foreground "white") (:background "#005577")) 9997 . 10004) (#("#005577" 0 7 (face ((:foreground "white") (:background "#005577")) fontified t)) . 9997) (10004 . 10011) (nil fontified t 9943 . 9950) (nil face ((:foreground "white") (:background "#005577")) 9943 . 9950) (#("#005577" 0 7 (face ((:foreground "white") (:background "#005577")) fontified t)) . 9943) (9950 . 9957) (nil fontified t 9617 . 9624) (nil face ((:foreground "white") (:background "#005577")) 9617 . 9624) (#("#005577" 0 7 (face ((:foreground "white") (:background "#005577")) fontified t)) . 9617) (9624 . 9631) (nil fontified t 9563 . 9570) (nil face ((:foreground "white") (:background "#005577")) 9563 . 9570) (#("#005577" 0 7 (face ((:foreground "white") (:background "#005577")) fontified t)) . 9563) (9570 . 9577) (nil fontified t 9509 . 9516) (nil face ((:foreground "white") (:background "#005577")) 9509 . 9516) (#("#005577" 0 7 (face ((:foreground "white") (:background "#005577")) fontified t)) . 9509) (9516 . 9523) (nil fontified t 9183 . 9190) (nil face ((:foreground "white") (:background "#005577")) 9183 . 9190) (#("#005577" 0 7 (face ((:foreground "white") (:background "#005577")) fontified t)) . 9183) (9190 . 9197) (nil fontified t 9129 . 9136) (nil face ((:foreground "white") (:background "#005577")) 9129 . 9136) (#("#005577" 0 7 (face ((:foreground "white") (:background "#005577")) fontified t)) . 9129) (9136 . 9143) (nil fontified t 9075 . 9082) (nil face ((:foreground "white") (:background "#005577")) 9075 . 9082) (#("#005577" 0 7 (face ((:foreground "white") (:background "#005577")) fontified t)) . 9075) (9082 . 9089)) ((#("#ffb86c" 0 7 (fontified nil face ((:foreground "white") (:background "#005577")))) . 9082) (undo-tree-id0 . 7) (9075 . 9082) (nil face nil 9075 . 9082) (nil fontified nil 9075 . 9082) (#("#ffb86c" 0 7 (fontified nil face ((:foreground "white") (:background "#005577")))) . 9136) (undo-tree-id1 . 7) (9129 . 9136) (nil face nil 9129 . 9136) (nil fontified nil 9129 . 9136) (#("#ffb86c" 0 7 (fontified nil face ((:foreground "white") (:background "#005577")))) . 9190) (undo-tree-id2 . 7) (9183 . 9190) (nil face nil 9183 . 9190) (nil fontified nil 9183 . 9190) (#("#ffb86c" 0 7 (fontified nil face ((:foreground "white") (:background "#005577")))) . 9516) (undo-tree-id3 . 7) (9509 . 9516) (nil face nil 9509 . 9516) (nil fontified nil 9509 . 9516) (#("#ffb86c" 0 7 (fontified nil face ((:foreground "white") (:background "#005577")))) . 9570) (undo-tree-id4 . 7) (9563 . 9570) (nil face nil 9563 . 9570) (nil fontified nil 9563 . 9570) (#("#ffb86c" 0 7 (fontified nil face ((:foreground "white") (:background "#005577")))) . 9624) (undo-tree-id5 . 7) (9617 . 9624) (nil face nil 9617 . 9624) (nil fontified nil 9617 . 9624) (#("#ffb86c" 0 7 (fontified nil face ((:foreground "white") (:background "#005577")))) . 9950) (undo-tree-id6 . 7) (9943 . 9950) (nil face nil 9943 . 9950) (nil fontified nil 9943 . 9950) (#("#ffb86c" 0 7 (fontified nil face ((:foreground "white") (:background "#005577")))) . 10004) (undo-tree-id7 . 7) (9997 . 10004) (nil face nil 9997 . 10004) (nil fontified nil 9997 . 10004) (#("#ffb86c" 0 7 (fontified nil face ((:foreground "white") (:background "#005577")))) . 10058) (undo-tree-id8 . 7) (10051 . 10058) (nil face nil 10051 . 10058) (nil fontified nil 10051 . 10058) (#("#ffb86c" 0 7 (fontified nil face ((:foreground "white") (:background "#005577")))) . 10113) (undo-tree-id9 . 7) (10106 . 10113) (nil face nil 10106 . 10113) (nil fontified nil 10106 . 10113) (t 25433 35771 611378 295000)) (25433 35771 596813 466000) 0 nil])
([nil nil ((nil rear-nonsticky nil 13524 . 13525) (nil fontified nil 13414 . 13525) (13414 . 13525)) nil (25433 37052 854244 881000) 0 nil])
nil
nil
([nil nil ((13414 . 13415) (#("    " 0 4 (fontified t)) . 13414) 13467) nil (25433 37052 854232 240000) 0 nil])
([nil nil ((13466 . 13467) (#("    " 0 4 (fontified t)) . 13466) 13521) nil (25433 37052 854220 297000) 0 nil])
([nil nil ((13495 . 13496) (13494 . 13495) (13493 . 13494) (13492 . 13493) (13491 . 13492) (13490 . 13491) (13489 . 13490) (13488 . 13489) (13487 . 13488) (13427 . 13436) (#(" " 0 1 (fontified t)) . 13478) (#(" " 0 1 (fontified t)) . 13427) 13479) nil (25433 37052 854203 814000) 0 nil])
([nil nil ((#("	[SchemeNorm]         = { col_gray3, col_gray1, col_cyan },
	[SchemeSel]          = { col_gray4, col_cyan,  col_gray2  },
" 0 1 (fontified t) 1 2 (fontified t face (rainbow-delimiters-depth-2-face)) 2 12 (fontified t) 12 13 (fontified t face (rainbow-delimiters-depth-2-face)) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 24 (fontified t) 24 25 (fontified t c-type c-not-decl face (rainbow-delimiters-depth-2-face)) 25 35 (fontified t) 35 36 (fontified t c-type c-not-decl) 36 46 (fontified t) 46 47 (fontified t c-type c-not-decl) 47 57 (fontified t) 57 58 (fontified t face (rainbow-delimiters-depth-2-face)) 58 60 (fontified t) 60 61 (fontified t) 61 62 (fontified t face (rainbow-delimiters-depth-2-face)) 62 71 (fontified t) 71 72 (fontified t face (rainbow-delimiters-depth-2-face)) 72 73 (fontified t) 73 74 (fontified t) 74 75 (fontified t) 75 76 (fontified t) 76 77 (fontified t) 77 78 (fontified t) 78 79 (fontified t) 79 80 (fontified t) 80 81 (fontified t) 81 82 (fontified t) 82 84 (fontified t) 84 85 (fontified t c-type c-not-decl face (rainbow-delimiters-depth-2-face)) 85 95 (fontified t) 95 96 (fontified t c-type c-not-decl) 96 105 (fontified t) 105 106 (fontified t c-type c-not-decl) 106 119 (fontified t) 119 120 (fontified t face (rainbow-delimiters-depth-2-face)) 120 121 (rear-nonsticky t fontified t) 121 122 (fontified t)) . 13414) (undo-tree-id92 . -73) (undo-tree-id93 . 100) (undo-tree-id94 . -13) (undo-tree-id95 . 40) (undo-tree-id96 . -73) (undo-tree-id97 . -13) (undo-tree-id98 . -120) (undo-tree-id99 . -21) (undo-tree-id100 . -60) (undo-tree-id101 . -60) (undo-tree-id102 . -122) (undo-tree-id103 . -122) 13435) nil (25433 37052 854166 658000) 0 nil])
([nil nil ((nil rear-nonsticky nil 17142 . 17143) (#("
" 0 1 (fontified nil)) . -17263) (17141 . 17264) 17043) nil (25433 37052 854112 181000) 0 nil])
([nil nil ((17117 . 17118)) nil (25433 37052 854100 308000) 0 nil])
([nil nil ((17199 . 17200)) nil (25433 37052 854092 66000) 0 nil])
([nil nil ((nil rear-nonsticky nil 17199 . 17200) (17282 . 17303) (17200 . 17221) 17199) nil (25433 37052 854081 171000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 17201)) nil (25433 37052 854067 831000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 17201)) nil (25433 37052 854059 170000) 0 nil])
([nil nil ((#("	[SchemeSel]          = { selfgcolor,       selbgcolor,       selbordercolor ,       selfloatcolor },
" 0 1 (fontified t) 1 2 (fontified t face (rainbow-delimiters-depth-2-face)) 2 11 (fontified t) 11 12 (fontified t face (rainbow-delimiters-depth-2-face)) 12 24 (fontified t) 24 25 (fontified t c-type c-not-decl face (rainbow-delimiters-depth-2-face)) 25 36 (fontified t) 36 37 (fontified t c-type c-not-decl) 37 54 (fontified t) 54 55 (fontified t c-type c-not-decl) 55 76 (fontified t) 76 77 (fontified t) 77 78 (fontified t c-type c-not-decl) 78 99 (fontified t) 99 100 (fontified t face (rainbow-delimiters-depth-2-face)) 100 101 (fontified t) 101 102 (fontified t)) . 17041) (undo-tree-id86 . -97) (undo-tree-id87 . 4) (undo-tree-id88 . -97) (undo-tree-id89 . -102) (undo-tree-id90 . -102) (undo-tree-id91 . -36) 17077) nil (25433 37052 854046 878000) 0 nil])
([nil nil ((#("	[SchemeNorm]         = { normfgcolor,      normbgcolor,      normbordercolor,      normfloatcolor },
" 0 1 (c-is-sws t c-in-sws t fontified t) 1 2 (c-is-sws t fontified t face (rainbow-delimiters-depth-2-face)) 2 12 (fontified t) 12 13 (fontified t face (rainbow-delimiters-depth-2-face)) 13 24 (fontified t) 24 25 (fontified t c-type c-not-decl face (rainbow-delimiters-depth-2-face)) 25 37 (fontified t) 37 38 (fontified t c-type c-not-decl) 38 55 (fontified t) 55 56 (fontified t c-type c-not-decl) 56 77 (fontified t) 77 78 (fontified t c-type c-not-decl) 78 99 (fontified t) 99 100 (fontified t face (rainbow-delimiters-depth-2-face)) 100 102 (fontified t)) . 16939) (undo-tree-id73 . -102) (undo-tree-id74 . -77) (undo-tree-id75 . -102) (undo-tree-id76 . -77) (undo-tree-id77 . -12) (undo-tree-id78 . -102) (undo-tree-id79 . -102) (undo-tree-id80 . -12) (undo-tree-id81 . -36) (undo-tree-id82 . -2) (undo-tree-id83 . -12) (undo-tree-id84 . -36) (undo-tree-id85 . -36) 16975) nil (25433 37052 854005 392000) 0 nil])
([nil nil ((17069 . 17070) (17068 . 17069) (17067 . 17068) (17066 . 17067) (17065 . 17066) (17064 . 17065) (17063 . 17064) (17062 . 17063) (#("i" 0 1 (fontified t)) . -17062) (undo-tree-id68 . -1) (undo-tree-id69 . -1) 17063 (17062 . 17063) (16975 . 16983) (#("i" 0 1 (fontified t)) . -16975) (undo-tree-id70 . -1) 16976 (16975 . 16976) (#(" " 0 1 (fontified t)) . 17054) (undo-tree-id71 . -1) (#(" " 0 1 (fontified t)) . 16975) (undo-tree-id72 . -1) 17055) nil (25433 37052 853941 696000) 0 nil])
([nil nil ((16997 . 17001) (16993 . 16997) (#(" " 0 1 (fontified t)) . 16993) (undo-tree-id67 . -1)) nil (25433 37052 853892 876000) 0 nil])
([nil nil ((17087 . 17095) (#(" " 0 1 (fontified t)) . 17087)) nil (25433 37052 853876 812000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 17106)) nil (25433 37052 853866 196000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 17106) (undo-tree-id66 . 1)) nil (25433 37052 853842 869000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 17106) (undo-tree-id64 . 1) (undo-tree-id65 . 1)) nil (25433 37052 853827 573000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -17123) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) 17124 (#(" " 0 1 (fontified t)) . -17124) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) 17125 (#(" " 0 1 (fontified t)) . -17125) (undo-tree-id53 . -1) (undo-tree-id54 . -1) 17126 (17125 . 17126) (17124 . 17125) (17123 . 17124) (17122 . 17123) (17121 . 17122) (17120 . 17121) (17119 . 17120) (17118 . 17119) (17117 . 17118) (17116 . 17117) (17115 . 17116) (17114 . 17115) (#(" " 0 1 (fontified t)) . -17021) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (#(" " 0 1 (fontified t)) . -17022) (undo-tree-id57 . -1) (#(" " 0 1 (fontified t)) . -17023) (undo-tree-id58 . -1) 17024 (17012 . 17024) (#(" " 0 1 (fontified t)) . 17105) (undo-tree-id59 . 1) (undo-tree-id60 . 1) (undo-tree-id61 . 1) (undo-tree-id62 . -1) (#(" " 0 1 (fontified t)) . 17012) (undo-tree-id63 . -1)) nil (25433 37052 853770 372000) 0 nil])
([nil nil ((#("	" 0 1 (fontified t)) . -17143) (undo-tree-id0 . -1) 17144 (17142 . 17144) (t 25433 37052 869461 302000) 17042) nil (25441 24329 355918 530000) 0 nil])
([nil nil ((nil rear-nonsticky nil 17344 . 17345) (nil fontified nil 17143 . 17345) (17143 . 17345)) nil (25441 24329 355848 824000) 0 nil])
([nil nil (17140) nil (25441 24329 355830 245000) 0 nil])
([nil nil ((17045 . 17047) (17046 . 17047) (17045 . 17046) (16939 . 16941) (16939 . 16941)) nil (25441 24329 355797 347000) 0 nil])
([nil nil ((46193 . 46194) (#("p" 0 1 (fontified t)) . 46193) (t 25441 24329 371327 198000)) nil (25441 28558 473812 920000) 0 nil])
([nil nil ((nil rear-nonsticky nil 22852 . 22853) (#("
" 0 1 (fontified nil)) . -22864) (22851 . 22865) 22849 (t 25441 28558 489021 49000)) nil (25442 13779 565009 110000) 0 nil])
([nil nil ((#("	\"st\", NULL,
" 0 1 (rear-nonsticky t fontified t) 1 5 (face font-lock-string-face fontified t) 5 7 (fontified t) 7 11 (face font-lock-constant-face fontified t) 11 12 (fontified t) 12 13 (fontified t)) . 22852) (undo-tree-id39 . -12) (undo-tree-id40 . -1) (undo-tree-id41 . -13) (undo-tree-id42 . -13) (undo-tree-id43 . -12) 22853) nil (25442 13779 564984 875000) 0 nil])
([nil nil ((#("	" 0 1 (fontified t)) . -22852) (undo-tree-id38 . -1) 22853 (22851 . 22853) 22840) nil (25442 13779 564938 152000) 0 nil])
([nil nil ((nil rear-nonsticky nil 22869 . 22870) (nil fontified nil 22852 . 22870) (22852 . 22870)) nil (25442 13779 564914 58000) 0 nil])
([nil nil ((22852 . 22853) 22869) nil (25442 13779 564893 804000) 0 nil])
([nil nil ((#("	\"st\", NULL,
" 0 1 (fontified t) 1 5 (face font-lock-string-face fontified t) 5 7 (fontified t) 7 11 (face font-lock-constant-face fontified t) 11 12 (fontified t) 12 13 (fontified t)) . 22839) (undo-tree-id33 . -13) (undo-tree-id34 . -11) (undo-tree-id35 . -13) (undo-tree-id36 . -13) (undo-tree-id37 . -13) 22850) nil (25442 13779 564871 665000) 0 nil])
([nil nil ((22840 . 22841)) nil (25442 13779 564821 660000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-warning-face fontified t)) . 22840) (nil syntax-table nil 22859 . 22860) (nil syntax-table (1) 22840 . 22841)) nil (25442 13779 564804 60000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . 22849) (22850 . 22854) (#(" " 0 1 (fontified t)) . 22843) (22844 . 22848)) nil (25442 13779 564781 83000) 0 nil])
([nil nil ((22840 . 22841)) nil (25442 13779 564756 779000) 0 nil])
([nil nil ((#("L" 0 1 (fontified t)) . -22873) (undo-tree-id29 . -1) 22874 (22869 . 22874) (22868 . 22869) (22839 . 22841) (#("	" 0 1 (fontified nil)) . 22839) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (22866 . 22867) (22865 . 22866) (nil syntax-table nil 22865 . 22866) (nil syntax-table (1) 22853 . 22854)) nil (25442 13779 564730 170000) 0 nil])
([nil nil ((22839 . 22841) (#("    " 0 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -22839) (undo-tree-id28 . -4) 22843 (22841 . 22843)) nil (25442 13779 564669 339000) 0 nil])
([nil nil ((22874 . 22876) (#("	" 0 1 (fontified t)) . -22874) (undo-tree-id27 . -1) 22875) nil (25442 13779 564630 369000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -22852) (undo-tree-id25 . -1) (#(" " 0 1 (fontified t)) . -22853) (undo-tree-id26 . -1) 22854 (22841 . 22854)) nil (25442 13779 564589 303000) 0 nil])
([nil nil ((22885 . 22891) (#("  " 0 2 (fontified t)) . 22885) 22897) nil (25442 13779 564546 421000) 0 nil])
([nil nil ((nil rear-nonsticky nil 22897 . 22898) (#("
" 0 1 (fontified nil)) . -22930) (22884 . 22931) 22862) nil (25442 13945 605845 297000) 0 nil])
([nil nil ((22899 . 22904) (#("wal\", \"-i\", \"Wallpapers/" 0 3 (face font-lock-string-face fontified t) 3 4 (face font-lock-string-face fontified t) 4 6 (fontified t) 6 7 (face font-lock-string-face fontified t) 7 9 (face font-lock-string-face fontified t) 9 10 (face font-lock-string-face fontified t) 10 12 (fontified t) 12 13 (face font-lock-string-face fontified t) 13 23 (face font-lock-string-face fontified t) 23 24 (face font-lock-string-face fontified t rear-nonsticky t)) . 22899) (undo-tree-id45 . -23) (undo-tree-id46 . -23) (undo-tree-id47 . -23) (undo-tree-id48 . -23) (undo-tree-id49 . -23) (undo-tree-id50 . -23) (undo-tree-id51 . -23)) ((22899 . 22923) (#("emacs" 0 1 (face font-lock-string-face fontified t) 1 2 (face font-lock-string-face fontified t) 2 3 (face font-lock-string-face fontified t) 3 4 (face font-lock-string-face fontified t) 4 5 (face font-lock-string-face fontified t)) . 22899) (undo-tree-id44 . -4) (t 25442 13779 584946 897000)) (25442 13948 852652 457000) 0 nil])
([nil nil ((22911 . 22912) (#(" " 0 1 (fontified t)) . -22911) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) 22912 (22911 . 22912) (t 25442 13779 584946 897000)) nil (25442 14189 714208 578000) 0 nil])
([nil nil ((22839 . 22841) (#("             " 0 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil) 6 7 (fontified nil) 7 8 (fontified nil) 8 9 (fontified nil) 9 10 (fontified nil) 10 11 (fontified nil) 11 12 (fontified nil) 12 13 (fontified nil)) . 22839) (22884 . 22885)) nil (25442 14189 714163 667000) 0 nil])
([nil nil ((22875 . 22877) (#("             " 0 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t rear-nonsticky t)) . 22875) 22901) nil (25442 14189 714142 225000) 0 nil])
([nil nil ((22892 . 22894) (#("	     " 0 6 (fontified t)) . 22892) (undo-tree-id52 . -1) 22900) nil (25442 14189 714095 569000) 0 nil])
([nil nil ((#("  \"wal\", \"-i\", \"Wallpapers/\", NULL,
" 0 2 (fontified t) 2 7 (fontified t face font-lock-string-face) 7 9 (fontified t) 9 13 (fontified t face font-lock-string-face) 13 15 (fontified t) 15 28 (fontified t face font-lock-string-face) 28 30 (fontified t) 30 34 (fontified t face font-lock-constant-face) 34 36 (fontified t)) . 22839) (undo-tree-id28 . -3) 22842 (t 25442 14189 724766 887000)) nil (25442 14780 927092 156000) 0 nil])
([nil nil ((nil rear-nonsticky nil 22840 . 22841) (#("
" 0 1 (fontified nil)) . -22855) (22838 . 22856) 22801) nil (25442 14780 927053 115000) 0 nil])
([nil nil ((22865 . 22866) (#("$" 0 1 (fontified t face font-lock-string-face)) . -22865) (undo-tree-id27 . -1) 22866 (22864 . 22866)) nil (25442 14780 927014 424000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-string-face)) . 22864)) nil (25442 14780 926973 357000) 0 nil])
([nil nil ((#("&" 0 1 (fontified t face font-lock-string-face)) . 22864)) nil (25442 14780 926952 824000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t face font-lock-string-face)) . -22844) (undo-tree-id24 . -1) (#("c" 0 1 (fontified t face font-lock-string-face)) . -22845) (undo-tree-id25 . -1) (#("s" 0 1 (fontified t face font-lock-string-face)) . -22846) (undo-tree-id26 . -1) 22847) nil (25442 14780 926914 272000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t face font-lock-string-face)) . -22842) (undo-tree-id22 . -1) 22843 (22842 . 22843) (#("em" 0 2 (fontified t face font-lock-string-face)) . 22842) (undo-tree-id23 . -1) 22843) nil (25442 14780 926869 295000) 0 nil])
([nil nil ((nil rear-nonsticky nil 22850 . 22851) (#("
" 0 1 (fontified nil)) . -22939) (22850 . 22940) 22841) nil (25442 14780 926818 870000) 0 nil])
([nil nil ((#(" --head=0 && nitrogen --random --set-zoom-fill --head=1" 0 55 (fontified t)) . 22884) (undo-tree-id20 . -55) (undo-tree-id21 . -55)) nil (25442 14780 926780 387000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . 22871) (22872 . 22876) (#(" " 0 1 (fontified t)) . 22859) (22860 . 22864)) nil (25442 14780 926737 994000) 0 nil])
([nil nil ((22851 . 22852)) nil (25442 14780 926709 988000) 0 nil])
([nil nil ((22900 . 22901) (22898 . 22900) (#("Ö" 0 1 (fontified t)) . -22898) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (#("Ö" 0 1 (fontified t)) . -22899) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) 22900 (22895 . 22900) (22851 . 22853) (22892 . 22893) (22891 . 22892) (nil syntax-table nil 22891 . 22892) (nil syntax-table (1) 22875 . 22876)) nil (25442 14780 926664 731000) 0 nil])
([nil nil ((#("  \"\", NULL,
" 0 1 (fontified t) 1 2 (fontified t rear-nonsticky t) 2 3 (fontified t face font-lock-string-face) 3 4 (fontified t face font-lock-string-face) 4 6 (fontified t) 6 10 (fontified t face font-lock-constant-face) 10 11 (fontified t) 11 12 (fontified t rear-nonsticky t)) . 22839) (undo-tree-id0 . -12) (undo-tree-id1 . -3) (undo-tree-id2 . -3) (undo-tree-id3 . -12) (undo-tree-id4 . -12) (undo-tree-id5 . -10) (undo-tree-id6 . -12) (undo-tree-id7 . -10) (undo-tree-id8 . -10) (undo-tree-id9 . -10) 22849) nil (25442 14780 926523 234000) 0 nil])
([nil nil ((277 . 278) (#("1" 0 1 (fontified t)) . 277) (t 25442 14780 950382 233000)) nil (25446 4934 959537 418000) 0 nil])
([nil nil ((49000 . 49001) (#("i" 0 1 (fontified t)) . 49000)) nil (25446 4934 959518 910000) 0 nil])
([nil nil ((49086 . 49087) (#("d" 0 1 (fontified t)) . 49086)) nil (25446 4934 959498 376000) 0 nil])
([nil nil ((nil rear-nonsticky nil 48972 . 48973) (49070 . 49081) (48973 . 48984) 48972) nil (25446 4934 959472 395000) 0 nil])
([nil nil ((#(",           " 0 1 (fontified t) 1 12 (fontified t)) . 49069) (undo-tree-id0 . -11) (undo-tree-id1 . -11) (undo-tree-id2 . -11) (#(",           " 0 1 (fontified t) 1 12 (fontified t)) . 48984) 49092) nil (25446 4934 959430 979000) 0 nil])
([nil nil ((49070 . 49071) (48984 . 48985)) nil (25446 4934 959273 694000) 0 nil])
([nil nil ((nil rear-nonsticky nil 22908 . 22909) (#("
" 0 1 (fontified nil)) . -22923) (22906 . 22924) 22894 (t 25446 4934 983165 122000)) nil (25446 4969 591029 689000) 0 nil])
([nil nil ((22910 . 22918) (#("emacs" 0 5 (face font-lock-string-face fontified t)) . 22910)) nil (25446 4969 590969 345000) 0 nil])
([nil nil ((#("st char *dmenucmd[] = {" 0 2 (face font-lock-keyword-face fontified t) 2 3 (fontified t) 3 6 (face font-lock-type-face fontified t) 6 7 (face font-lock-type-face c-type c-decl-id-start fontified t) 7 9 (fontified t) 9 17 (face font-lock-variable-name-face fontified t) 17 18 (face (rainbow-delimiters-depth-1-face) fontified t) 18 19 (face (rainbow-delimiters-depth-1-face) fontified t) 19 22 (fontified t) 22 23 (face (rainbow-delimiters-depth-1-face) fontified t)) . 44690) (t 25446 4969 613234 733000)) nil (25446 5068 104606 593000) 0 nil])
([nil nil ((#("static con
	\"dmenu_run\",
	\"-fn\", dmenufont,
	\"-nb\", normbgcolor,
	\"-nf\", normfgcolor,
	\"-sb\", selbgcolor,
	\"-sf\", selfgcolor,
	#if BAR_DMENUMATCHTOP_PATCH
	topbar ? NULL : \"-b\",
	#endif // BAR_DMENUMATCHTOP_PATCH
	NULL
};
" 0 1 (face font-lock-keyword-face fontified t c-is-sws t) 1 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 9 (face font-lock-type-face fontified t) 9 10 (face font-lock-type-face fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 23 (face font-lock-string-face fontified t) 23 26 (fontified t) 26 31 (face font-lock-string-face fontified t) 31 45 (fontified t) 45 50 (face font-lock-string-face fontified t) 50 66 (fontified t) 66 71 (face font-lock-string-face fontified t) 71 87 (fontified t) 87 92 (face font-lock-string-face fontified t) 92 107 (fontified t) 107 112 (face font-lock-string-face fontified t) 112 126 (fontified t) 126 127 (face font-lock-preprocessor-face fontified t c-is-sws t c-in-sws t) 127 128 (face font-lock-preprocessor-face fontified t c-in-sws t c-is-sws t) 128 130 (face font-lock-preprocessor-face fontified t c-in-sws t) 130 155 (fontified t c-in-sws t) 155 157 (fontified t c-is-sws t) 157 165 (fontified t) 165 169 (face font-lock-constant-face fontified t) 169 172 (fontified t) 172 176 (face font-lock-string-face fontified t) 176 178 (fontified t) 178 179 (face font-lock-preprocessor-face fontified t c-is-sws t c-in-sws t) 179 180 (face font-lock-preprocessor-face fontified t c-in-sws t c-is-sws t) 180 185 (face font-lock-preprocessor-face fontified t c-in-sws t) 185 186 (fontified t c-in-sws t) 186 189 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 189 213 (face font-lock-comment-face fontified t c-in-sws t) 213 214 (fontified t c-is-sws t) 214 215 (face font-lock-constant-face fontified t c-is-sws t) 215 218 (face font-lock-constant-face fontified t) 218 219 (fontified t) 219 220 (face (rainbow-delimiters-unmatched-face) fontified t) 220 222 (fontified t)) . 44680) (undo-tree-id3 . -221) (undo-tree-id4 . -9) (undo-tree-id5 . -221) (undo-tree-id6 . -86) (undo-tree-id7 . -86) (undo-tree-id8 . -106) (undo-tree-id9 . -106) (undo-tree-id10 . -222) (undo-tree-id11 . -222) (undo-tree-id12 . -219) (undo-tree-id13 . -219) (undo-tree-id14 . -11) (undo-tree-id15 . -11) (undo-tree-id16 . -65) (undo-tree-id17 . -65) (undo-tree-id18 . -44) (undo-tree-id19 . -44) (undo-tree-id20 . -25) (undo-tree-id21 . -25) (undo-tree-id22 . -126) (undo-tree-id23 . -126) (undo-tree-id24 . -155) (undo-tree-id25 . -155) (undo-tree-id26 . -178) (undo-tree-id27 . -178) (undo-tree-id28 . -213) (undo-tree-id29 . -213) (undo-tree-id30 . -221) (undo-tree-id31 . -10) (undo-tree-id32 . -10) (undo-tree-id33 . -7) (undo-tree-id34 . -10) (undo-tree-id35 . -12) (undo-tree-id36 . -23) (undo-tree-id37 . -219) (undo-tree-id38 . -220) (undo-tree-id39 . -9) (undo-tree-id40 . -222) (undo-tree-id41 . -9) (undo-tree-id42 . -221) (undo-tree-id43 . -9) (undo-tree-id44 . -13) (undo-tree-id45 . -13) (undo-tree-id46 . -27) (undo-tree-id47 . -27) (undo-tree-id48 . -46) (undo-tree-id49 . -46) (undo-tree-id50 . -67) (undo-tree-id51 . -67) (undo-tree-id52 . -88) (undo-tree-id53 . -88) (undo-tree-id54 . -108) (undo-tree-id55 . -108) (undo-tree-id56 . -128) (undo-tree-id57 . -128) (undo-tree-id58 . -157) (undo-tree-id59 . -157) (undo-tree-id60 . -180) (undo-tree-id61 . -180) (undo-tree-id62 . -215) (undo-tree-id63 . -215) (undo-tree-id64 . -219) (undo-tree-id65 . -221) (undo-tree-id66 . -221) (undo-tree-id67 . -221) 44901) nil (25446 5068 104518 312000) 0 nil])
([nil nil ((277 . 278) (#("2" 0 1 (fontified t)) . 277) (t 25446 5068 127641 712000)) nil (25481 948 154180 699000) 0 nil])
([nil nil ((#("static const char col_gray1[]       = \"#282a36\";
static const char col_gray2[]       = \"#ffb86c\";
static const char col_gray3[]       = \"#ff79c6\";
static const char col_gray4[]       = \"#ffb86c\";
static const char col_cyan[]        = \"#282a36\";
" 0 1 (fontified t face font-lock-keyword-face c-is-sws t) 1 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t) 7 12 (fontified t face font-lock-keyword-face) 12 13 (fontified t) 13 16 (fontified t face font-lock-type-face) 16 17 (fontified t c-type c-decl-id-start face font-lock-type-face) 17 18 (fontified t) 18 27 (fontified t face font-lock-variable-name-face) 27 28 (fontified t face (rainbow-delimiters-depth-1-face)) 28 29 (fontified t face (rainbow-delimiters-depth-1-face)) 29 38 (fontified t) 38 39 (fontified t face font-lock-string-face) 39 46 (fontified t face ((:foreground "white") (:background "#282a36"))) 46 47 (fontified t face font-lock-string-face) 47 49 (fontified t) 49 55 (fontified t face font-lock-keyword-face) 55 56 (fontified t) 56 61 (fontified t face font-lock-keyword-face) 61 62 (fontified t) 62 65 (fontified t face font-lock-type-face) 65 66 (fontified t c-type c-decl-id-start face font-lock-type-face) 66 67 (fontified t) 67 76 (fontified t face font-lock-variable-name-face) 76 77 (fontified t face (rainbow-delimiters-depth-1-face)) 77 78 (fontified t face (rainbow-delimiters-depth-1-face)) 78 87 (fontified t) 87 88 (fontified t face font-lock-string-face) 88 95 (fontified t face ((:foreground "black") (:background "#ffb86c"))) 95 96 (fontified t face font-lock-string-face) 96 98 (fontified t) 98 104 (fontified t face font-lock-keyword-face) 104 105 (fontified t) 105 110 (fontified t face font-lock-keyword-face) 110 111 (fontified t) 111 114 (fontified t face font-lock-type-face) 114 115 (fontified t c-type c-decl-id-start face font-lock-type-face) 115 116 (fontified t) 116 125 (fontified t face font-lock-variable-name-face) 125 126 (fontified t face (rainbow-delimiters-depth-1-face)) 126 127 (fontified t face (rainbow-delimiters-depth-1-face)) 127 136 (fontified t) 136 137 (fontified t face font-lock-string-face) 137 144 (fontified t face ((:foreground "black") (:background "#ff79c6"))) 144 145 (fontified t face font-lock-string-face) 145 147 (fontified t) 147 153 (fontified t face font-lock-keyword-face) 153 154 (fontified t) 154 159 (fontified t face font-lock-keyword-face) 159 160 (fontified t) 160 163 (fontified t face font-lock-type-face) 163 164 (fontified t c-type c-decl-id-start face font-lock-type-face) 164 165 (fontified t) 165 174 (fontified t face font-lock-variable-name-face) 174 175 (fontified t face (rainbow-delimiters-depth-1-face)) 175 176 (fontified t face (rainbow-delimiters-depth-1-face)) 176 185 (fontified t) 185 186 (fontified t face font-lock-string-face) 186 193 (fontified t face ((:foreground "black") (:background "#ffb86c"))) 193 194 (fontified t face font-lock-string-face) 194 196 (fontified t) 196 202 (fontified t face font-lock-keyword-face) 202 203 (fontified t) 203 208 (fontified t face font-lock-keyword-face) 208 209 (fontified t) 209 212 (fontified t face font-lock-type-face) 212 213 (fontified t c-type c-decl-id-start face font-lock-type-face) 213 214 (fontified t) 214 222 (fontified t face font-lock-variable-name-face) 222 223 (fontified t face (rainbow-delimiters-depth-1-face)) 223 224 (fontified t face (rainbow-delimiters-depth-1-face)) 224 234 (fontified t) 234 235 (fontified t face font-lock-string-face) 235 242 (fontified t face ((:foreground "white") (:background "#282a36"))) 242 243 (fontified t face font-lock-string-face) 243 245 (fontified t)) . 8760) (undo-tree-id0 . -18) (undo-tree-id1 . -244) (undo-tree-id2 . -214) (undo-tree-id3 . -214) (undo-tree-id4 . -18) (undo-tree-id5 . -18) (undo-tree-id6 . -214) 8778) nil (25481 959 854633 827000) 0 nil])
([nil nil ((#("#005577" 0 7 (fontified t face ((:foreground "white") (:background "#005577")))) . 9947) (undo-tree-id23 . -6) (undo-tree-id24 . -6) (undo-tree-id25 . -6) (undo-tree-id26 . -6) (#("#005577" 0 7 (fontified t face ((:foreground "white") (:background "#005577")))) . 9900) (#("#005577" 0 7 (fontified t face ((:foreground "white") (:background "#005577")))) . 9853) (#("#eeeeee" 0 7 (fontified t face ((:foreground "black") (:background "#eeeeee")))) . 9806) (#("#db8fd9" 0 7 (fontified t face ((:foreground "black") (:background "#db8fd9")))) . 9758) (#("#444444" 0 7 (fontified t face ((:foreground "white") (:background "#444444")))) . 9711) (#("#222222" 0 7 (fontified t face ((:foreground "white") (:background "#222222")))) . 9664) (#("#bbbbbb" 0 7 (fontified t face ((:foreground "black") (:background "#bbbbbb")))) . 9617) (#("#005577" 0 7 (fontified t face ((:foreground "white") (:background "#005577")))) . 9569) (#("#005577" 0 7 (fontified t face ((:foreground "white") (:background "#005577")))) . 9522) (#("#005577" 0 7 (fontified t face ((:foreground "white") (:background "#005577")))) . 9475) (#("#eeeeee" 0 7 (fontified t face ((:foreground "black") (:background "#eeeeee")))) . 9428) (#("#db8fd9" 0 7 (fontified t face ((:foreground "black") (:background "#db8fd9")))) . 9380) (#("#444444" 0 7 (fontified t face ((:foreground "white") (:background "#444444")))) . 9333) (#("#222222" 0 7 (fontified t face ((:foreground "white") (:background "#222222")))) . 9286) (#("#bbbbbb" 0 7 (fontified t face ((:foreground "black") (:background "#bbbbbb")))) . 9239) 10058) nil (25481 1022 801292 290000) 0 nil] [nil nil ((nil rear-nonsticky nil 9299 . 9300) (nil fontified nil 9293 . 9300) (9293 . 9300) 9292) ((#("#282a36" 0 6 (fontified nil face ((:foreground "white") (:background "#282a36"))) 6 7 (fontified nil rear-nonsticky nil face ((:foreground "white") (:background "#282a36")))) . 9293) (undo-tree-id17 . -7) (undo-tree-id18 . -6) (undo-tree-id19 . -7) (undo-tree-id20 . -7) (undo-tree-id21 . -6) (nil rear-nonsticky t 9299 . 9300)) (25481 959 852020 27000) 0 nil] [nil nil ((nil rear-nonsticky nil 9299 . 9300) (nil fontified nil 9293 . 9300) (9293 . 9300) 9292) ((#("#282a36" 0 6 (fontified nil face ((:foreground "white") (:background "#282a36"))) 6 7 (fontified nil rear-nonsticky nil face ((:foreground "white") (:background "#282a36")))) . 9293) (undo-tree-id12 . -6) (undo-tree-id13 . -6) (undo-tree-id14 . -6) (undo-tree-id15 . -6) (undo-tree-id16 . -6) (nil rear-nonsticky t 9299 . 9300)) (25481 954 429024 555000) 0 nil] [nil nil ((nil rear-nonsticky nil 9245 . 9246) (nil fontified nil 9239 . 9246) (9239 . 9246) 9238) ((#("#282a36" 0 6 (fontified nil face ((:foreground "white") (:background "#282a36"))) 6 7 (fontified nil rear-nonsticky nil face ((:foreground "white") (:background "#282a36")))) . 9239) (undo-tree-id7 . -6) (undo-tree-id8 . -6) (undo-tree-id9 . -6) (undo-tree-id10 . -6) (undo-tree-id11 . -6) (nil rear-nonsticky t 9245 . 9246)) (25481 948 154123 151000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9292 . 9293) (nil fontified nil 9286 . 9293) (9286 . 9293)) nil (25481 1022 801282 632000) 0 nil])
nil
nil
nil
([nil nil ((nil rear-nonsticky nil 9488 . 9489) (nil fontified nil 9482 . 9489) (9482 . 9489)) nil (25481 1022 801281 29000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9684 . 9685) (nil fontified nil 9678 . 9685) (9678 . 9685)) nil (25481 1044 938435 889000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9880 . 9881) (nil fontified nil 9874 . 9881) (9874 . 9881)) nil (25481 1051 816009 693000) 0 nil] [nil nil ((nil rear-nonsticky nil 9881 . 9882) (nil fontified nil 9875 . 9882) (9875 . 9882) 9874) ((#("#282a36" 0 6 (fontified nil face ((:foreground "white") (:background "#282a36"))) 6 7 (fontified nil rear-nonsticky nil face ((:foreground "white") (:background "#282a36")))) . 9875) (undo-tree-id27 . -6) (undo-tree-id28 . -6) (undo-tree-id29 . -1) (undo-tree-id30 . -6) (undo-tree-id31 . -6) (undo-tree-id32 . -6) (nil rear-nonsticky t 9881 . 9882)) (25481 1044 936863 621000) 0 nil] [nil nil ((9683 . 9684) (#("3" 0 1 (fontified t face ((:foreground "white") (:background "#282a36")))) . 9683) (undo-tree-id22 . -1)) ((9683 . 9684) (#("9" 0 1 (fontified t face ((:foreground "white") (:background "#282a96")))) . 9683)) (25481 1022 801273 84000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9834 . 9835) (nil fontified nil 9827 . 9835) (9827 . 9835)) nil (25481 1223 522443 62000) 0 nil] [nil nil ((nil rear-nonsticky nil 9835 . 9836) (nil fontified nil 9828 . 9836) (9828 . 9836) 9827) ((#("	#f8f8f2" 0 1 (fontified nil) 1 7 (fontified nil face ((:foreground "black") (:background "#f8f8f2"))) 7 8 (fontified nil rear-nonsticky nil face ((:foreground "black") (:background "#f8f8f2")))) . 9828) (undo-tree-id33 . -7) (undo-tree-id34 . -7) (undo-tree-id35 . -1) (undo-tree-id36 . -2) (undo-tree-id37 . -7) (undo-tree-id38 . -7) (undo-tree-id39 . -7) (nil rear-nonsticky t 9835 . 9836)) (25481 1051 814282 425000) 0 nil])
nil
nil
([nil nil ((#("	" 0 1 (fontified t face font-lock-string-face)) . 9827)) nil (25481 1223 522440 968000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 9637 . 9638) (nil fontified nil 9631 . 9638) (9631 . 9638)) nil (25481 1223 522439 886000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9441 . 9442) (nil fontified nil 9435 . 9442) (9435 . 9442)) nil (25481 1223 522438 423000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9245 . 9246) (nil fontified nil 9239 . 9246) (9239 . 9246) 9238) nil (25481 1223 522436 830000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9556 . 9557) (nil fontified nil 9550 . 9557) (9550 . 9557)) nil (25481 1223 522435 177000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9353 . 9354) (nil fontified nil 9347 . 9354) (9347 . 9354)) nil (25481 1223 522433 624000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9407 . 9408) (nil fontified nil 9401 . 9408) (9401 . 9408)) nil (25481 1223 522431 921000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9624 . 9625) (nil fontified nil 9618 . 9625) (9618 . 9625)) nil (25481 1223 522430 498000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9787 . 9788) (nil fontified nil 9781 . 9788) (9781 . 9788)) nil (25481 1223 522428 795000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9841 . 9842) (nil fontified nil 9835 . 9842) (9835 . 9842)) nil (25481 1223 522427 222000) 0 nil])
([nil nil ((nil rear-nonsticky nil 10005 . 10006) (nil fontified nil 9998 . 10006) (9998 . 10006)) nil (25481 1223 522425 148000) 0 nil])
([nil nil ((nil rear-nonsticky nil 10060 . 10061) (nil fontified nil 10053 . 10061) (10053 . 10061)) nil (25481 1223 522423 154000) 0 nil])
([nil nil ((#("	" 0 1 (fontified t rear-nonsticky t face font-lock-string-face)) . 10059) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (#("	" 0 1 (fontified t rear-nonsticky t face font-lock-string-face)) . 10005) (undo-tree-id42 . -1)) nil (25481 1223 522417 153000) 0 nil])
([nil nil ((#(" \"#282a36\"" 0 1 (fontified t) 1 2 (face font-lock-string-face fontified t) 2 9 (face ((:foreground "white") (:background "#282a36")) fontified t) 9 10 (face font-lock-string-face fontified t)) . 9942) (undo-tree-id11 . -2) (undo-tree-id12 . -9) 9944 (t 25481 1223 540025 938000)) nil (25481 2106 134907 639000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9951 . 9952) (nil fontified nil 9942 . 9952) (9942 . 9952)) nil (25481 2106 134903 979000) 0 nil])
([nil nil ((#("#ff5555" 0 7 (face ((:foreground "white") (:background "#ff5555")) fontified t)) . 9347) (undo-tree-id5 . -5) (undo-tree-id6 . -5) (undo-tree-id7 . -6) (undo-tree-id8 . -5) (undo-tree-id9 . -5) (undo-tree-id10 . -7) 9352) nil (25481 2106 134901 563000) 0 nil])
([nil nil ((#("#ff5555" 0 7 (face ((:foreground "white") (:background "#ff5555")) fontified t)) . 9557) (undo-tree-id4 . -6)) nil (25481 2106 134893 211000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9563 . 9564) (nil fontified nil 9557 . 9564) (9557 . 9564)) nil (25481 2106 134889 712000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9353 . 9354) (nil fontified nil 9347 . 9354) (9347 . 9354)) nil (25481 2106 134886 764000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9896 . 9897) (nil fontified nil 9890 . 9897) (9890 . 9897) 9889) nil (25481 2106 134884 37000) 0 nil])
([nil nil ((#("#f8f8f2\"" 0 7 (face font-lock-string-face fontified t) 7 8 (face font-lock-string-face fontified t)) . 9897) (undo-tree-id3 . -7)) nil (25481 2106 134881 39000) 0 nil])
([nil nil ((9897 . 9898) (nil syntax-table nil 9898 . 9899) (nil syntax-table (1) 9889 . 9890)) nil (25481 2106 134877 349000) 0 nil])
([nil nil ((nil fontified t 10378 . 10385) (nil face ((:foreground "white") (:background "#222222")) 10378 . 10385) (#("#222222" 0 7 (face ((:foreground "white") (:background "#222222")) fontified t)) . 10378) (10385 . 10392) (nil fontified t 10269 . 10276) (nil face ((:foreground "white") (:background "#222222")) 10269 . 10276) (#("#222222" 0 7 (face ((:foreground "white") (:background "#222222")) fontified t)) . 10269) (10276 . 10283) (nil fontified t 10215 . 10222) (nil face ((:foreground "white") (:background "#222222")) 10215 . 10222) (#("#222222" 0 7 (face ((:foreground "white") (:background "#222222")) fontified t)) . 10215) (10222 . 10229) (nil fontified t 8859 . 8866) (nil face ((:foreground "white") (:background "#222222")) 8859 . 8866) (#("#222222" 0 7 (face ((:foreground "white") (:background "#222222")) fontified t)) . 8859) (8866 . 8873)) nil (25481 2106 134873 178000) 0 nil])
([nil nil ((#("#005577" 0 7 (face ((:foreground "white") (:background "#005577")) fontified t)) . 9170) (undo-tree-id0 . -6) (undo-tree-id1 . -6) (#("#005577" 0 7 (face ((:foreground "white") (:background "#005577")) fontified t)) . 9123) (#("#005577" 0 7 (face ((:foreground "white") (:background "#005577")) fontified t)) . 9076) (undo-tree-id2 . -7) 9184) nil (25481 2106 143267 421000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9187 . 9188) (nil fontified nil 9181 . 9188) (9181 . 9188) (nil syntax-table (15) 9137 . 9138) (nil syntax-table (15) 9135 . 9136) (nil syntax-table (15) 9084 . 9085) (nil syntax-table (15) 9082 . 9083) (nil syntax-table nil 9183 . 9184) (nil syntax-table (1) 9181 . 9182) (nil syntax-table nil 9137 . 9138) (nil syntax-table nil 9135 . 9136) (nil syntax-table nil 9084 . 9085) (nil syntax-table nil 9082 . 9083) (nil rear-nonsticky nil 9134 . 9135) (nil fontified nil 9128 . 9135) (9128 . 9135) (nil syntax-table nil 9174 . 9175) (nil syntax-table nil 9082 . 9083) (nil syntax-table (15) 9176 . 9177) (nil syntax-table (15) 9174 . 9175) (nil syntax-table (15) 9084 . 9085) (nil syntax-table (15) 9082 . 9083) (nil syntax-table nil 9176 . 9177) (nil syntax-table (1) 9174 . 9175) (nil syntax-table nil 9130 . 9131) (nil syntax-table nil 9128 . 9129) (nil syntax-table nil 9084 . 9085) (nil syntax-table nil 9082 . 9083) (nil rear-nonsticky nil 9081 . 9082) (nil fontified nil 9075 . 9082) (9075 . 9082) (nil syntax-table (15) 9169 . 9170) (nil syntax-table (15) 9167 . 9168) (nil syntax-table (15) 9123 . 9124) (nil syntax-table (15) 9121 . 9122) (nil syntax-table nil 9169 . 9170) (nil syntax-table (1) 9167 . 9168) (nil syntax-table nil 9123 . 9124) (nil syntax-table nil 9121 . 9122) (nil syntax-table nil 9077 . 9078) (nil syntax-table nil 9075 . 9076) (#("\"" 0 1 (face font-lock-string-face fontified t)) . 9167) (undo-tree-id19 . -1) (nil syntax-table (15) 9123 . 9124) (nil syntax-table (15) 9121 . 9122) (nil syntax-table (15) 9077 . 9078) (nil syntax-table (15) 9075 . 9076) (nil syntax-table nil 9123 . 9124) (nil syntax-table nil 9121 . 9122) (nil syntax-table nil 9077 . 9078) (nil syntax-table nil 9075 . 9076) (#("\"" 0 1 (face font-lock-string-face fontified t)) . 9121) (nil syntax-table nil 9075 . 9076) (nil syntax-table (15) 9077 . 9078) (nil syntax-table (15) 9075 . 9076) (nil syntax-table nil 9077 . 9078) (nil syntax-table (1) 9075 . 9076) (#("\"" 0 1 (face font-lock-string-face rear-nonsticky nil fontified t)) . 9075) 9170) nil (25481 2283 171872 794000) 0 nil] [nil nil ((nil rear-nonsticky nil 9075 . 9076) (9184 . 9191) (9130 . 9137) (9076 . 9083) 9075) ((#("#005577" 0 7 (face ((:foreground "white") (:background "#005577")) fontified nil)) . 9076) (undo-tree-id13 . 7) (#("#005577" 0 7 (face ((:foreground "white") (:background "#005577")) fontified nil)) . 9130) (#("#005577" 0 7 (face ((:foreground "white") (:background "#005577")) fontified nil)) . 9184) (undo-tree-id14 . -6) (nil rear-nonsticky t 9075 . 9076)) (25481 2106 134808 667000) 0 nil])
([nil nil ((9183 . 9184) (nil syntax-table nil 9192 . 9193) (nil syntax-table (1) 9190 . 9191) (#("2" 0 1 (fontified t)) . -9183) (nil syntax-table nil 9193 . 9194) (nil syntax-table (1) 9191 . 9192) (9183 . 9184) (nil syntax-table nil 9192 . 9193) (nil syntax-table (1) 9190 . 9191) (9129 . 9130) (nil syntax-table nil 9189 . 9190) (nil syntax-table (15) 9191 . 9192) (nil syntax-table (15) 9189 . 9190) (nil syntax-table nil 9191 . 9192) (nil syntax-table nil 9189 . 9190) (nil syntax-table nil 9138 . 9139) (nil syntax-table nil 9136 . 9137) (#("2" 0 1 (fontified t)) . -9129) (nil syntax-table nil 9190 . 9191) (nil syntax-table (15) 9192 . 9193) (nil syntax-table (15) 9190 . 9191) (nil syntax-table nil 9192 . 9193) (nil syntax-table nil 9190 . 9191) (nil syntax-table nil 9139 . 9140) (nil syntax-table nil 9137 . 9138) (9129 . 9130) (nil syntax-table nil 9189 . 9190) (nil syntax-table (15) 9191 . 9192) (nil syntax-table (15) 9189 . 9190) (nil syntax-table nil 9191 . 9192) (nil syntax-table nil 9189 . 9190) (nil syntax-table nil 9138 . 9139) (nil syntax-table nil 9136 . 9137) (9075 . 9076) (nil syntax-table (15) 9190 . 9191) (nil syntax-table (15) 9188 . 9189) (nil syntax-table (15) 9137 . 9138) (nil syntax-table (15) 9135 . 9136) (nil syntax-table nil 9190 . 9191) (nil syntax-table (1) 9188 . 9189) (nil syntax-table nil 9137 . 9138) (nil syntax-table nil 9135 . 9136) (nil syntax-table nil 9084 . 9085) (nil syntax-table nil 9082 . 9083) (#("2" 0 1 (fontified t)) . -9075) (undo-tree-id18 . -1) (nil syntax-table (15) 9191 . 9192) (nil syntax-table (15) 9189 . 9190) (nil syntax-table (15) 9138 . 9139) (nil syntax-table (15) 9136 . 9137) (nil syntax-table nil 9191 . 9192) (nil syntax-table (1) 9189 . 9190) (nil syntax-table nil 9138 . 9139) (nil syntax-table nil 9136 . 9137) (nil syntax-table nil 9085 . 9086) (nil syntax-table nil 9083 . 9084) (9075 . 9076) (nil syntax-table (15) 9190 . 9191) (nil syntax-table (15) 9188 . 9189) (nil syntax-table (15) 9137 . 9138) (nil syntax-table (15) 9135 . 9136) (nil syntax-table nil 9190 . 9191) (nil syntax-table (1) 9188 . 9189) (nil syntax-table nil 9137 . 9138) (nil syntax-table nil 9135 . 9136) (nil syntax-table nil 9084 . 9085) (nil syntax-table nil 9082 . 9083)) nil (25481 2283 171851 703000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 9028 . 9029) (nil fontified nil 9022 . 9029) (9022 . 9029) 9021) nil (25481 2283 171822 407000) 0 nil])
([nil nil ((#("#" 0 1 (face font-lock-string-face fontified t)) . 9029)) nil (25481 2283 171819 792000) 0 nil])
([nil nil ((#("eeeeee" 0 6 (face ((:foreground "white") (:background "#44475aeeeeee")) fontified t)) . 9029) (undo-tree-id17 . -5)) nil (25481 2283 171817 417000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8919 . 8920) (nil fontified nil 8913 . 8920) (8913 . 8920) 8912) nil (25481 2283 171813 750000) 0 nil])
([nil nil ((#("#" 0 1 (face font-lock-string-face fontified t)) . 8920)) nil (25481 2283 171810 674000) 0 nil])
([nil nil ((#("444444" 0 6 (face ((:foreground "white") (:background "#282a36444444")) fontified t)) . 8920) (undo-tree-id15 . -5) (undo-tree-id16 . -6)) nil (25483 34195 168685 336000) 0 nil])
([nil nil ((#("  //	[SchemeNorm]         = { col_gray3,        col_gray1,        col_cyan ,            normfloatcolor },
  //	[SchemeSel]          = { col_gray4,        col_cyan,         col_gray2,            selfloatcolor  },
" 0 1 (c-is-sws t fontified t) 1 2 (c-in-sws t fontified t) 2 3 (face font-lock-comment-delimiter-face c-in-sws t fontified t) 3 5 (face font-lock-comment-delimiter-face c-in-sws t fontified t) 5 26 (face font-lock-comment-face c-in-sws t fontified t) 26 75 (face font-lock-comment-face c-in-sws t fontified t) 75 105 (face font-lock-comment-face c-in-sws t fontified t) 105 106 (face font-lock-comment-face c-in-sws t fontified t) 106 107 (c-in-sws t fontified t) 107 108 (c-in-sws t fontified t) 108 109 (face font-lock-comment-delimiter-face c-in-sws t fontified t) 109 111 (face font-lock-comment-delimiter-face c-in-sws t fontified t) 111 212 (face font-lock-comment-face c-in-sws t fontified t)) . 16694) (undo-tree-id0 . -26) (undo-tree-id1 . -212) (undo-tree-id2 . -212) (undo-tree-id3 . -106) (undo-tree-id4 . -106) (undo-tree-id5 . -26) (undo-tree-id6 . -26) (undo-tree-id7 . -26)) ((16694 . 16906) (t 25483 33885 974713 294000)) (25483 34198 159225 108000) 0 nil] [nil nil ((nil rear-nonsticky nil 8588 . 8589) (nil fontified nil 8570 . 8589) (8570 . 8589)) ((#("\"monospace:size=10\"" 0 18 (face font-lock-string-face fontified nil) 18 19 (face font-lock-string-face rear-nonsticky nil fontified nil)) . 8570) (undo-tree-id20 . -18) (undo-tree-id21 . -19) (undo-tree-id22 . -19) (undo-tree-id23 . -19) (undo-tree-id24 . -19) (undo-tree-id25 . -18) (nil rear-nonsticky t 8588 . 8589)) (25481 2283 173253 619000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8919 . 8920) (nil fontified nil 8913 . 8920) (8913 . 8920) 8912 (t 25483 33885 974713 294000)) nil (25483 34231 239254 15000) 0 nil])
([nil nil ((8589 . 8590)) ((#(" " 0 1 (fontified t)) . 8589)) (25481 2283 171784 103000) 0 nil])
([nil nil ((#("#282a36" 0 7 (face font-lock-string-face fontified t)) . 8920) (undo-tree-id8 . -6)) nil (25483 34231 239248 244000) 0 nil])
nil
([nil nil ((#("  " 0 2 (fontified t)) . -22470) (undo-tree-id4 . -2) 22472 (22469 . 22472) (t 25483 34231 256856 708000) 22453) nil (25496 48201 300891 682000) 0 nil])
([nil nil ((nil rear-nonsticky nil 22526 . 22527) (nil fontified nil 22470 . 22527) (22470 . 22527)) nil (25496 48201 300888 826000) 0 nil])
([nil nil ((nil rear-nonsticky nil 22529 . 22530) (#("
" 0 1 (fontified nil)) . -22547) (22527 . 22548) 22488) nil (25496 48201 300886 953000) 0 nil])
([nil nil ((#("redshift -l 47.80391802377630:16.237492541587166 -m randr" 0 56 (fontified t) 56 57 (fontified t rear-nonsticky t)) . 22470) (undo-tree-id3 . -56)) nil (25496 48201 300884 819000) 0 nil])
([nil nil ((nil rear-nonsticky nil 22530 . 22531) (nil fontified nil 22474 . 22531) (22474 . 22531) 22473) nil (25496 48201 300882 334000) 0 nil])
([nil nil ((#("slstatus" 0 8 (fontified t face font-lock-string-face)) . 22531) (undo-tree-id2 . -7)) nil (25496 48201 300879 999000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 22470) (undo-tree-id0 . -1) (undo-tree-id1 . -1)) nil (25496 48201 300873 76000) 0 nil])
([nil nil ((#("  \"emacs\", NULL,
" 0 2 (fontified t) 2 9 (face font-lock-string-face fontified t) 9 11 (fontified t) 11 15 (face font-lock-constant-face fontified t) 15 17 (fontified t)) . 22433) (undo-tree-id0 . -15) (undo-tree-id1 . -17) (undo-tree-id2 . -16) 22448 (t 25496 48201 317355 448000)) nil (25517 28275 98887 918000) 0 nil])
([nil nil ((nil rear-nonsticky nil 22523 . 22524) (#("
" 0 1 (fontified nil)) . -22538) (22521 . 22539) 22468) nil (25517 28275 98851 167000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 22453)) nil (25517 28275 98850 475000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 22453)) nil (25517 28275 98849 754000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified t)) . 22453)) nil (25517 28275 98849 93000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-warning-face fontified t)) . 22510) (nil syntax-table nil 22518 . 22519) (nil syntax-table (1) 22510 . 22511)) nil (25517 28275 98848 341000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . 22510)) nil (25517 28275 98847 530000) 0 nil])
([nil nil ((nil fontified nil 22525 . 22526) (#(" " 0 1 (fontified nil)) . 22522) (22523 . 22527) (#(" " 0 1 (fontified nil)) . 22513) (22514 . 22518) (#(" " 0 1 (fontified nil)) . 22507) (22508 . 22512) (#(" " 0 1 (fontified nil)) . 22467) (22468 . 22472) (#(" " 0 1 (fontified t)) . 22461) (22462 . 22466)) nil (25517 28275 98845 606000) 0 nil])
([nil nil ((22453 . 22454)) nil (25517 28275 98844 414000) 0 nil])
([nil nil ((22453 . 22455) (nil syntax-table nil 22532 . 22533) (nil syntax-table (1) 22526 . 22527)) nil (25517 28275 98843 702000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-warning-face fontified t)) . 22528) (nil syntax-table nil 22534 . 22535) (nil syntax-table (1) 22528 . 22529)) nil (25517 28275 98837 670000) 0 nil])
([nil nil ((22294 . 22297) (22293 . 22294) (22292 . 22293) (t 25517 28275 119674 577000)) nil (25517 39411 525309 728000) 0 nil])
([nil nil ((22292 . 22293) (#("~" 0 1 (fontified t face font-lock-string-face)) . -22292) (undo-tree-id1 . -1) (#("/" 0 1 (fontified t face font-lock-string-face)) . -22293) (undo-tree-id2 . -1) (#("p" 0 1 (fontified t face font-lock-string-face)) . -22294) (undo-tree-id3 . -1) (#("r" 0 1 (fontified t face font-lock-string-face)) . -22295) (undo-tree-id4 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -22296) (undo-tree-id5 . -1) 22297 (22294 . 22297) (22293 . 22294) (22292 . 22293) (#("~" 0 1 (fontified t face font-lock-string-face)) . -22292) (undo-tree-id6 . -1) (#("/" 0 1 (fontified t face font-lock-string-face)) . -22293) (undo-tree-id7 . -1) (#("P" 0 1 (fontified t face font-lock-string-face)) . -22294) (undo-tree-id8 . -1) (#("r" 0 1 (fontified t face font-lock-string-face)) . -22295) (undo-tree-id9 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -22296) (undo-tree-id10 . -1) 22297 (22296 . 22297)) nil (25517 39411 525305 810000) 0 nil])
([nil nil ((nil rear-nonsticky nil 22316 . 22317) (nil fontified nil 22293 . 22317) (22293 . 22317) 22292) nil (25517 39411 525294 850000) 0 nil])
([nil nil ((22317 . 22318) (#(" " 0 1 (fontified t face font-lock-string-face)) . 22317) (undo-tree-id0 . 1)) nil (25517 39411 525290 161000) 0 nil])
([nil nil ((nil rear-nonsticky nil 22578 . 22579) (#("
" 0 1 (fontified nil)) . -22593) (22576 . 22594) 22569 (t 25517 39411 546717 423000)) nil (25517 54381 2387 603000) 0 nil])
([nil nil ((22580 . 22584) (#("emacs" 0 5 (face font-lock-string-face fontified t)) . 22580) (undo-tree-id6 . -4)) nil (25517 54381 2385 990000) 0 nil])
([nil nil ((nil rear-nonsticky nil 22584 . 22585) (nil fontified nil 22580 . 22585) (22580 . 22585) 22579) nil (25517 54381 2384 197000) 0 nil])
([nil nil ((#("xran" 0 1 (face font-lock-string-face fontified t) 1 2 (face font-lock-string-face fontified t) 2 3 (face font-lock-string-face fontified t) 3 4 (face font-lock-string-face fontified t)) . 22585) (undo-tree-id5 . -3)) nil (25517 54381 2382 655000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified t)) . 22585) (undo-tree-id4 . 1)) nil (25517 54381 2380 351000) 0 nil])
([nil nil ((#("," 0 1 (face font-lock-string-face fontified t)) . 22585) (undo-tree-id3 . 1) (nil syntax-table nil 22592 . 22593) (nil syntax-table (1) 22579 . 22580)) nil (25517 54381 2378 708000) 0 nil])
([nil nil ((#("emacs" 0 4 (face font-lock-string-face fontified t) 4 5 (face font-lock-string-face fontified t rear-nonsticky t)) . 22580) (undo-tree-id0 . -4) (undo-tree-id1 . -5) (undo-tree-id2 . -5) (nil syntax-table nil 22591 . 22592) (nil syntax-table (1) 22579 . 22580)) nil (25517 54381 19855 616000) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil face font-lock-warning-face)) . -22655) (nil syntax-table nil 22579 . 22580) (nil syntax-table (15) 22586 . 22587) (nil syntax-table (15) 22579 . 22580) (nil syntax-table nil 22655 . 22656) (nil syntax-table nil 22589 . 22590) (nil syntax-table nil 22586 . 22587) (nil syntax-table nil 22579 . 22580) (22587 . 22656) (nil syntax-table nil 22579 . 22580) (nil syntax-table (15) 22586 . 22587) (nil syntax-table (15) 22579 . 22580) (nil syntax-table nil 22586 . 22587) (nil syntax-table (1) 22579 . 22580) (22586 . 22587) (nil syntax-table nil 22586 . 22587) (nil syntax-table (1) 22579 . 22580)) nil (25517 54404 664890 923000) 0 nil] [nil nil ((nil rear-nonsticky nil 22638 . 22639) (nil syntax-table nil 22645 . 22646) (nil syntax-table (1) 22579 . 22580) (nil fontified nil 22580 . 22639) (nil syntax-table nil 22645 . 22646) (nil syntax-table (1) 22579 . 22580) (22580 . 22639) (nil syntax-table nil 22586 . 22587) (nil syntax-table (1) 22579 . 22580)) ((nil syntax-table nil 22579 . 22580) (nil syntax-table nil 22586 . 22587) (nil syntax-table (1) 22579 . 22580) (nil syntax-table nil 22586 . 22587) (nil syntax-table nil 22586 . 22587) (nil syntax-table (1) 22579 . 22580) (#("xrandr --output eDP-1 --auto --brightness 1.25 --gamma 0.75" 0 58 (face font-lock-string-face fontified nil) 58 59 (face font-lock-string-face fontified nil rear-nonsticky nil)) . 22580) (undo-tree-id7 . -58) (undo-tree-id8 . -58) (undo-tree-id9 . -58) (undo-tree-id10 . 59) (undo-tree-id11 . 59) (nil syntax-table nil 22645 . 22646) (nil syntax-table (1) 22579 . 22580) (nil syntax-table nil 22579 . 22580) (nil syntax-table nil 22645 . 22646) (nil syntax-table (1) 22579 . 22580) (nil syntax-table nil 22645 . 22646) (nil syntax-table nil 22645 . 22646) (nil syntax-table (1) 22579 . 22580) (nil syntax-table nil 22579 . 22580) (nil syntax-table nil 22645 . 22646) (nil syntax-table (1) 22579 . 22580) (nil syntax-table nil 22645 . 22646) (nil syntax-table nil 22645 . 22646) (nil syntax-table (1) 22579 . 22580) (nil rear-nonsticky t 22638 . 22639) (nil syntax-table nil 22645 . 22646) (nil syntax-table (1) 22579 . 22580)) (25517 54381 2331 353000) 0 nil])
([nil nil ((nil rear-nonsticky nil 22634 . 22635) (nil syntax-table nil 22644 . 22645) (nil syntax-table (15) 22710 . 22711) (nil syntax-table (15) 22644 . 22645) (nil syntax-table nil 22710 . 22711) (nil syntax-table nil 22644 . 22645) (nil syntax-table nil 22641 . 22642) (nil syntax-table nil 22634 . 22635) (nil fontified nil 22634 . 22635) (nil fontified nil 22580 . 22634) (nil syntax-table nil 22644 . 22645) (nil syntax-table (15) 22710 . 22711) (nil syntax-table (15) 22644 . 22645) (nil syntax-table nil 22710 . 22711) (nil syntax-table nil 22644 . 22645) (nil syntax-table nil 22641 . 22642) (nil syntax-table nil 22634 . 22635) (22580 . 22635) (nil syntax-table nil 22589 . 22590) (nil syntax-table (15) 22655 . 22656) (nil syntax-table (15) 22589 . 22590) (nil syntax-table nil 22655 . 22656) (nil syntax-table nil 22589 . 22590) (nil syntax-table nil 22586 . 22587) (nil syntax-table nil 22579 . 22580)) nil (25517 54404 682492 804000) 0 nil])
nil
([nil nil ((22634 . 22635) (nil syntax-table nil 22644 . 22645) (nil syntax-table (15) 22710 . 22711) (nil syntax-table (15) 22644 . 22645) (nil syntax-table nil 22710 . 22711) (nil syntax-table nil 22644 . 22645) (nil syntax-table nil 22641 . 22642) (nil syntax-table nil 22634 . 22635)) nil (25517 54527 509983 59000) 0 nil] [nil nil ((#("\"" 0 1 (face font-lock-warning-face fontified t rear-nonsticky t)) . 22634) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (nil syntax-table nil 22644 . 22645) (nil syntax-table (15) 22710 . 22711) (nil syntax-table (15) 22644 . 22645) (nil syntax-table nil 22710 . 22711) (nil syntax-table nil 22644 . 22645) (nil syntax-table nil 22641 . 22642) (nil syntax-table nil 22634 . 22635)) ((nil syntax-table nil 22634 . 22635) (nil syntax-table nil 22644 . 22645) (nil syntax-table (15) 22710 . 22711) (nil syntax-table (15) 22644 . 22645) (nil syntax-table nil 22710 . 22711) (nil syntax-table nil 22644 . 22645) (nil syntax-table nil 22641 . 22642) (nil syntax-table nil 22634 . 22635) (nil syntax-table nil 22641 . 22642) (nil syntax-table nil 22710 . 22711) (nil syntax-table nil 22644 . 22645) (nil syntax-table nil 22641 . 22642) (nil syntax-table nil 22634 . 22635) (nil syntax-table nil 22644 . 22645) (nil syntax-table nil 22634 . 22635) (nil syntax-table (15) 22641 . 22642) (nil syntax-table (15) 22634 . 22635) (nil syntax-table nil 22710 . 22711) (nil syntax-table nil 22644 . 22645) (nil syntax-table nil 22641 . 22642) (nil syntax-table nil 22634 . 22635) (nil syntax-table nil 22710 . 22711) (nil syntax-table nil 22634 . 22635) (nil syntax-table (15) 22641 . 22642) (nil syntax-table (15) 22634 . 22635) (nil syntax-table nil 22710 . 22711) (nil syntax-table nil 22644 . 22645) (nil syntax-table nil 22641 . 22642) (nil syntax-table nil 22634 . 22635) (nil syntax-table nil 22644 . 22645) (nil syntax-table nil 22634 . 22635) (nil syntax-table (15) 22641 . 22642) (nil syntax-table (15) 22634 . 22635) (nil syntax-table nil 22710 . 22711) (nil syntax-table nil 22644 . 22645) (nil syntax-table nil 22641 . 22642) (nil syntax-table nil 22634 . 22635) (nil syntax-table nil 22710 . 22711) (nil syntax-table nil 22634 . 22635) (nil syntax-table (15) 22641 . 22642) (nil syntax-table (15) 22634 . 22635) (nil syntax-table nil 22710 . 22711) (nil syntax-table nil 22644 . 22645) (nil syntax-table nil 22641 . 22642) (nil syntax-table nil 22634 . 22635) (nil syntax-table nil 22644 . 22645) (nil syntax-table nil 22634 . 22635) (nil syntax-table (15) 22641 . 22642) (nil syntax-table (15) 22634 . 22635) (nil syntax-table nil 22710 . 22711) (nil syntax-table nil 22644 . 22645) (nil syntax-table nil 22641 . 22642) (nil syntax-table nil 22634 . 22635) (22634 . 22635) (nil syntax-table nil 22643 . 22644) (nil syntax-table (15) 22709 . 22710) (nil syntax-table (15) 22643 . 22644) (nil syntax-table nil 22709 . 22710) (nil syntax-table (1) 22643 . 22644)) (25517 54404 664881 779000) 0 nil])
([nil nil ((22591 . 22592) (nil syntax-table nil 22645 . 22646) (nil syntax-table (15) 22711 . 22712) (nil syntax-table (15) 22645 . 22646) (nil syntax-table nil 22711 . 22712) (nil syntax-table (1) 22645 . 22646)) nil (25517 54527 509982 128000) 0 nil])
nil
([nil nil ((nil fontified nil 22775 . 22776) (nil face font-lock-string-face 22775 . 22776) (#(" " 0 1 (face font-lock-string-face fontified nil)) . 22772) (22773 . 22777) (nil syntax-table nil 22676 . 22677) (nil syntax-table (15) 22682 . 22683) (nil syntax-table (15) 22676 . 22677) (nil syntax-table nil 22778 . 22779) (nil syntax-table (1) 22767 . 22768) (nil syntax-table nil 22682 . 22683) (nil syntax-table (1) 22676 . 22677) (#(" " 0 1 (face font-lock-string-face fontified nil)) . 22764) (22765 . 22769) (nil syntax-table nil 22676 . 22677) (nil syntax-table (15) 22682 . 22683) (nil syntax-table (15) 22676 . 22677) (nil syntax-table nil 22775 . 22776) (nil syntax-table (1) 22756 . 22757) (nil syntax-table nil 22682 . 22683) (nil syntax-table (1) 22676 . 22677) (#(" " 0 1 (face font-lock-string-face fontified nil)) . 22753) (22754 . 22758) (nil syntax-table nil 22676 . 22677) (nil syntax-table (15) 22682 . 22683) (nil syntax-table (15) 22676 . 22677) (nil syntax-table nil 22772 . 22773) (nil syntax-table (1) 22748 . 22749) (nil syntax-table nil 22682 . 22683) (nil syntax-table (1) 22676 . 22677) (#(" " 0 1 (face font-lock-string-face fontified nil)) . 22745) (22746 . 22750) (nil syntax-table nil 22676 . 22677) (nil syntax-table (15) 22682 . 22683) (nil syntax-table (15) 22676 . 22677) (nil syntax-table nil 22769 . 22770) (nil syntax-table (1) 22732 . 22733) (nil syntax-table nil 22682 . 22683) (nil syntax-table (1) 22676 . 22677) (#(" " 0 1 (face font-lock-string-face fontified nil)) . 22729) (22730 . 22734) (nil syntax-table nil 22676 . 22677) (nil syntax-table (15) 22682 . 22683) (nil syntax-table (15) 22676 . 22677) (nil syntax-table nil 22766 . 22767) (nil syntax-table (1) 22722 . 22723) (nil syntax-table nil 22682 . 22683) (nil syntax-table (1) 22676 . 22677) (#(" " 0 1 (face font-lock-string-face fontified nil)) . 22719) (22720 . 22724) (nil syntax-table nil 22676 . 22677) (nil syntax-table (15) 22682 . 22683) (nil syntax-table (15) 22676 . 22677) (nil syntax-table nil 22763 . 22764) (nil syntax-table (1) 22713 . 22714) (nil syntax-table nil 22682 . 22683) (nil syntax-table (1) 22676 . 22677) (#(" " 0 1 (face font-lock-string-face fontified nil)) . 22710) (22711 . 22715) (nil syntax-table nil 22676 . 22677) (nil syntax-table (15) 22682 . 22683) (nil syntax-table (15) 22676 . 22677) (nil syntax-table nil 22760 . 22761) (nil syntax-table (1) 22701 . 22702) (nil syntax-table nil 22682 . 22683) (nil syntax-table (1) 22676 . 22677) (#(" " 0 1 (face font-lock-string-face fontified nil)) . 22698) (22699 . 22703) (nil syntax-table nil 22676 . 22677) (nil syntax-table (15) 22682 . 22683) (nil syntax-table (15) 22676 . 22677) (nil syntax-table nil 22757 . 22758) (nil syntax-table (1) 22691 . 22692) (nil syntax-table nil 22682 . 22683) (nil syntax-table (1) 22676 . 22677) (nil rear-nonsticky t 22690 . 22691) (nil fontified nil 22690 . 22691) (#(" " 0 1 (fontified nil rear-nonsticky t)) . 22687) (22688 . 22692) (nil syntax-table nil 22676 . 22677) (nil syntax-table (15) 22682 . 22683) (nil syntax-table (15) 22676 . 22677) (nil syntax-table nil 22754 . 22755) (nil syntax-table (1) 22688 . 22689) (nil syntax-table nil 22682 . 22683) (nil syntax-table (1) 22676 . 22677) (nil fontified nil 22686 . 22687) (nil face font-lock-warning-face 22683 . 22686) (nil fontified nil 22683 . 22686) (#(" " 0 1 (fontified nil)) . 22683) (22684 . 22688) (nil syntax-table nil 22676 . 22677) (nil syntax-table (15) 22682 . 22683) (nil syntax-table (15) 22676 . 22677) (nil syntax-table nil 22751 . 22752) (nil syntax-table nil 22685 . 22686) (nil syntax-table nil 22682 . 22683) (nil syntax-table nil 22676 . 22677) (nil fontified nil 22676 . 22677) (nil face font-lock-string-face 22676 . 22677) (#(" " 0 1 (face font-lock-string-face fontified nil)) . 22673) (22674 . 22678) (nil syntax-table nil 22682 . 22683) (nil syntax-table (15) 22748 . 22749) (nil syntax-table (15) 22682 . 22683) (nil syntax-table nil 22748 . 22749) (nil syntax-table nil 22682 . 22683) (nil syntax-table nil 22679 . 22680) (nil syntax-table nil 22667 . 22668) (#(" " 0 1 (face font-lock-string-face fontified nil)) . 22664) (22665 . 22669) (nil syntax-table nil 22679 . 22680) (nil syntax-table (15) 22745 . 22746) (nil syntax-table (15) 22679 . 22680) (nil syntax-table nil 22745 . 22746) (nil syntax-table nil 22679 . 22680) (nil syntax-table nil 22676 . 22677) (nil syntax-table nil 22660 . 22661) (#(" " 0 1 (face font-lock-string-face fontified nil)) . 22657) (22658 . 22662) (nil syntax-table nil 22676 . 22677) (nil syntax-table (15) 22742 . 22743) (nil syntax-table (15) 22676 . 22677) (nil syntax-table nil 22742 . 22743) (nil syntax-table nil 22676 . 22677) (nil syntax-table nil 22673 . 22674) (nil syntax-table nil 22653 . 22654) (#(" " 0 1 (face font-lock-string-face fontified nil)) . 22650) (22651 . 22655) (nil syntax-table nil 22673 . 22674) (nil syntax-table (15) 22739 . 22740) (nil syntax-table (15) 22673 . 22674) (nil syntax-table nil 22739 . 22740) (nil syntax-table nil 22673 . 22674) (nil syntax-table nil 22670 . 22671) (nil syntax-table nil 22646 . 22647) (#(" " 0 1 (face font-lock-string-face fontified nil)) . 22643) (22644 . 22648) (nil syntax-table nil 22670 . 22671) (nil syntax-table (15) 22736 . 22737) (nil syntax-table (15) 22670 . 22671) (nil syntax-table nil 22736 . 22737) (nil syntax-table nil 22670 . 22671) (nil syntax-table nil 22667 . 22668) (nil syntax-table nil 22635 . 22636) (#(" " 0 1 (face font-lock-string-face fontified nil)) . 22632) (22633 . 22637) (nil syntax-table nil 22667 . 22668) (nil syntax-table (15) 22733 . 22734) (nil syntax-table (15) 22667 . 22668) (nil syntax-table nil 22733 . 22734) (nil syntax-table nil 22667 . 22668) (nil syntax-table nil 22664 . 22665) (nil syntax-table nil 22627 . 22628) (#(" " 0 1 (face font-lock-string-face fontified nil)) . 22624) (22625 . 22629) (nil syntax-table nil 22664 . 22665) (nil syntax-table (15) 22730 . 22731) (nil syntax-table (15) 22664 . 22665) (nil syntax-table nil 22730 . 22731) (nil syntax-table nil 22664 . 22665) (nil syntax-table nil 22661 . 22662) (nil syntax-table nil 22622 . 22623) (#(" " 0 1 (face font-lock-string-face fontified nil)) . 22619) (22620 . 22624) (nil syntax-table nil 22661 . 22662) (nil syntax-table (15) 22727 . 22728) (nil syntax-table (15) 22661 . 22662) (nil syntax-table nil 22727 . 22728) (nil syntax-table nil 22661 . 22662) (nil syntax-table nil 22658 . 22659) (nil syntax-table nil 22615 . 22616) (#(" " 0 1 (face font-lock-string-face fontified nil)) . 22612) (22613 . 22617) (nil syntax-table nil 22658 . 22659) (nil syntax-table (15) 22724 . 22725) (nil syntax-table (15) 22658 . 22659) (nil syntax-table nil 22724 . 22725) (nil syntax-table nil 22658 . 22659) (nil syntax-table nil 22655 . 22656) (nil syntax-table nil 22602 . 22603) (#(" " 0 1 (face font-lock-string-face fontified nil)) . 22599) (22600 . 22604) (nil syntax-table nil 22655 . 22656) (nil syntax-table (15) 22721 . 22722) (nil syntax-table (15) 22655 . 22656) (nil syntax-table nil 22721 . 22722) (nil syntax-table nil 22655 . 22656) (nil syntax-table nil 22652 . 22653) (nil syntax-table nil 22596 . 22597) (#(" " 0 1 (face font-lock-string-face fontified nil)) . 22593) (22594 . 22598) (nil syntax-table nil 22652 . 22653) (nil syntax-table (15) 22718 . 22719) (nil syntax-table (15) 22652 . 22653) (nil syntax-table nil 22718 . 22719) (nil syntax-table nil 22652 . 22653) (nil syntax-table nil 22649 . 22650) (nil syntax-table nil 22585 . 22586) (nil rear-nonsticky t 22584 . 22585) (nil fontified nil 22584 . 22585) (#(" " 0 1 (fontified nil rear-nonsticky t)) . 22581) (22582 . 22586) (nil syntax-table nil 22649 . 22650) (nil syntax-table (15) 22715 . 22716) (nil syntax-table (15) 22649 . 22650) (nil syntax-table nil 22715 . 22716) (nil syntax-table nil 22649 . 22650) (nil syntax-table nil 22646 . 22647) (nil syntax-table nil 22582 . 22583) (nil fontified t 22580 . 22581) (#(" " 0 1 (fontified t)) . 22577) (22578 . 22582) (nil syntax-table nil 22646 . 22647) (nil syntax-table (15) 22712 . 22713) (nil syntax-table (15) 22646 . 22647) (nil syntax-table nil 22712 . 22713) (nil syntax-table nil 22646 . 22647) (nil syntax-table nil 22643 . 22644) (nil syntax-table nil 22579 . 22580)) nil (25517 54527 509973 684000) 0 nil])
([nil nil ((#("\", \"\", \"" 0 4 (face font-lock-string-face fontified t) 4 8 (face font-lock-string-face fontified t)) . 22675) (undo-tree-id40 . -7) (undo-tree-id41 . -7) (nil syntax-table nil 22668 . 22669) (nil syntax-table (15) 22674 . 22675) (nil syntax-table (15) 22668 . 22669) (nil syntax-table nil 22773 . 22774) (nil syntax-table (1) 22767 . 22768) (nil syntax-table nil 22674 . 22675) (nil syntax-table (1) 22668 . 22669) (#("\", \"\", \"" 0 4 (face font-lock-string-face fontified t) 4 8 (face font-lock-string-face fontified t)) . 22577) (undo-tree-id42 . -8) (undo-tree-id43 . -7) (nil syntax-table nil 22775 . 22776) (nil syntax-table (15) 22781 . 22782) (nil syntax-table (15) 22775 . 22776) (nil syntax-table nil 22781 . 22782) (nil syntax-table (1) 22775 . 22776) (nil syntax-table nil 22682 . 22683) (nil syntax-table (1) 22676 . 22677)) nil (25517 54527 509957 578000) 0 nil])
([nil nil ((22577 . 22579) (nil syntax-table nil 22759 . 22760) (nil syntax-table (15) 22765 . 22766) (nil syntax-table (15) 22759 . 22760) (nil syntax-table nil 22765 . 22766) (nil syntax-table (1) 22759 . 22760) (nil syntax-table nil 22674 . 22675) (nil syntax-table (1) 22668 . 22669)) nil (25517 54527 509951 348000) 0 nil])
([nil nil ((22677 . 22679) (nil syntax-table nil 22670 . 22671) (nil syntax-table (15) 22676 . 22677) (nil syntax-table (15) 22670 . 22671) (nil syntax-table nil 22767 . 22768) (nil syntax-table (1) 22761 . 22762) (nil syntax-table nil 22676 . 22677) (nil syntax-table (1) 22670 . 22671)) nil (25517 54527 509949 685000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-warning-face fontified t)) . 22670) (nil syntax-table nil 22763 . 22764) (nil syntax-table (15) 22769 . 22770) (nil syntax-table (15) 22763 . 22764) (nil syntax-table nil 22769 . 22770) (nil syntax-table (1) 22763 . 22764) (nil syntax-table nil 22676 . 22677) (nil syntax-table (1) 22670 . 22671)) nil (25517 54527 509947 982000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-warning-face fontified t)) . 22762) (nil syntax-table nil 22768 . 22769) (nil syntax-table (1) 22762 . 22763)) nil (25517 54527 509946 770000) 0 nil])
([nil nil ((#("  \"emacs\", NULL,
" 0 2 (fontified t) 2 9 (face font-lock-string-face fontified t) 9 11 (fontified t) 11 15 (face font-lock-constant-face fontified t) 15 16 (fontified t) 16 17 (fontified t)) . 22560) (undo-tree-id35 . -17) (undo-tree-id36 . -16) (undo-tree-id37 . -17) (undo-tree-id38 . -17) (undo-tree-id39 . -15) 22575) nil (25517 54527 509945 738000) 0 nil])
([nil nil ((nil rear-nonsticky nil 22752 . 22753) (#("
" 0 1 (fontified nil)) . -22767) (22750 . 22768) 22674) nil (25517 54527 509941 832000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -22751) (undo-tree-id34 . -2) 22753 (22750 . 22753) 22687) nil (25517 54527 509941 21000) 0 nil])
([nil nil ((#("  \"redshift\", \"-l\", \"47.80391802377630:16.237492541587166\", \"-m\", \"randr\", NULL,
" 0 2 (fontified t) 2 12 (face font-lock-string-face fontified t) 12 14 (fontified t) 14 18 (face font-lock-string-face fontified t) 18 20 (fontified t) 20 58 (face font-lock-string-face fontified t) 58 60 (fontified t) 60 64 (face font-lock-string-face fontified t) 64 66 (fontified t) 66 73 (face font-lock-string-face fontified t) 73 75 (fontified t) 75 79 (face font-lock-constant-face fontified t) 79 81 (fontified t)) . 22479) (undo-tree-id30 . -81) (undo-tree-id31 . -80) (undo-tree-id32 . -81) (undo-tree-id33 . -81)) nil (25517 54527 509939 358000) 0 nil])
([nil nil ((nil rear-nonsticky nil 22671 . 22672) (#("
" 0 1 (fontified nil)) . -22750) (22669 . 22751) 22578) nil (25517 54527 509936 313000) 0 nil])
([nil nil ((#("  \"nitrogen\", \"--random\", \"--set-zoom-fill\", NULL,
" 0 2 (fontified t) 2 12 (face font-lock-string-face fontified t) 12 14 (fontified t) 14 24 (face font-lock-string-face fontified t) 24 26 (fontified t) 26 43 (face font-lock-string-face fontified t) 43 45 (fontified t) 45 49 (face font-lock-constant-face fontified t) 49 51 (fontified t)) . 22408) (undo-tree-id22 . -51) (undo-tree-id23 . -50) (undo-tree-id24 . -2) (undo-tree-id25 . -2) (undo-tree-id26 . -2) (undo-tree-id27 . -2) (undo-tree-id28 . -2) (undo-tree-id29 . -51) 22410) nil (25517 54527 509935 241000) 0 nil])
([nil nil ((nil rear-nonsticky nil 22528 . 22529) (#("
" 0 1 (fontified nil)) . -22577) (22526 . 22578) 22430) nil (25517 54527 509929 202000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -22527) (undo-tree-id14 . -2) (undo-tree-id15 . -2) (undo-tree-id16 . -2) (undo-tree-id17 . -2) (undo-tree-id18 . -2) (undo-tree-id19 . -2) (undo-tree-id20 . -2) (undo-tree-id21 . -2) 22529 (22526 . 22529) 22430) nil (25517 54527 509925 45000) 0 nil])
([nil nil ((nil rear-nonsticky nil 22672 . 22673) (#("
" 0 1 (fontified nil)) . -22687) (22670 . 22688) 22582 (t 25517 54527 528967 346000)) nil (25525 12740 555118 690000) 0 nil])
([nil nil ((#("emacs" 0 5 (fontified t face font-lock-string-face)) . 22674) (undo-tree-id7 . -4)) nil (25525 12740 555117 16000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 22764) (undo-tree-id6 . -1)) nil (25525 12740 555116 45000) 0 nil])
([nil nil ((#("  \"\", NULL,
" 0 1 (fontified t) 1 2 (fontified t rear-nonsticky t) 2 3 (fontified t face font-lock-string-face) 3 4 (fontified t face font-lock-string-face) 4 6 (fontified t) 6 10 (fontified t face font-lock-constant-face) 10 11 (fontified t) 11 12 (fontified t)) . 22671) (undo-tree-id2 . -12) (undo-tree-id3 . -11) (undo-tree-id4 . -11) (undo-tree-id5 . 9)) nil (25525 12740 555114 712000) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil)) . -22763) (22751 . 22764) 22671) nil (25525 12740 555110 755000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -22752) (undo-tree-id1 . -2) 22754 (22751 . 22754) 22673) nil (25525 12740 555109 392000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -22765) (undo-tree-id0 . -2) 22767 (22764 . 22767) 22753) nil (25525 12740 555107 188000) 0 nil])
([nil nil ((nil rear-nonsticky nil 22810 . 22811) (nil fontified nil 22756 . 22811) (22756 . 22811) 22755) nil (25525 12740 555066 411000) 0 nil])
([nil nil ((#("\"" 0 1 (rear-nonsticky t fontified t face font-lock-string-face)) . 22810)) nil (25525 12740 555065 238000) 0 nil])
([nil nil ((22810 . 22811) (nil syntax-table nil 22818 . 22819) (nil syntax-table (1) 22810 . 22811)) nil (25525 12740 555064 377000) 0 nil])
([nil nil ((22810 . 22811)) nil (25525 12740 555063 695000) 0 nil])
([nil nil ((22767 . 22768) (nil syntax-table nil 22820 . 22821) (nil syntax-table (1) 22812 . 22813)) nil (25525 12740 555063 185000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 22753)) nil (25525 12740 555062 373000) 0 nil])
([nil nil ((#(" " 0 1 (rear-nonsticky t fontified t)) . 22753)) nil (25525 12740 555061 672000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t face font-lock-string-face)) . 22811)) nil (25525 12740 555060 960000) 0 nil])
([nil nil ((#("," 0 1 (fontified t face font-lock-string-face)) . 22811) (nil syntax-table nil 22818 . 22819) (nil syntax-table (1) 22753 . 22754)) nil (25525 12740 555060 199000) 0 nil])
([nil nil ((nil fontified nil 22844 . 22845) (nil face font-lock-string-face 22844 . 22845) (#(" " 0 1 (fontified nil face font-lock-string-face)) . 22841) (22842 . 22846) (nil syntax-table nil 22847 . 22848) (nil syntax-table (1) 22835 . 22836) (#(" " 0 1 (fontified nil face font-lock-string-face)) . 22832) (22833 . 22837) (nil syntax-table nil 22844 . 22845) (nil syntax-table (1) 22828 . 22829) (#(" " 0 1 (fontified nil face font-lock-string-face)) . 22825) (22826 . 22830) (nil syntax-table nil 22841 . 22842) (nil syntax-table (1) 22821 . 22822) (#(" " 0 1 (fontified nil face font-lock-string-face)) . 22818) (22819 . 22823) (nil syntax-table nil 22838 . 22839) (nil syntax-table (1) 22814 . 22815) (#(" " 0 1 (fontified nil face font-lock-string-face)) . 22811) (22812 . 22816) (nil syntax-table nil 22835 . 22836) (nil syntax-table (1) 22803 . 22804) (#(" " 0 1 (fontified nil face font-lock-string-face)) . 22800) (22801 . 22805) (nil syntax-table nil 22832 . 22833) (nil syntax-table (1) 22795 . 22796) (#(" " 0 1 (fontified nil face font-lock-string-face)) . 22792) (22793 . 22797) (nil syntax-table nil 22829 . 22830) (nil syntax-table (1) 22790 . 22791) (#(" " 0 1 (fontified nil face font-lock-string-face)) . 22787) (22788 . 22792) (nil syntax-table nil 22826 . 22827) (nil syntax-table (1) 22783 . 22784) (#(" " 0 1 (fontified nil face font-lock-string-face)) . 22780) (22781 . 22785) (nil syntax-table nil 22823 . 22824) (nil syntax-table (1) 22770 . 22771) (#(" " 0 1 (fontified nil face font-lock-string-face)) . 22767) (22768 . 22772) (nil syntax-table nil 22820 . 22821) (nil syntax-table (1) 22764 . 22765) (#(" " 0 1 (fontified t face font-lock-string-face)) . 22761) (22762 . 22766) (nil syntax-table nil 22817 . 22818) (nil syntax-table (1) 22753 . 22754)) nil (25525 12740 555056 301000) 0 nil])
([nil nil ((22753 . 22755) (nil syntax-table nil 22850 . 22851) (nil syntax-table (1) 22844 . 22845)) nil (25525 12740 555051 883000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t face font-lock-warning-face)) . 22846) (nil syntax-table nil 22852 . 22853) (nil syntax-table (1) 22846 . 22847)) nil (25525 12740 555046 363000) 0 nil])
([nil nil ((#("  \"xmodmap\", \"-e\", \"\\\"keycode\", \"105\", \"=\", \"less\", \"greater\", \"bar\", \"bar\", \"bar\", \"bar\\\"\", NULL,
" 0 2 (fontified t) 2 11 (face font-lock-string-face fontified t) 11 13 (fontified t) 13 17 (face font-lock-string-face fontified t) 17 19 (fontified t) 19 30 (face font-lock-string-face fontified t) 30 32 (fontified t) 32 37 (face font-lock-string-face fontified t) 37 39 (fontified t) 39 42 (face font-lock-string-face fontified t) 42 44 (fontified t) 44 50 (face font-lock-string-face fontified t) 50 52 (fontified t) 52 61 (face font-lock-string-face fontified t) 61 63 (fontified t) 63 68 (face font-lock-string-face fontified t) 68 70 (fontified t) 70 75 (face font-lock-string-face fontified t) 75 77 (fontified t) 77 82 (face font-lock-string-face fontified t) 82 84 (fontified t) 84 91 (face font-lock-string-face fontified t) 91 93 (fontified t) 93 97 (face font-lock-constant-face fontified t) 97 99 (fontified t)) . 22753) (undo-tree-id2 . -4) (undo-tree-id3 . -99) (undo-tree-id4 . -98) 22757 (t 25525 12740 574163 784000)) nil (25536 17228 24387 753000) 0 nil])
([nil nil ((nil rear-nonsticky nil 22772 . 22773) (#("
" 0 1 (fontified nil)) . -22869) (22770 . 22870) 22754) nil (25536 17228 24383 595000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -22771) (undo-tree-id1 . -2) 22773 (22770 . 22773) 22756) nil (25536 17228 24381 701000) 0 nil])
([nil nil ((44725 . 44730) (#("alacritty" 0 9 (face font-lock-string-face fontified t)) . 44725) (undo-tree-id0 . -8)) nil (25536 17228 24374 818000) 0 nil])
([nil nil ((22592 . 22599) (22591 . 22592) (22587 . 22591) (#("r" 0 1 (fontified t face font-lock-string-face)) . -22587) (undo-tree-id6 . -1) 22588 (22587 . 22588) (22584 . 22587) (22583 . 22584) (22582 . 22583) (#("xrandr\", \"--output\", \"eDP-1\", \"--auto\", \"--brightness\", \"1.25\", \"--gamma\", \"0.75" 0 7 (fontified t face font-lock-string-face) 7 9 (fontified t) 9 19 (fontified t face font-lock-string-face) 19 21 (fontified t) 21 28 (fontified t face font-lock-string-face) 28 30 (fontified t) 30 38 (fontified t face font-lock-string-face) 38 40 (fontified t) 40 54 (fontified t face font-lock-string-face) 54 56 (fontified t) 56 62 (fontified t face font-lock-string-face) 62 64 (fontified t) 64 73 (fontified t face font-lock-string-face) 73 75 (fontified t) 75 80 (fontified t face font-lock-string-face)) . 22582) (undo-tree-id7 . -6) (undo-tree-id8 . -79) (undo-tree-id9 . -79) (undo-tree-id10 . -6) (undo-tree-id11 . -6) (undo-tree-id12 . -79) (undo-tree-id13 . -79) (undo-tree-id14 . -79) 22661 (t 25536 17228 41453 218000)) nil (25537 51276 5318 437000) 0 nil])
([nil nil ((22623 . 22632) (#("s" 0 1 (fontified t face font-lock-string-face)) . -22623) (undo-tree-id0 . -1) 22624 (22621 . 22624) (22620 . 22621) (22613 . 22620) (22612 . 22613) (22611 . 22612) (#("redshift\", \"-l\", \"47.80391802377630:16.237492541587166\", \"-m\", \"randr" 0 9 (fontified t face font-lock-string-face) 9 11 (fontified t) 11 15 (fontified t face font-lock-string-face) 15 17 (fontified t) 17 55 (fontified t face font-lock-string-face) 55 57 (fontified t) 57 61 (fontified t face font-lock-string-face) 61 63 (fontified t) 63 69 (fontified t face font-lock-string-face)) . 22611) (undo-tree-id1 . -68) (undo-tree-id2 . -68) (undo-tree-id3 . -68) (undo-tree-id4 . -68) (undo-tree-id5 . -68) 22679) nil (25563 47996 453239 530000) 0 nil])
([nil nil ((#("xmodmap\", \"-e\", \"\\\"keycode\", \"105\", \"=\", \"less\", \"greater\", \"bar\", \"bar\", \"bar\", \"bar\\\"" 0 8 (face font-lock-string-face fontified t) 8 10 (fontified t) 10 14 (face font-lock-string-face fontified t) 14 16 (fontified t) 16 27 (face font-lock-string-face fontified t) 27 29 (fontified t) 29 34 (face font-lock-string-face fontified t) 34 36 (fontified t) 36 39 (face font-lock-string-face fontified t) 39 41 (fontified t) 41 47 (face font-lock-string-face fontified t) 47 49 (fontified t) 49 58 (face font-lock-string-face fontified t) 58 60 (fontified t) 60 65 (face font-lock-string-face fontified t) 65 67 (fontified t) 67 72 (face font-lock-string-face fontified t) 72 74 (fontified t) 74 79 (face font-lock-string-face fontified t) 79 81 (fontified t) 81 86 (face font-lock-string-face fontified t) 86 87 (face font-lock-string-face fontified t)) . 22431) (undo-tree-id91 . -86) (undo-tree-id92 . -86) (undo-tree-id93 . -86) (undo-tree-id94 . -39) (undo-tree-id95 . -43) (undo-tree-id96 . -44) (undo-tree-id97 . -45) (undo-tree-id98 . -46) (undo-tree-id99 . -47) (undo-tree-id100 . -48) (undo-tree-id101 . -49) (undo-tree-id102 . -50) (undo-tree-id103 . -51) (undo-tree-id104 . -52) (undo-tree-id105 . -53) (undo-tree-id106 . -54) (undo-tree-id107 . -55) (undo-tree-id108 . -56) (undo-tree-id109 . -57) (undo-tree-id110 . -58) (undo-tree-id111 . -59) (undo-tree-id112 . -60) (undo-tree-id113 . -61) (undo-tree-id114 . -62) (undo-tree-id115 . -63) (undo-tree-id116 . -64) (undo-tree-id117 . -65) (undo-tree-id118 . -66) (undo-tree-id119 . -67) (undo-tree-id120 . -68) (undo-tree-id121 . -69) (undo-tree-id122 . -70) (undo-tree-id123 . -71) (undo-tree-id124 . -72) (undo-tree-id125 . -73) (undo-tree-id126 . -74) (undo-tree-id127 . -75) (undo-tree-id128 . -76) (undo-tree-id129 . -77) (undo-tree-id130 . -78) (undo-tree-id131 . -79) (undo-tree-id132 . -80) (undo-tree-id133 . -81) (undo-tree-id134 . -82) (undo-tree-id135 . -83) (undo-tree-id136 . -84) (undo-tree-id137 . -85) (undo-tree-id138 . -86) (undo-tree-id139 . -86) (undo-tree-id140 . -86) (undo-tree-id141 . -86) (undo-tree-id142 . -86) (undo-tree-id143 . -86) (undo-tree-id144 . -86) (undo-tree-id145 . -86) (undo-tree-id146 . -86) (undo-tree-id147 . -86) (undo-tree-id148 . -86) (undo-tree-id149 . -86) (t 25537 51276 15009 850000)) ((22431 . 22518)) (25563 48000 841499 831000) 0 nil])
([nil nil ((#("  \"\", NULL,
" 0 2 (fontified t) 2 3 (face font-lock-string-face fontified t) 3 4 (face font-lock-string-face fontified t) 4 6 (fontified t) 6 10 (face font-lock-constant-face fontified t) 10 12 (fontified t)) . 22428) (undo-tree-id231 . -3) (undo-tree-id232 . -11) (undo-tree-id233 . -3) (undo-tree-id234 . 9) (undo-tree-id235 . -3) (undo-tree-id236 . -3) (undo-tree-id237 . 9) (undo-tree-id238 . -3) (undo-tree-id239 . -3) (undo-tree-id240 . -12) 22431 (t 25563 48065 624159 386000)) nil (25563 48230 574880 402000) 0 nil] [nil nil ((#("j" 0 1 (face font-lock-string-face fontified t)) . -22431) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) 22432 (22431 . 22432) (#("j" 0 1 (face font-lock-string-face fontified t)) . -22431) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) 22432 (22431 . 22432)) ((#("j" 0 1 (face font-lock-string-face fontified nil)) . 22431) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (22431 . 22432) (#("j" 0 1 (face font-lock-string-face fontified nil)) . 22431) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (22431 . 22432)) (25563 47995 673206 859000) 0 nil])
([nil nil ((nil rear-nonsticky nil 22429 . 22430) (#("
" 0 1 (fontified nil)) . -22456) (22427 . 22457) 22408) nil (25563 48230 574868 961000) 0 nil])
nil
([nil nil ((22441 . 22444) (#("mon1" 0 4 (face font-lock-string-face fontified t)) . 22441) (undo-tree-id230 . -3)) nil (25563 48230 574867 569000) 0 nil])
([nil nil ((#(".sh" 0 3 (face font-lock-string-face fontified t)) . 22444) (undo-tree-id224 . -2) (undo-tree-id225 . -2) (undo-tree-id226 . -2) (undo-tree-id227 . 3) (undo-tree-id228 . -2) (undo-tree-id229 . -2) 22446) nil (25563 48230 574865 535000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-string-face fontified t)) . -22437) (undo-tree-id166 . -1) 22438 (22437 . 22438) (#("p" 0 1 (face font-lock-string-face fontified t)) . -22437) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (#("t" 0 1 (face font-lock-string-face fontified t)) . -22438) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (#("s" 0 1 (face font-lock-string-face fontified t)) . -22439) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (#("/" 0 1 (face font-lock-string-face fontified t)) . -22440) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (#("k" 0 1 (face font-lock-string-face fontified t)) . -22441) (undo-tree-id195 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -22442) (undo-tree-id196 . -1) (#("y" 0 1 (face font-lock-string-face fontified t)) . -22443) (undo-tree-id197 . -1) 22444 (22441 . 22444) (#("x" 0 1 (face font-lock-string-face fontified t)) . -22441) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (#("m" 0 1 (face font-lock-string-face fontified t)) . -22442) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -22443) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (#("d" 0 1 (face font-lock-string-face fontified t)) . -22444) (undo-tree-id219 . -1) (#("m" 0 1 (face font-lock-string-face fontified t)) . -22445) (undo-tree-id220 . -1) (#("a" 0 1 (face font-lock-string-face fontified t)) . -22446) (undo-tree-id221 . -1) (#("p" 0 1 (face font-lock-string-face fontified t)) . -22447) (undo-tree-id222 . -1) (#("." 0 1 (face font-lock-string-face fontified t)) . -22448) (undo-tree-id223 . -1) 22449 (22444 . 22449)) nil (25563 48230 574855 407000) 0 nil])
([nil nil ((#("  \"~/scri\", NULL,
" 0 1 (fontified t) 1 2 (rear-nonsticky t fontified t) 2 9 (face font-lock-string-face fontified t) 9 10 (face font-lock-string-face fontified t) 10 12 (fontified t) 12 16 (face font-lock-constant-face fontified t) 16 17 (fontified t) 17 18 (fontified t)) . 22428) (undo-tree-id156 . -9) (undo-tree-id157 . -17) (undo-tree-id158 . -9) (undo-tree-id159 . 9) (undo-tree-id160 . -9) (undo-tree-id161 . -9) (undo-tree-id162 . 9) (undo-tree-id163 . -18) (undo-tree-id164 . -8) (undo-tree-id165 . -18) 22436) nil (25563 48230 574792 894000) 0 nil])
([nil nil ((nil rear-nonsticky nil 22429 . 22430) (#("
" 0 1 (fontified nil)) . -22456) (22427 . 22457) 22408) nil (25563 48230 574782 876000) 0 nil])
([nil nil ((22441 . 22449) (#("mon1" 0 4 (face font-lock-string-face fontified t)) . 22441) (undo-tree-id155 . -3)) nil (25563 48230 574781 413000) 0 nil])
([nil nil ((#("  \"xmodmap\", \"-e\", \"\\\"keycode\", \"105\", \"=\", \"less\", \"greater\", \"bar\", \"bar\", \"bar\", \"bar\\\"\", NULL,
" 0 2 (fontified t) 2 11 (face font-lock-string-face fontified t) 11 13 (fontified t) 13 17 (face font-lock-string-face fontified t) 17 19 (fontified t) 19 30 (face font-lock-string-face fontified t) 30 32 (fontified t) 32 37 (face font-lock-string-face fontified t) 37 39 (fontified t) 39 42 (face font-lock-string-face fontified t) 42 44 (fontified t) 44 50 (face font-lock-string-face fontified t) 50 52 (fontified t) 52 61 (face font-lock-string-face fontified t) 61 63 (fontified t) 63 68 (face font-lock-string-face fontified t) 68 70 (fontified t) 70 75 (face font-lock-string-face fontified t) 75 77 (fontified t) 77 82 (face font-lock-string-face fontified t) 82 84 (fontified t) 84 91 (face font-lock-string-face fontified t) 91 93 (fontified t) 93 97 (face font-lock-constant-face fontified t) 97 99 (fontified t)) . 22595) (undo-tree-id152 . -98) (undo-tree-id153 . -3) (undo-tree-id154 . -99) 22598) nil (25563 48230 574779 259000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 22575) (undo-tree-id151 . -1)) nil (25563 48230 574774 631000) 0 nil])
([nil nil ((nil rear-nonsticky nil 22594 . 22595) (#("
" 0 1 (fontified nil)) . -22609) (22592 . 22610) 22576) nil (25563 48230 574771 736000) 0 nil])
([nil nil ((22602 . 22605) (22596 . 22602) (#("emacs" 0 5 (face font-lock-string-face fontified t)) . 22596) (undo-tree-id150 . -4)) nil (25563 48230 574766 707000) 0 nil])
([nil nil ((#("" 0 1 (fontified t face font-lock-string-face)) . -22431) (undo-tree-id38 . -1) 22432 (22431 . 22432) (#("~/scripts/keyboard.sh" 0 14 (fontified t face font-lock-string-face) 14 21 (fontified t face font-lock-string-face)) . 22431) (undo-tree-id39 . -10) (undo-tree-id40 . -20) 22441 (t 25563 48230 597762 316000)) nil (25563 48416 878544 778000) 0 nil])
([nil nil ((nil rear-nonsticky nil 22451 . 22452) (nil fontified nil 22431 . 22452) (22431 . 22452) 22430) nil (25563 48416 878539 308000) 0 nil])
([nil nil ((#("  \"~/scripts/keyboard.sh\", NULL,
" 0 2 (fontified t) 2 3 (fontified t face font-lock-string-face) 3 23 (fontified t face font-lock-string-face) 23 24 (rear-nonsticky t fontified t face font-lock-string-face) 24 25 (fontified t face font-lock-string-face) 25 27 (fontified t) 27 31 (fontified t face font-lock-constant-face) 31 33 (fontified t)) . 22428) (undo-tree-id32 . -23) (undo-tree-id33 . -33) (undo-tree-id34 . -3) (undo-tree-id35 . -32) (undo-tree-id36 . 9) (undo-tree-id37 . -3) 22451) nil (25563 48416 878537 555000) 0 nil])
([nil nil ((nil rear-nonsticky nil 22582 . 22583) (#("
" 0 1 (fontified nil)) . -22613) (22580 . 22614) 22560) nil (25563 48416 878530 281000) 0 nil])
([nil nil ((#("  \"~/scripts/mon1.sh\", NULL,
" 0 2 (fontified t) 2 21 (fontified t face font-lock-string-face) 21 23 (fontified t) 23 27 (fontified t face font-lock-constant-face) 27 29 (fontified t)) . 22480) (undo-tree-id23 . -2) (undo-tree-id24 . -29) (undo-tree-id25 . -28) (undo-tree-id26 . -2) (undo-tree-id27 . -2) (undo-tree-id28 . -2) (undo-tree-id29 . -2) (undo-tree-id30 . -2) (undo-tree-id31 . -29) 22482) nil (25563 48416 878528 37000) 0 nil])
([nil nil ((nil rear-nonsticky nil 22430 . 22431) (#("
" 0 1 (fontified nil)) . -22457) (22428 . 22458)) nil (25563 48416 878517 748000) 0 nil])
([nil nil ((#("  \"slstatus\", NULL,
" 0 2 (fontified t) 2 12 (fontified t face font-lock-string-face) 12 14 (fontified t) 14 18 (fontified t face font-lock-constant-face) 18 20 (fontified t)) . 22408) (undo-tree-id0 . -2) (undo-tree-id1 . -20) (undo-tree-id2 . -19) (undo-tree-id3 . -20) (undo-tree-id4 . -20) (undo-tree-id5 . -20) (undo-tree-id6 . -20) (undo-tree-id7 . -20) (undo-tree-id8 . -20) (undo-tree-id9 . -2) (undo-tree-id10 . -2) (undo-tree-id11 . -2) (undo-tree-id12 . -2) (undo-tree-id13 . -2) (undo-tree-id14 . -2) (undo-tree-id15 . -2) (undo-tree-id16 . -2) (undo-tree-id17 . -2) (undo-tree-id18 . -2) (undo-tree-id19 . -2) (undo-tree-id20 . -2) (undo-tree-id21 . -2) (undo-tree-id22 . -20) 22410) nil (25563 48416 878515 133000) 0 nil])
([nil nil ((nil rear-nonsticky nil 22595 . 22596) (#("
" 0 1 (fontified nil)) . -22613) (22593 . 22614) 22561) nil (25563 48416 878446 925000) 0 nil])
([nil nil ((#("  \"~/scripts/mon1.sh\", NULL,
" 0 2 (fontified t) 2 17 (face font-lock-string-face fontified t) 17 21 (face font-lock-string-face fontified t) 21 23 (fontified t) 23 27 (face font-lock-constant-face fontified t) 27 29 (fontified t)) . 22409) (undo-tree-id21 . -13) (undo-tree-id22 . -29) (undo-tree-id23 . -28) 22422 (t 25563 48416 903526 578000)) nil (25589 4713 292867 70000) 0 nil])
([nil nil ((nil rear-nonsticky nil 22461 . 22462) (#("
" 0 1 (fontified nil)) . -22488) (22459 . 22489) 22422) nil (25589 4713 292862 251000) 0 nil])
([nil nil ((#("  \"~/scripts/keyboard.sh\", NULL,
" 0 2 (fontified t) 2 25 (face font-lock-string-face fontified t) 25 27 (fontified t) 27 31 (face font-lock-constant-face fontified t) 31 33 (fontified t)) . 22561) (undo-tree-id18 . -2) (undo-tree-id19 . -33) (undo-tree-id20 . -32) 22563) nil (25589 4713 292860 17000) 0 nil])
([nil nil ((nil rear-nonsticky nil 22583 . 22584) (#("
" 0 1 (fontified nil)) . -22614) (22581 . 22615)) nil (25589 4713 292855 529000) 0 nil])
([nil nil ((#("  \"nitrogen\", \"--random\", \"--set-zoom-fill\", NULL,
  \"~/scripts/mon1.sh\", NULL,
  \"~/scripts/redshift.sh\", NULL,
" 0 2 (fontified t) 2 12 (face font-lock-string-face fontified t) 12 14 (fontified t) 14 24 (face font-lock-string-face fontified t) 24 26 (fontified t) 26 43 (face font-lock-string-face fontified t) 43 45 (fontified t) 45 49 (face font-lock-constant-face fontified t) 49 50 (fontified t) 50 51 (fontified t) 51 52 (fontified t) 52 53 (rear-nonsticky t fontified t) 53 68 (face font-lock-string-face fontified t) 68 72 (face font-lock-string-face fontified t) 72 74 (fontified t) 74 78 (face font-lock-constant-face fontified t) 78 79 (fontified t) 79 80 (fontified t) 80 82 (fontified t) 82 105 (face font-lock-string-face fontified t) 105 107 (fontified t) 107 111 (face font-lock-constant-face fontified t) 111 113 (fontified t)) . 22409) (undo-tree-id10 . -2) (undo-tree-id11 . -51) (undo-tree-id12 . -82) (undo-tree-id13 . -112) (undo-tree-id14 . -82) (undo-tree-id15 . -2) (undo-tree-id16 . -2) (undo-tree-id17 . -82) 22411) nil (25589 4713 292853 274000) 0 nil])
([nil nil ((nil rear-nonsticky nil 22469 . 22470) (#("
" 0 1 (fontified nil)) . -22580) (22467 . 22581) 22448) nil (25589 4713 292843 115000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -22468) (undo-tree-id9 . -2) 22470 (22467 . 22470) 22450) nil (25589 4713 292840 801000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 22408) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1)) nil (25589 4713 292837 685000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 22408) (undo-tree-id3 . -1) (undo-tree-id4 . 1)) nil (25589 4713 292831 905000) 0 nil])
([nil nil ((nil rear-nonsticky nil 22467 . 22468) (#("
" 0 1 (fontified nil)) . -22485) (22465 . 22486) 22446) nil (25589 4713 292827 637000) 0 nil])
([nil nil ((22469 . 22478) (#("slstatus" 0 8 (face font-lock-string-face fontified t)) . 22469) (undo-tree-id0 . -7) (undo-tree-id1 . -8) (undo-tree-id2 . -8)) nil (25589 4713 292825 62000) 0 nil])
([nil nil ((22478 . 22479)) nil (25589 4713 292777 573000) 0 nil])
([nil nil ((nil rear-nonsticky nil 22490 . 22491) (nil fontified nil 22479 . 22491) (22479 . 22491) 22478) nil (25589 4713 292771 963000) 0 nil])
([nil nil ((22555 . 22556) (t 25589 4713 323165 245000)) nil (25589 5123 254712 408000) 0 nil])
([nil nil ((22585 . 22586)) nil (25589 5123 688938 163000) 0 nil])
([nil nil ((22559 . 22560) (nil syntax-table nil 22584 . 22585) (nil syntax-table (1) 22576 . 22577) (22558 . 22559) (nil syntax-table nil 22583 . 22584) (nil syntax-table (1) 22575 . 22576) (22557 . 22558) (nil syntax-table nil 22582 . 22583) (nil syntax-table (1) 22574 . 22575) (#(" " 0 1 (fontified t)) . -22557) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (nil syntax-table nil 22583 . 22584) (nil syntax-table (1) 22575 . 22576) (22557 . 22558) (nil syntax-table nil 22582 . 22583) (nil syntax-table (1) 22574 . 22575) (22556 . 22557)) nil (25589 5172 275419 636000) 0 nil] [nil nil ((#("\"" 0 1 (fontified t face font-lock-string-face)) . 22554)) ((22554 . 22555) (nil syntax-table nil 22580 . 22581) (nil syntax-table (1) 22572 . 22573)) (25589 5123 283127 739000) 0 nil])
([nil nil ((22593 . 22594) (nil syntax-table nil 22622 . 22623) (nil syntax-table (1) 22614 . 22615) (22592 . 22593) (nil syntax-table nil 22621 . 22622) (nil syntax-table (1) 22613 . 22614) (22591 . 22592) (nil syntax-table nil 22620 . 22621) (nil syntax-table (1) 22612 . 22613) (#(" " 0 1 (fontified t)) . -22591) (nil syntax-table nil 22621 . 22622) (nil syntax-table (1) 22613 . 22614) (22591 . 22592) (nil syntax-table nil 22620 . 22621) (nil syntax-table (1) 22612 . 22613) (22590 . 22591)) nil (25589 5172 275392 400000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t face font-lock-string-face)) . 22583) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (nil syntax-table nil 22572 . 22573) (nil syntax-table (15) 22580 . 22581) (nil syntax-table (15) 22572 . 22573) (nil syntax-table nil 22580 . 22581) (nil syntax-table (1) 22572 . 22573)) ((nil syntax-table nil 22572 . 22573) (nil syntax-table nil 22580 . 22581) (nil syntax-table (1) 22572 . 22573) (nil syntax-table nil 22580 . 22581) (nil syntax-table nil 22580 . 22581) (nil syntax-table (1) 22572 . 22573) (nil syntax-table nil 22572 . 22573) (nil syntax-table nil 22580 . 22581) (nil syntax-table (1) 22572 . 22573) (nil syntax-table nil 22580 . 22581) (nil syntax-table nil 22580 . 22581) (nil syntax-table (1) 22572 . 22573) (nil syntax-table nil 22572 . 22573) (nil syntax-table nil 22580 . 22581) (nil syntax-table (1) 22572 . 22573) (22583 . 22584) (nil syntax-table nil 22572 . 22573) (nil syntax-table (15) 22580 . 22581) (nil syntax-table (15) 22572 . 22573) (nil syntax-table nil 22613 . 22614) (nil syntax-table nil 22605 . 22606) (nil syntax-table nil 22580 . 22581) (nil syntax-table nil 22572 . 22573)) (25589 5123 254696 548000) 0 nil])
([nil nil ((#(" NULL," 0 1 (fontified t) 1 5 (fontified t face font-lock-constant-face) 5 6 (fontified t)) . 22579) (undo-tree-id8 . -5)) nil (25589 5172 275387 162000) 0 nil])
nil
([nil nil ((#(" NULL," 0 1 (fontified t) 1 5 (fontified t face font-lock-constant-face) 5 6 (fontified t)) . 22545) (undo-tree-id7 . -5)) nil (25589 5172 275382 414000) 0 nil])
([nil nil ((22571 . 22572) (#("  " 0 2 (fontified nil)) . 22571) (#("
" 0 1 (fontified t)) . -22571) (undo-tree-id5 . -1) (22545 . 22546) (#("  " 0 2 (fontified nil)) . 22545) (#("
" 0 1 (fontified t)) . -22545) (undo-tree-id6 . -1) 22544) nil (25589 5172 284600 940000) 0 nil])
([nil nil ((22615 . 22616) (22614 . 22615) (22613 . 22614) (nil syntax-table nil 22643 . 22644) (nil syntax-table (1) 22635 . 22636) (22612 . 22613) (nil syntax-table nil 22642 . 22643) (nil syntax-table (1) 22634 . 22635) (22611 . 22612)) nil (25589 5251 248395 574000) 0 nil] [nil nil ((22641 . 22642) (#("  " 0 2 (fontified nil)) . 22641) (undo-tree-id2 . 2) (#("
" 0 1 (fontified t)) . -22641) (undo-tree-id3 . -1) (undo-tree-id4 . -1) 22611) ((22641 . 22642) (22641 . 22643) (#(" " 0 1 (fontified t)) . 22641)) (25589 5172 275366 561000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -22607) (undo-tree-id35 . -1) 22521) nil (25589 5251 248390 824000) 0 nil])
nil
([nil nil ((#("NULL," 0 4 (fontified t face font-lock-constant-face) 4 5 (fontified t)) . 22602) (undo-tree-id34 . -4)) nil (25589 5251 248386 75000) 0 nil])
([nil nil ((22601 . 22602) (#("   " 0 1 (fontified nil) 1 3 (fontified nil)) . 22601) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (#("
" 0 1 (fontified t)) . -22602) (undo-tree-id33 . -1) 22601) nil (25589 5251 248380 767000) 0 nil])
([nil nil ((22519 . 22520) (22518 . 22519) (#(";" 0 1 (fontified t)) . -22518) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) 22519 (22518 . 22519) (22517 . 22518) (nil syntax-table nil 22651 . 22652) (nil syntax-table (1) 22643 . 22644) (22516 . 22517) (nil syntax-table nil 22650 . 22651) (nil syntax-table (1) 22642 . 22643) (22515 . 22516) (nil syntax-table nil 22649 . 22650) (nil syntax-table (1) 22641 . 22642) (22514 . 22515) (22513 . 22514) (22512 . 22513) (22511 . 22512) (nil syntax-table nil 22645 . 22646) (nil syntax-table (1) 22637 . 22638) (22510 . 22511) (nil syntax-table nil 22644 . 22645) (nil syntax-table (1) 22636 . 22637) (22509 . 22510) (nil syntax-table nil 22643 . 22644) (nil syntax-table (1) 22635 . 22636) (22508 . 22509) (nil syntax-table nil 22642 . 22643) (nil syntax-table (1) 22634 . 22635) (22507 . 22508) (nil syntax-table nil 22641 . 22642) (nil syntax-table (1) 22633 . 22634) (22506 . 22507) (nil syntax-table nil 22640 . 22641) (nil syntax-table (1) 22632 . 22633) (22505 . 22506) (nil syntax-table nil 22639 . 22640) (nil syntax-table (1) 22631 . 22632) (22504 . 22505) (nil syntax-table nil 22638 . 22639) (nil syntax-table (1) 22630 . 22631) (#("\"" 0 1 (fontified t face font-lock-string-face)) . -22504) (undo-tree-id29 . -1) 22505 (22504 . 22505) (nil syntax-table nil 22638 . 22639) (nil syntax-table (1) 22630 . 22631) (22503 . 22504)) nil (25589 5251 248367 845000) 0 nil])
([nil nil ((#("  \"keepassxc\", NULL,
  \"slstatus\", NULL,
  \"syncthing --no-browser\", NULL,

  \"sleep 5\", \"&&\", \"nitrogen\", \"--random\", \"--set-zoom-fill\", \"&\", \"~/scripts/mon1.sh\", \"&\", \"~/scripts/redshift.sh\", \"&\", \"~/scripts/keyboard.sh\", NULL,
  NULL /* terminate */
" 0 2 (fontified t) 2 13 (face font-lock-string-face fontified t) 13 15 (fontified t) 15 19 (face font-lock-constant-face fontified t) 19 23 (fontified t) 23 33 (face font-lock-string-face fontified t) 33 35 (fontified t) 35 39 (face font-lock-constant-face fontified t) 39 43 (fontified t) 43 67 (face font-lock-string-face fontified t) 67 69 (fontified t) 69 73 (face font-lock-constant-face fontified t) 73 78 (fontified t) 78 87 (face font-lock-string-face fontified t) 87 89 (fontified t) 89 93 (face font-lock-string-face fontified t) 93 95 (fontified t) 95 105 (face font-lock-string-face fontified t) 105 107 (fontified t) 107 117 (face font-lock-string-face fontified t) 117 119 (fontified t) 119 136 (face font-lock-string-face fontified t) 136 138 (fontified t) 138 141 (face font-lock-string-face fontified t) 141 143 (fontified t) 143 162 (face font-lock-string-face fontified t) 162 164 (fontified t) 164 167 (face font-lock-string-face fontified t) 167 169 (fontified t) 169 192 (face font-lock-string-face fontified t) 192 194 (fontified t) 194 197 (face font-lock-string-face fontified t) 197 199 (fontified t) 199 222 (face font-lock-string-face fontified t) 222 224 (fontified t) 224 228 (face font-lock-constant-face fontified t) 228 232 (fontified t) 232 236 (face font-lock-constant-face fontified t) 236 237 (fontified t) 237 240 (face font-lock-comment-delimiter-face fontified t) 240 249 (face font-lock-comment-face fontified t) 249 252 (face font-lock-comment-delimiter-face fontified t) 252 253 (fontified t)) . 22425) (undo-tree-id5 . -239) (undo-tree-id6 . -9) (undo-tree-id7 . -239) (undo-tree-id8 . -252) (undo-tree-id9 . -239) (undo-tree-id10 . -239) (undo-tree-id11 . -230) (undo-tree-id12 . -253) (undo-tree-id13 . -9) (undo-tree-id14 . -9) (undo-tree-id15 . -9) (undo-tree-id16 . -9) (undo-tree-id17 . -9) (undo-tree-id18 . -9) (undo-tree-id19 . -9) (undo-tree-id20 . -253) (undo-tree-id21 . -9) (undo-tree-id22 . -239) (undo-tree-id23 . -9) (undo-tree-id24 . -9) (undo-tree-id25 . -30) (undo-tree-id26 . -50) (undo-tree-id27 . -75) (undo-tree-id28 . -85) (undo-tree-id29 . -239) (undo-tree-id30 . -230) (undo-tree-id31 . -239) (undo-tree-id32 . -239) (undo-tree-id33 . -239) (undo-tree-id34 . -239) (undo-tree-id35 . -253) 22664 (t 25589 5251 279504 184000)) nil (25589 5658 572903 91000) 0 nil])
([nil nil ((22425 . 22433) (22421 . 22425) (22420 . 22421) (22415 . 22420) (#("i" 0 1 (face font-lock-string-face fontified t)) . -22415) (undo-tree-id0 . -1) (#("r" 0 1 (face font-lock-string-face fontified t)) . -22416) (undo-tree-id1 . -1) 22417 (22413 . 22417) (22412 . 22413) (22411 . 22412) (#("emacs" 0 5 (face font-lock-string-face fontified t)) . 22411) (undo-tree-id2 . -4) (undo-tree-id3 . -5) (undo-tree-id4 . -5)) nil (25591 54769 307625 377000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1556 . 1557) (nil fontified nil 1531 . 1557) (1531 . 1557) 1530 (t 25589 5658 597193 515000)) nil (25591 54793 540215 8000) 0 nil] [nil nil ((nil rear-nonsticky nil 1557 . 1558) (nil fontified nil 1532 . 1558) (1532 . 1558) 1531 (t 25589 5658 597193 515000)) ((#("  \"~/scripts/autostart.sh\"" 0 3 (fontified nil face font-lock-string-face) 3 25 (fontified nil) 25 26 (fontified nil rear-nonsticky nil face font-lock-string-face)) . 1532) (undo-tree-id0 . -25) (undo-tree-id1 . -26) (undo-tree-id2 . -26) (undo-tree-id3 . -25) (nil rear-nonsticky t 1557 . 1558)) (25591 54769 298561 899000) 0 nil])
([nil nil ((#("\"autostart.sh\"" 0 1 (fontified t face font-lock-string-face) 1 14 (fontified t face font-lock-string-face)) . 1557) (undo-tree-id51 . -13) (undo-tree-id52 . -1)) nil (25591 54793 540213 616000) 0 nil])
nil
([nil nil ((#("dwm" 0 3 (fontified t face font-lock-string-face)) . 1603) (undo-tree-id41 . -2) (undo-tree-id42 . -2) (undo-tree-id43 . -2) (undo-tree-id44 . -2) (undo-tree-id45 . -3) (undo-tree-id46 . -2) (undo-tree-id47 . -1) (undo-tree-id48 . -2) (undo-tree-id49 . -2) (undo-tree-id50 . -3) 1605) nil (25591 54793 540210 520000) 0 nil])
([nil nil ((#(".local/share" 0 12 (fontified t face font-lock-string-face)) . 1650) (undo-tree-id16 . -11) (undo-tree-id17 . -11) (undo-tree-id18 . -11) (undo-tree-id19 . -11) (undo-tree-id20 . -12) (undo-tree-id21 . -11) (undo-tree-id22 . -1) (undo-tree-id23 . -2) (undo-tree-id24 . -3) (undo-tree-id25 . -4) (undo-tree-id26 . -5) (undo-tree-id27 . -5) (undo-tree-id28 . -5) (undo-tree-id29 . -5) (undo-tree-id30 . -6) (undo-tree-id31 . -7) (undo-tree-id32 . -8) (undo-tree-id33 . -9) (undo-tree-id34 . -10) (undo-tree-id35 . -10) (undo-tree-id36 . -10) (undo-tree-id37 . -10) (undo-tree-id38 . -11) (undo-tree-id39 . -11) (undo-tree-id40 . -12) 1661) nil (25591 54793 542021 222000) 0 nil])
([nil nil ((#("autostart_blocking.sh" 0 1 (fontified t face font-lock-string-face) 1 21 (fontified t face font-lock-string-face)) . 1464) (undo-tree-id59 . -20) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -21) 1465) nil (25591 54802 155773 980000) 0 nil] [nil nil ((#("\"autostart_blocking.sh\";" 0 23 (fontified t face font-lock-string-face) 23 24 (fontified t)) . 1463) (undo-tree-id4 . -23) (undo-tree-id5 . -2) (undo-tree-id6 . -1) (undo-tree-id7 . -2) (undo-tree-id8 . -2) (undo-tree-id9 . -2) (undo-tree-id10 . -2) (undo-tree-id11 . -2) (undo-tree-id12 . -2) (undo-tree-id13 . -2) (undo-tree-id14 . -2) (undo-tree-id15 . -24) 1465) ((1463 . 1487)) (25591 54793 540169 152000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1510) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1)) nil (25591 54802 155745 646000) 0 nil])
nil
([nil nil ((#(" " 0 1 (fontified t)) . 1510) (undo-tree-id53 . 1) (undo-tree-id54 . -1) (undo-tree-id55 . -1)) nil (25591 55516 696212 44000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1485 . 1486) (nil fontified nil 1464 . 1486) (1464 . 1486) (t 25591 54802 188339 164000)) nil (25591 55583 521429 886000) 0 nil] [nil nil ((1420 . 1489) 1464 (t 25591 54802 188339 164000)) ((#("static const char autostartsh[]          = \"~/scripts/autostart.sh\";
" 0 1 (face font-lock-keyword-face fontified t c-is-sws t) 1 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 12 (face font-lock-keyword-face fontified t) 12 13 (fontified t) 13 16 (face font-lock-type-face fontified t) 16 17 (face font-lock-type-face c-type c-decl-id-start fontified t) 17 18 (fontified t) 18 29 (face font-lock-variable-name-face fontified t) 29 30 (face (rainbow-delimiters-depth-1-face) fontified t) 30 31 (face (rainbow-delimiters-depth-1-face) fontified t) 31 34 (fontified t) 34 43 (fontified t) 43 67 (face font-lock-string-face fontified t) 67 69 (fontified t)) . 1420) (undo-tree-id0 . -69) (undo-tree-id1 . -68) (undo-tree-id2 . -69)) (25591 55516 692992 726000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1608 . 1609) (nil fontified nil 1602 . 1609) (1602 . 1609)) nil (25591 55583 521425 137000) 0 nil])
nil
([nil nil ((1656 . 1657)) nil (25591 55583 521420 388000) 0 nil])
([nil nil ((1483 . 1492) (#("b" 0 1 (face font-lock-string-face fontified t)) . -1483) (undo-tree-id3 . -1) 1484 (1483 . 1484) (#("-" 0 1 (face font-lock-string-face fontified t)) . -1483) (undo-tree-id4 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -1484) (undo-tree-id5 . -1) 1485 (1484 . 1485) (#("b" 0 1 (face font-lock-string-face fontified t)) . -1484) (undo-tree-id6 . -1) (#("l" 0 1 (face font-lock-string-face fontified t)) . -1485) (undo-tree-id7 . -1) (#("c" 0 1 (face font-lock-string-face fontified t)) . -1486) (undo-tree-id8 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -1487) (undo-tree-id9 . -1) (#("k" 0 1 (face font-lock-string-face fontified t)) . -1488) (undo-tree-id10 . -1) 1489 (1483 . 1489)) nil (25591 55583 521410 191000) 0 nil])
([nil nil ((1611 . 1615) (#("d" 0 1 (fontified t face font-lock-string-face)) . -1611) (undo-tree-id4 . -1) 1612 (1611 . 1612) (#("scripts" 0 7 (fontified t face font-lock-string-face)) . 1611) (undo-tree-id5 . -6) (t 25591 55583 555193 170000)) nil (25610 54580 448229 349000) 0 nil])
([nil nil ((1612 . 1613) (1611 . 1612)) nil (25610 54580 448223 568000) 0 nil])
([nil nil ((1673 . 1678) (1672 . 1673) (1666 . 1672) (1665 . 1666) (#("." 0 1 (fontified t face font-lock-string-face)) . -1665) (undo-tree-id1 . -1) (#("l" 0 1 (fontified t face font-lock-string-face)) . -1666) (undo-tree-id2 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -1667) (undo-tree-id3 . -1) 1668 (1665 . 1668)) nil (25610 54580 448220 512000) 0 nil])
([nil nil ((#("." 0 1 (fontified t face font-lock-string-face)) . 1613)) nil (25610 54580 448211 424000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1635 . 1636) (nil fontified nil 1611 . 1636) (1611 . 1636) 1610) nil (25610 54580 448209 440000) 0 nil])
([nil nil ((#("~/dwm" 0 1 (fontified t face font-lock-string-face) 1 2 (fontified t face font-lock-string-face) 2 3 (fontified t face font-lock-string-face) 3 4 (fontified t face font-lock-string-face) 4 5 (fontified t face font-lock-string-face)) . 1636) (undo-tree-id0 . -4)) nil (25610 54580 448202 887000) 0 nil])
([nil nil ((#("~/scripts/" 0 10 (face font-lock-string-face fontified t)) . 1464) (undo-tree-id6 . -1) (undo-tree-id7 . -9) (undo-tree-id8 . -9) (undo-tree-id9 . -9) (undo-tree-id10 . -9) (t 25610 54580 479823 502000)) nil (25645 14785 297977 520000) 0 nil])
([nil nil ((#("~/scripts/" 0 10 (face font-lock-string-face fontified t)) . 1532) (undo-tree-id0 . -9) (undo-tree-id1 . -9) (undo-tree-id2 . -9) (undo-tree-id3 . -9) (undo-tree-id4 . -9) (undo-tree-id5 . -9) 1541) nil (25645 14785 297968 580000) 0 nil])
([nil nil ((#("	#if FIBONACCI_SPIRAL_LAYOUT
	{ \"(@)\",      spiral },
	#endif
" 0 2 (fontified t face font-lock-preprocessor-face c-is-sws t c-in-sws t) 2 4 (fontified t face font-lock-preprocessor-face c-in-sws t) 4 29 (fontified t c-in-sws t) 29 30 (fontified t c-is-sws t) 30 31 (fontified t c-is-sws t face (rainbow-delimiters-depth-2-face)) 31 32 (fontified t) 32 37 (fontified t face font-lock-string-face) 37 51 (fontified t) 51 52 (fontified t face (rainbow-delimiters-depth-2-face)) 52 54 (fontified t) 54 55 (fontified t face font-lock-preprocessor-face c-in-sws t c-is-sws t) 55 56 (fontified t face font-lock-preprocessor-face c-is-sws t c-in-sws t) 56 61 (fontified t face font-lock-preprocessor-face c-in-sws t) 61 62 (fontified t c-in-sws t)) . 38805) (undo-tree-id0 . -54) (undo-tree-id1 . -62) (undo-tree-id2 . -61) (undo-tree-id3 . -61) (undo-tree-id4 . -61) (undo-tree-id5 . -17) (undo-tree-id6 . -61) (undo-tree-id7 . -17) (undo-tree-id8 . -61) 38866 (t 25645 14785 322037 357000)) nil (25650 21040 349709 896000) 0 nil])
([nil nil ((nil rear-nonsticky nil 38232 . 38233) (#("
" 0 1 (c-in-sws t fontified nil)) . -38293) (38231 . 38294) 38204) nil (25650 21040 349611 600000) 0 nil])
([nil nil ((#("d" 0 1 (face font-lock-string-face fontified t)) . -1678) (undo-tree-id0 . -1) (#("w" 0 1 (face font-lock-string-face fontified t)) . -1679) (undo-tree-id1 . -1) (#("m" 0 1 (face font-lock-string-face fontified t)) . -1680) (undo-tree-id2 . -1) 1681 (1678 . 1681) (1677 . 1678) (t 25650 21040 379515 432000)) nil (25650 23059 42371 926000) 0 nil])
([nil nil ((1616 . 1617)) nil (25650 23059 42286 90000) 0 nil])
([nil nil ((#("~" 0 1 (face font-lock-string-face fontified t)) . 1591) (t 25650 23059 79073 316000)) nil (25650 23656 511133 536000) 0 nil])
([nil nil ((#("~" 0 1 (face font-lock-string-face fontified t)) . 1663)) nil (25650 23656 511128 787000) 0 nil])
([nil nil ((#("/" 0 1 (face font-lock-string-face fontified t)) . 1662) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (#("/" 0 1 (face font-lock-string-face fontified t)) . 1591) (undo-tree-id13 . -1) 1663) nil (25650 23656 511124 38000) 0 nil])
([nil nil ((#("/" 0 1 (face font-lock-string-face fontified t)) . 1614) (undo-tree-id9 . -1) (undo-tree-id10 . -1)) nil (25650 23656 511117 333000) 0 nil])
([nil nil ((#("/" 0 1 (face font-lock-string-face fontified t)) . 1673) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1)) nil (25650 23656 511109 92000) 0 nil])
([nil nil ((#("Programs/" 0 9 (face font-lock-string-face fontified t)) . 1591) (undo-tree-id19 . -8) (undo-tree-id20 . -8) (undo-tree-id21 . -8) (undo-tree-id22 . -8) (t 25650 23656 525020 760000)) nil (25650 23815 580809 611000) 0 nil])
([nil nil ((#("-flexipatch" 0 11 (face font-lock-string-face fontified t)) . 1594) (undo-tree-id14 . -10) (undo-tree-id15 . -10) (undo-tree-id16 . -10) (undo-tree-id17 . -10) (undo-tree-id18 . -10) 1604) nil (25650 23815 580798 715000) 0 nil])
([nil nil ((nil rear-nonsticky nil 44288 . 44289) (#("
" 0 1 (fontified nil)) . -44339) (44288 . 44340) 44287 (t 25650 23815 594426 475000)) nil (25659 46147 82726 290000) 0 nil])
([nil nil ((44314 . 44315) (44308 . 44314) (#("q" 0 1 (fontified t face font-lock-variable-name-face)) . -44308) (undo-tree-id75 . -1) (#("u" 0 1 (fontified t face font-lock-variable-name-face)) . -44309) (undo-tree-id76 . -1) (#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -44310) (undo-tree-id77 . -1) (#("e" 0 1 (fontified t face font-lock-variable-name-face)) . -44311) (undo-tree-id78 . -1) 44312 (44308 . 44312) (#("term" 0 4 (fontified t face font-lock-variable-name-face)) . 44308) (undo-tree-id79 . -3) (undo-tree-id80 . -3) (undo-tree-id81 . -3) (undo-tree-id82 . -3) (undo-tree-id83 . -3) 44311) nil (25659 46147 82723 896000) 0 nil])
([nil nil ((44327 . 44338) (#("kitty" 0 5 (fontified t face font-lock-string-face)) . 44327) (undo-tree-id74 . -4)) nil (25659 46147 82714 909000) 0 nil])
([nil nil ((nil rear-nonsticky nil 44348 . 44349) (#("
" 0 1 (fontified nil)) . -44408) (44348 . 44409) 44337) nil (25659 46147 82713 15000) 0 nil])
([nil nil ((44371 . 44378) (#("r" 0 1 (fontified t face font-lock-variable-name-face)) . -44371) (undo-tree-id68 . -1) 44372 (44369 . 44372) (44368 . 44369) (#("browser" 0 1 (fontified t face font-lock-variable-name-face) 1 2 (fontified t face font-lock-variable-name-face) 2 3 (fontified t face font-lock-variable-name-face) 3 4 (fontified t face font-lock-variable-name-face) 4 5 (fontified t face font-lock-variable-name-face) 5 6 (fontified t face font-lock-variable-name-face) 6 7 (fontified t face font-lock-variable-name-face)) . 44368) (undo-tree-id69 . -6) (undo-tree-id70 . -6) (undo-tree-id71 . -6) (undo-tree-id72 . -6) (undo-tree-id73 . -6) 44374) nil (25659 46147 82710 962000) 0 nil])
([nil nil ((44393 . 44395) (#("k" 0 1 (fontified t face font-lock-string-face)) . -44393) (undo-tree-id66 . -1) 44394 (44390 . 44394) (#("qutebrowser" 0 1 (fontified t face font-lock-string-face) 1 2 (fontified t face font-lock-string-face) 2 3 (fontified t face font-lock-string-face) 3 4 (fontified t face font-lock-string-face) 4 5 (fontified t face font-lock-string-face) 5 6 (fontified t face font-lock-string-face) 6 7 (fontified t face font-lock-string-face) 7 8 (fontified t face font-lock-string-face) 8 9 (fontified t face font-lock-string-face) 9 10 (fontified t face font-lock-string-face) 10 11 (fontified t face font-lock-string-face)) . 44390) (undo-tree-id67 . -10)) nil (25659 46147 82703 718000) 0 nil])
([nil nil ((nil rear-nonsticky nil 44405 . 44406) (#("
" 0 1 (fontified nil)) . -44462) (44405 . 44463) 44398) nil (25659 46147 82700 422000) 0 nil])
([nil nil ((44425 . 44432) (#("screenlock" 0 1 (fontified t face font-lock-variable-name-face) 1 2 (fontified t face font-lock-variable-name-face) 2 3 (fontified t face font-lock-variable-name-face) 3 4 (fontified t face font-lock-variable-name-face) 4 5 (fontified t face font-lock-variable-name-face) 5 6 (fontified t face font-lock-variable-name-face) 6 7 (fontified t face font-lock-variable-name-face) 7 8 (fontified t face font-lock-variable-name-face) 8 9 (fontified t face font-lock-variable-name-face) 9 10 (fontified t face font-lock-variable-name-face)) . 44425) (undo-tree-id61 . -9) (undo-tree-id62 . -9) (undo-tree-id63 . -9) (undo-tree-id64 . -9) (undo-tree-id65 . -9) 44434) nil (25659 46147 82698 959000) 0 nil])
([nil nil ((44444 . 44451) (#("slock" 0 1 (fontified t face font-lock-string-face) 1 2 (fontified t face font-lock-string-face) 2 3 (fontified t face font-lock-string-face) 3 4 (fontified t face font-lock-string-face) 4 5 (fontified t face font-lock-string-face)) . 44444) (undo-tree-id60 . -4)) nil (25659 46147 82690 53000) 0 nil])
([nil nil ((#("	" 0 1 (fontified t)) . -45831) (undo-tree-id59 . -1) 45832 (45830 . 45832) 45777) nil (25659 46147 82688 39000) 0 nil])
([nil nil ((nil rear-nonsticky nil 45831 . 45832) (#("
" 0 1 (fontified nil)) . -46121) (45831 . 46122)) nil (25659 46147 82685 614000) 0 nil])
([nil nil ((#("static const char *" 0 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t) 7 12 (fontified t face font-lock-keyword-face) 12 13 (fontified t) 13 16 (fontified t face font-lock-type-face) 16 17 (fontified t c-type c-decl-id-start face font-lock-type-face) 17 19 (fontified t)) . 45990) (undo-tree-id55 . -18) (undo-tree-id56 . -18) (undo-tree-id57 . -18) (undo-tree-id58 . -18) (#("static const char *" 0 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t) 7 12 (fontified t face font-lock-keyword-face) 12 13 (fontified t) 13 16 (fontified t face font-lock-type-face) 16 17 (fontified t c-type c-decl-id-start face font-lock-type-face) 17 19 (fontified t)) . 45952) (#("static const char *" 0 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t) 7 12 (fontified t face font-lock-keyword-face) 12 13 (fontified t) 13 16 (fontified t face font-lock-type-face) 16 17 (fontified t c-type c-decl-id-start face font-lock-type-face) 17 19 (fontified t)) . 45911) (#("static const char *" 0 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t) 7 12 (fontified t face font-lock-keyword-face) 12 13 (fontified t) 13 16 (fontified t face font-lock-type-face) 16 17 (fontified t c-type c-decl-id-start face font-lock-type-face) 17 19 (fontified t)) . 45879) (#("static const char *" 0 1 (fontified t face font-lock-keyword-face) 1 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t) 7 12 (fontified t face font-lock-keyword-face) 12 13 (fontified t) 13 16 (fontified t face font-lock-type-face) 16 17 (fontified t face font-lock-type-face) 17 19 (fontified t)) . 45832) 46084) nil (25659 46147 82683 621000) 0 nil])
([nil nil ((#("[]  = { \"Discord\", NULL };" 0 1 (fontified t face (rainbow-delimiters-depth-2-face)) 1 2 (fontified t face (rainbow-delimiters-depth-2-face)) 2 6 (fontified t) 6 7 (fontified t face (rainbow-delimiters-depth-2-face)) 7 8 (fontified t) 8 9 (fontified t face font-lock-string-face) 9 10 (fontified t face font-lock-string-face) 10 11 (fontified t face font-lock-string-face) 11 12 (fontified t face font-lock-string-face) 12 13 (fontified t face font-lock-string-face) 13 14 (fontified t face font-lock-string-face) 14 15 (fontified t face font-lock-string-face) 15 16 (fontified t face font-lock-string-face) 16 17 (fontified t face font-lock-string-face) 17 19 (fontified t) 19 23 (fontified t face font-lock-constant-face) 23 24 (fontified t) 24 25 (fontified t face (rainbow-delimiters-depth-2-face)) 25 26 (fontified t)) . 45883) (undo-tree-id50 . -25) (#("[]  = { \"slock\", NULL };" 0 1 (fontified t face (rainbow-delimiters-depth-2-face)) 1 2 (fontified t face (rainbow-delimiters-depth-2-face)) 2 6 (fontified t) 6 7 (fontified t face (rainbow-delimiters-depth-2-face)) 7 8 (fontified t) 8 9 (fontified t face font-lock-string-face) 9 10 (fontified t face font-lock-string-face) 10 11 (fontified t face font-lock-string-face) 11 12 (fontified t face font-lock-string-face) 12 13 (fontified t face font-lock-string-face) 13 14 (fontified t face font-lock-string-face) 14 15 (fontified t face font-lock-string-face) 15 17 (fontified t) 17 21 (fontified t face font-lock-constant-face) 21 22 (fontified t) 22 23 (fontified t face (rainbow-delimiters-depth-2-face)) 23 24 (fontified t)) . 45872) (undo-tree-id51 . -23) (#("[]  = { \"qutebrowser\", NULL };" 0 1 (fontified t face (rainbow-delimiters-depth-2-face)) 1 2 (fontified t face (rainbow-delimiters-depth-2-face)) 2 6 (fontified t) 6 7 (fontified t face (rainbow-delimiters-depth-2-face)) 7 8 (fontified t) 8 9 (fontified t face font-lock-string-face) 9 10 (fontified t face font-lock-string-face) 10 11 (fontified t face font-lock-string-face) 11 12 (fontified t face font-lock-string-face) 12 13 (fontified t face font-lock-string-face) 13 14 (fontified t face font-lock-string-face) 14 15 (fontified t face font-lock-string-face) 15 16 (fontified t face font-lock-string-face) 16 17 (fontified t face font-lock-string-face) 17 18 (fontified t face font-lock-string-face) 18 19 (fontified t face font-lock-string-face) 19 20 (fontified t face font-lock-string-face) 20 21 (fontified t face font-lock-string-face) 21 23 (fontified t) 23 27 (fontified t face font-lock-constant-face) 27 28 (fontified t) 28 29 (fontified t face (rainbow-delimiters-depth-2-face)) 29 30 (fontified t)) . 45858) (undo-tree-id52 . -29) (#("[]  = { \"kitty\", NULL };" 0 1 (fontified t face (rainbow-delimiters-depth-2-face)) 1 2 (fontified t face (rainbow-delimiters-depth-2-face)) 2 6 (fontified t) 6 7 (fontified t face (rainbow-delimiters-depth-2-face)) 7 8 (fontified t) 8 15 (fontified t face font-lock-string-face) 15 17 (fontified t) 17 21 (fontified t face font-lock-constant-face) 21 22 (fontified t) 22 23 (fontified t face (rainbow-delimiters-depth-2-face)) 23 24 (fontified t)) . 45847) (undo-tree-id53 . -23) (#("[] =  { \"rofi\", \"-show\", \"run\", NULL };" 0 1 (fontified t face (rainbow-delimiters-depth-2-face)) 1 2 (fontified t face (rainbow-delimiters-depth-2-face)) 2 6 (fontified t) 6 7 (fontified t face (rainbow-delimiters-depth-2-face)) 7 8 (fontified t) 8 14 (fontified t face font-lock-string-face) 14 16 (fontified t) 16 23 (fontified t face font-lock-string-face) 23 25 (fontified t) 25 30 (fontified t face font-lock-string-face) 30 32 (fontified t) 32 36 (fontified t face font-lock-constant-face) 36 37 (fontified t) 37 38 (fontified t face (rainbow-delimiters-depth-2-face)) 38 39 (fontified t)) . 45839) (undo-tree-id54 . -38)) nil (25659 46147 82678 181000) 0 nil])
([nil nil ((nil rear-nonsticky nil 45831 . 45832) (#("
" 0 1 (fontified nil)) . -45921) (45830 . 45922) 45742) nil (25659 46147 82672 590000) 0 nil])
([nil nil ((45915 . 45916) (#("d" 0 1 (fontified nil)) . 45915) (45914 . 45915) (#("m" 0 1 (fontified nil)) . 45914) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (45913 . 45914) (#("c" 0 1 (fontified nil)) . 45913) (45912 . 45913) (#("i" 0 1 (fontified nil)) . 45912) (45911 . 45912) (#("f" 0 1 (fontified nil)) . 45911) (45910 . 45911) (#("o" 0 1 (fontified nil)) . 45910) (45909 . 45910) (#("r" 0 1 (fontified t)) . 45909) 45915) nil (25659 46147 82668 853000) 0 nil])
([nil nil ((45915 . 45921)) nil (25659 46147 82663 493000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 45919)) nil (25659 46147 82662 662000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 45919)) nil (25659 46147 82661 790000) 0 nil])
([nil nil ((45832 . 45833) (45831 . 45832) (45830 . 45831) (45829 . 45830) (45735 . 45738) (45734 . 45735)) nil (25659 46147 82661 29000) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil)) . -46313) (45933 . 46314) 45927) nil (25659 46147 82659 566000) 0 nil])
([nil nil ((#("discordcmd" 0 1 (fontified t face font-lock-variable-name-face) 1 2 (fontified t face font-lock-variable-name-face) 2 3 (fontified t face font-lock-variable-name-face) 3 4 (fontified t face font-lock-variable-name-face) 4 5 (fontified t face font-lock-variable-name-face) 5 6 (fontified t face font-lock-variable-name-face) 6 7 (fontified t face font-lock-variable-name-face) 7 10 (fontified t face font-lock-variable-name-face)) . 46319) (undo-tree-id42 . -10) (undo-tree-id43 . -9) (undo-tree-id44 . -10) (undo-tree-id45 . -10) (#("screenlockcmd" 0 1 (fontified t face font-lock-type-face) 1 2 (fontified t face font-lock-type-face) 2 3 (fontified t face font-lock-type-face) 3 4 (fontified t face font-lock-type-face) 4 5 (fontified t face font-lock-type-face) 5 6 (fontified t face font-lock-type-face) 6 7 (fontified t face font-lock-type-face) 7 8 (fontified t face font-lock-type-face) 8 9 (fontified t face font-lock-type-face) 9 10 (fontified t face font-lock-type-face) 10 13 (fontified t face font-lock-type-face)) . 46318) (#("browsercmd" 0 1 (fontified t face font-lock-type-face) 1 2 (fontified t face font-lock-type-face) 2 3 (fontified t face font-lock-type-face) 3 4 (fontified t face font-lock-type-face) 4 5 (fontified t face font-lock-type-face) 5 6 (fontified t face font-lock-type-face) 6 7 (fontified t face font-lock-type-face) 7 10 (fontified t face font-lock-type-face)) . 46317) (#("termcmd" 0 7 (fontified t face font-lock-type-face)) . 46316) (#("roficmd" 0 7 (fontified t)) . 46315) 46366) nil (25659 46147 82657 632000) 0 nil])
([nil nil ((nil rear-nonsticky nil 45916 . 45917) (46349 . 46362) (46241 . 46254) (46133 . 46146) (46025 . 46038) (45917 . 45930) 45916) nil (25659 46147 82652 573000) 0 nil])
([nil nil ((#("           " 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t)) . 46318) (undo-tree-id38 . -10) (undo-tree-id39 . -10) (undo-tree-id40 . -10) (undo-tree-id41 . -10) (#("           " 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t)) . 46221) (#("           " 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t)) . 46124) (#("           " 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t)) . 46027) (#("           " 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t)) . 45930) 46372) nil (25659 46147 82649 928000) 0 nil])
([nil nil ((45738 . 45740)) nil (25659 46147 82644 428000) 0 nil])
([nil nil ((45836 . 45838)) nil (25659 46147 82643 416000) 0 nil])
([nil nil ((45618 . 45620)) nil (25659 46147 82642 384000) 0 nil])
([nil nil ((#("	{ MODKEY,                       XK_o,          spawn,                  {.v = roficmd       } },
" 0 1 (rear-nonsticky t fontified t) 1 2 (fontified t c-type c-not-decl face (rainbow-delimiters-depth-2-face)) 2 9 (fontified t) 9 10 (fontified t c-type c-not-decl) 10 37 (fontified t) 37 38 (fontified t c-type c-not-decl) 38 53 (fontified t) 53 54 (fontified t c-type c-not-decl) 54 72 (fontified t) 72 73 (fontified t face (rainbow-delimiters-depth-3-face)) 73 77 (fontified t) 77 78 (rear-nonsticky t fontified t) 78 85 (fontified t) 85 91 (fontified t) 91 92 (fontified t) 92 93 (fontified t face (rainbow-delimiters-depth-3-face)) 93 94 (fontified t) 94 95 (fontified t face (rainbow-delimiters-depth-2-face)) 95 96 (fontified t) 96 97 (fontified t)) . 45845) (undo-tree-id33 . -96) (undo-tree-id34 . -91) (undo-tree-id35 . -91) (undo-tree-id36 . -97) (undo-tree-id37 . -66) 45911) nil (25659 46147 82640 881000) 0 nil])
([nil nil ((#("	{ MODKEY,                       XK_o,          spawn,                  {.v = termcmd       } },
" 0 1 (rear-nonsticky t fontified t) 1 2 (fontified t c-type c-not-decl face (rainbow-delimiters-depth-2-face)) 2 9 (fontified t) 9 10 (fontified t c-type c-not-decl) 10 37 (fontified t) 37 38 (fontified t c-type c-not-decl) 38 53 (fontified t) 53 54 (fontified t c-type c-not-decl) 54 72 (fontified t) 72 73 (fontified t face (rainbow-delimiters-depth-3-face)) 73 78 (fontified t) 78 85 (fontified t) 85 91 (fontified t) 91 92 (fontified t) 92 93 (fontified t face (rainbow-delimiters-depth-3-face)) 93 94 (fontified t) 94 95 (fontified t face (rainbow-delimiters-depth-2-face)) 95 96 (fontified t) 96 97 (fontified t)) . 45845) (undo-tree-id30 . -96) (undo-tree-id31 . -97) (undo-tree-id32 . -66) 45911) nil (25659 46147 82634 459000) 0 nil])
([nil nil ((45881 . 45882) (#("o" 0 1 (fontified t)) . 45881)) nil (25659 46147 82630 502000) 0 nil])
([nil nil ((#("	{ MODKEY,                       XK_b,          spawn,                  {.v = browsercmd    } },
	{ MODKEY,                       XK_o,          spawn,                  {.v = screenlockcmd } },
	{ MODKEY,                       XK_o,          spawn,                  {.v = discordcmd    } },
" 0 1 (rear-nonsticky t fontified t) 1 2 (fontified t c-type c-not-decl face (rainbow-delimiters-depth-2-face)) 2 9 (fontified t) 9 10 (fontified t c-type c-not-decl) 10 36 (fontified t) 36 37 (fontified t) 37 38 (fontified t c-type c-not-decl) 38 53 (fontified t) 53 54 (fontified t c-type c-not-decl) 54 72 (fontified t) 72 73 (fontified t face (rainbow-delimiters-depth-3-face)) 73 78 (fontified t) 78 79 (fontified t) 79 80 (fontified t) 80 81 (fontified t) 81 82 (fontified t) 82 83 (fontified t) 83 84 (fontified t) 84 85 (fontified t) 85 88 (fontified t) 88 91 (fontified t) 91 92 (fontified t) 92 93 (fontified t face (rainbow-delimiters-depth-3-face)) 93 94 (fontified t) 94 95 (fontified t face (rainbow-delimiters-depth-2-face)) 95 96 (fontified t) 96 97 (fontified t) 97 98 (rear-nonsticky t fontified t) 98 99 (fontified t c-type c-not-decl face (rainbow-delimiters-depth-2-face)) 99 106 (fontified t) 106 107 (fontified t c-type c-not-decl) 107 134 (fontified t) 134 135 (fontified t c-type c-not-decl) 135 150 (fontified t) 150 151 (fontified t c-type c-not-decl) 151 169 (fontified t) 169 170 (fontified t face (rainbow-delimiters-depth-3-face)) 170 175 (fontified t) 175 176 (fontified t) 176 177 (fontified t) 177 178 (fontified t) 178 179 (fontified t) 179 180 (fontified t) 180 181 (fontified t) 181 182 (fontified t) 182 183 (fontified t) 183 184 (fontified t) 184 185 (fontified t) 185 188 (fontified t) 188 189 (fontified t) 189 190 (fontified t face (rainbow-delimiters-depth-3-face)) 190 191 (fontified t) 191 192 (fontified t face (rainbow-delimiters-depth-2-face)) 192 193 (fontified t) 193 194 (fontified t) 194 195 (rear-nonsticky t fontified t) 195 196 (fontified t c-type c-not-decl face (rainbow-delimiters-depth-2-face)) 196 203 (fontified t) 203 204 (fontified t c-type c-not-decl) 204 231 (fontified t) 231 232 (fontified t c-type c-not-decl) 232 247 (fontified t) 247 248 (fontified t c-type c-not-decl) 248 266 (fontified t) 266 267 (fontified t face (rainbow-delimiters-depth-3-face)) 267 272 (fontified t) 272 273 (fontified t) 273 274 (fontified t) 274 275 (fontified t) 275 276 (fontified t) 276 277 (fontified t) 277 278 (fontified t) 278 279 (fontified t) 279 282 (fontified t) 282 285 (fontified t) 285 286 (fontified t) 286 287 (fontified t face (rainbow-delimiters-depth-3-face)) 287 288 (fontified t) 288 289 (fontified t face (rainbow-delimiters-depth-2-face)) 289 290 (fontified t) 290 291 (fontified t)) . 45845) (undo-tree-id16 . -240) (undo-tree-id17 . -290) (undo-tree-id18 . -46) (undo-tree-id19 . -240) (undo-tree-id20 . -36) (undo-tree-id21 . -36) (undo-tree-id22 . -36) (undo-tree-id23 . -36) (undo-tree-id24 . -240) (undo-tree-id25 . -194) (undo-tree-id26 . -291) (undo-tree-id27 . -36) (undo-tree-id28 . -46) (undo-tree-id29 . -240) 46085) nil (25659 46147 82628 428000) 0 nil])
([nil nil ((#("	" 0 1 (fontified t)) . -74431) (undo-tree-id15 . -1) 74432 (74430 . 74432) 74336) nil (25659 46147 82612 899000) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil)) . -74722) (74431 . 74723)) nil (25659 46147 82610 154000) 0 nil])
([nil nil ((#("MODKEY" 0 6 (fontified t)) . 74617) (undo-tree-id12 . -5) (undo-tree-id13 . -5) (#("MODKEY" 0 6 (fontified t)) . 74526) (#("MODKEY" 0 6 (fontified t)) . 74435) (undo-tree-id14 . -6) 74629) nil (25659 46147 82607 970000) 0 nil])
([nil nil ((nil rear-nonsticky nil 74445 . 74446) (nil fontified nil 74435 . 74446) (74435 . 74446) 74434) nil (25659 46147 82603 912000) 0 nil])
([nil nil ((nil rear-nonsticky nil 74547 . 74548) (nil fontified nil 74537 . 74548) (74537 . 74548)) nil (25659 46147 82602 419000) 0 nil])
([nil nil ((nil rear-nonsticky nil 74649 . 74650) (nil fontified nil 74639 . 74650) (74639 . 74650)) nil (25659 46147 82600 666000) 0 nil])
([nil nil ((#("      " 0 6 (fontified t)) . 74656) (undo-tree-id8 . -5) (undo-tree-id9 . -5) (undo-tree-id10 . -5) (undo-tree-id11 . -5) (#("      " 0 6 (fontified t)) . 74560) (#("      " 0 6 (fontified t)) . 74464) 74673) nil (25659 46147 82597 851000) 0 nil])
([nil nil ((74467 . 74468) (#("b" 0 1 (fontified t)) . 74467)) nil (25659 46147 82591 850000) 0 nil])
([nil nil ((74690 . 74691) (74689 . 74690) (74688 . 74689) (74687 . 74688) (74686 . 74687) (74685 . 74686) (74684 . 74685) (74683 . 74684) (74682 . 74683) (74681 . 74682) (74584 . 74585) (74583 . 74584) (74582 . 74583) (74581 . 74582) (74580 . 74581) (74579 . 74580) (74578 . 74579) (74577 . 74578) (74576 . 74577) (74575 . 74576) (74478 . 74479) (74469 . 74478)) nil (25659 46147 82590 26000) 0 nil])
([nil nil ((#("       " 0 7 (fontified t)) . 74704) (undo-tree-id4 . -6) (undo-tree-id5 . -6) (undo-tree-id6 . -6) (undo-tree-id7 . -6) (#("       " 0 7 (fontified t)) . 74605) (#("       " 0 7 (fontified t)) . 74506) 74724) nil (25659 46147 82583 945000) 0 nil])
([nil nil ((#("  " 0 1 (fontified t c-is-sws t) 1 2 (fontified t c-is-sws t)) . -74893) (undo-tree-id1 . -2) (undo-tree-id2 . -2) (undo-tree-id3 . -2) 74895 (74892 . 74895) 74801) nil (25659 46147 82576 902000) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil)) . -75190) (74893 . 75191)) nil (25659 46147 87716 629000) 0 nil])
([nil nil ((75098 . 75104) (#("	" 0 1 (rear-nonsticky t fontified nil)) . 75098) (75101 . 75102) (74995 . 74999) (#("	" 0 1 (rear-nonsticky t fontified nil)) . 74995) (74998 . 74999) (74894 . 74896) (#("	" 0 1 (rear-nonsticky t fontified nil c-is-sws t)) . 74894) (74897 . 74898)) nil (25659 46391 402621 161000) 0 nil] [nil nil ((74894 . 74896) (#("	" 0 1 (rear-nonsticky t c-is-sws t fontified nil)) . 74894) (undo-tree-id0 . -1) (74897 . 74898)) ((#("{" 0 1 (fontified nil c-type c-not-decl face (rainbow-delimiters-depth-3-face))) . 74897) (undo-tree-id84 . 1) (undo-tree-id85 . -1) (74894 . 74895) (#("  " 0 2 (fontified t c-is-sws t)) . 74894)) (25659 46147 82565 130000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 74997)) nil (25659 46391 402619 548000) 0 nil])
nil
([nil nil ((#(" " 0 1 (fontified t)) . 74997)) nil (25659 46391 402618 546000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 75098)) nil (25659 46391 402617 814000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 75098)) nil (25659 46391 402617 103000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 75098)) nil (25659 46391 402616 332000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 75098)) nil (25659 46391 402615 650000) 0 nil])
([nil nil ((75141 . 75142) (#(" " 0 1 (fontified t)) . -75141) 75142 (75141 . 75142) (75140 . 75141) (75139 . 75140) (75138 . 75139) (75137 . 75138) (75136 . 75137) (75135 . 75136) (75134 . 75135) (75133 . 75134) (75132 . 75133) (75030 . 75031) (#(" " 0 1 (fontified t)) . -75030) 75031 (75030 . 75031) (75029 . 75030) (75028 . 75029) (75027 . 75028) (75026 . 75027) (75025 . 75026) (75024 . 75025) (75023 . 75024) (75022 . 75023) (75021 . 75022) (74919 . 74920) (#(" " 0 1 (fontified t)) . -74919) (undo-tree-id149 . -1) 74920 (74917 . 74920) (74916 . 74917) (74915 . 74916) (74914 . 74915) (74913 . 74914) (74911 . 74913) (74910 . 74911)) nil (25659 46391 402613 757000) 0 nil])
([nil nil ((75120 . 75126) (#("  " 0 2 (fontified nil)) . 75120) (undo-tree-id147 . -2) (undo-tree-id148 . -2) (75164 . 75165) (75006 . 75010) (#("  " 0 2 (fontified nil)) . 75006) (75050 . 75051) (74938 . 74939)) nil (25659 46391 402607 906000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 75049)) nil (25659 46391 402596 153000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 75049)) nil (25659 46391 402595 101000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 75161)) nil (25659 46391 402594 420000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 75161)) nil (25659 46391 402593 709000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 75161)) nil (25659 46391 402592 927000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 75161)) nil (25659 46391 402592 316000) 0 nil])
([nil nil ((75199 . 75200) (75198 . 75199) (75197 . 75198) (75196 . 75197) (75195 . 75196) (75194 . 75195) (75193 . 75194) (75192 . 75193) (75191 . 75192) (75190 . 75191) (75189 . 75190) (#("K" 0 1 (fontified t)) . -75189) 75190 (75189 . 75190) (#("0" 0 1 (fontified t)) . -75189) 75190 (75189 . 75190) (75188 . 75189) (75142 . 75144) (#("      " 0 6 (fontified nil)) . 75142) (75191 . 75192) (75078 . 75079) (75077 . 75078) (75076 . 75077) (75075 . 75076) (75074 . 75075) (75073 . 75074) (75072 . 75073) (75071 . 75072) (75070 . 75071) (75069 . 75070) (75068 . 75069) (#("K" 0 1 (fontified t)) . -75068) 75069 (75068 . 75069) (#("0" 0 1 (fontified t)) . -75068) 75069 (75068 . 75069) (75067 . 75068) (75019 . 75021) (#("    " 0 4 (fontified nil)) . 75019) (75068 . 75069) (74955 . 74956) (74953 . 74955) (74952 . 74953) (74950 . 74952) (74949 . 74950) (74948 . 74949) (74945 . 74948) (#("K" 0 1 (fontified t)) . -74945) (undo-tree-id145 . -1) 74946 (74945 . 74946) (#("0" 0 1 (fontified t)) . -74945) (undo-tree-id146 . -1) 74946 (74945 . 74946) (74944 . 74945) (74943 . 74944)) nil (25659 46391 402588 709000) 0 nil])
([nil nil ((74948 . 74949) (#("k" 0 1 (fontified t)) . 74948)) nil (25659 46391 402579 772000) 0 nil])
([nil nil ((75071 . 75072) (#("k" 0 1 (fontified t)) . 75071)) nil (25659 46391 402578 971000) 0 nil])
([nil nil ((75192 . 75193) (#("k" 0 1 (fontified t)) . 75192)) nil (25659 46391 402577 919000) 0 nil])
([nil nil ((#("	" 0 1 (fontified t face font-lock-preprocessor-face)) . 94981) (94939 . 94941) (#("	" 0 1 (c-is-sws t fontified nil)) . 94939) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 94901) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 94877) (94832 . 94834) (#("	" 0 1 (c-is-sws t fontified nil)) . 94832) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 94814) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 94787) (94740 . 94742) (#("	" 0 1 (fontified t)) . 94740) (94691 . 94693) (#("	" 0 1 (fontified t)) . 94691) (94643 . 94645) (#("	" 0 1 (fontified t)) . 94643) (94595 . 94597) (#("	" 0 1 (fontified t)) . 94595) (94547 . 94549) (#("	" 0 1 (fontified t)) . 94547) (94499 . 94501) (#("	" 0 1 (fontified t)) . 94499) (94451 . 94453) (#("	" 0 1 (fontified t)) . 94451) (94404 . 94406) (#("	" 0 1 (fontified t)) . 94404) (94357 . 94359) (#("	" 0 1 (fontified t)) . 94357) (94311 . 94313) (#("	" 0 1 (c-is-sws t fontified nil)) . 94311) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 94290) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 94259) (94207 . 94209) (#("	" 0 1 (c-is-sws t fontified nil)) . 94207) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 94182) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 94153) (94104 . 94106) (#("	" 0 1 (c-is-sws t fontified nil)) . 94104) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 94081) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 94056) (94010 . 94012) (#("	" 0 1 (c-is-sws t fontified nil)) . 94010) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 93991) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 93958) (93904 . 93906) (#("	" 0 1 (c-is-sws t fontified nil)) . 93904) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 93877) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 93850) (93802 . 93804) (#("	" 0 1 (c-is-sws t fontified nil)) . 93802) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 93781) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 93749) (93699 . 93701) (#("	" 0 1 (fontified t)) . 93699) (93649 . 93651) (#("	" 0 1 (c-is-sws t fontified nil)) . 93649) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 93623) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 93597) (93550 . 93552) (#("	" 0 1 (c-is-sws t fontified nil)) . 93550) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 93530) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 93504) (93457 . 93459) (#("	" 0 1 (c-is-sws t fontified nil)) . 93457) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 93437) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 93411) (93364 . 93366) (#("	" 0 1 (c-is-sws t fontified nil)) . 93364) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 93328) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 93305) (93255 . 93257) (#("	" 0 1 (c-is-sws t fontified nil)) . 93255) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 93238) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 93214) (93167 . 93169) (#("	" 0 1 (c-is-sws t fontified nil)) . 93167) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 93149) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 93119) (93068 . 93070) (#("	" 0 1 (c-is-sws t fontified nil)) . 93068) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 93026) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 92992) (92938 . 92940) (#("	" 0 1 (c-is-sws t fontified nil)) . 92938) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 92910) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 92884) (92837 . 92839) (#("	" 0 1 (c-is-sws t fontified nil)) . 92837) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 92817) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 92784) (92731 . 92733) (#("	" 0 1 (c-is-sws t fontified nil)) . 92731) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 92705) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 92680) (92634 . 92636) (#("	" 0 1 (c-is-sws t fontified nil)) . 92634) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 92615) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 92589) (92542 . 92544) (#("	" 0 1 (c-is-sws t fontified nil)) . 92542) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 92522) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 92486) (92434 . 92436) (#("	" 0 1 (c-is-sws t fontified nil)) . 92434) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 92404) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 92376) (92327 . 92329) (#("	" 0 1 (c-is-sws t fontified nil)) . 92327) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 92305) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 92277) (92227 . 92229) (#("	" 0 1 (c-is-sws t fontified nil)) . 92227) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 92205) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 92177) (92126 . 92128) (#("	" 0 1 (c-is-sws t fontified nil)) . 92126) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 92074) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 92046) (91997 . 91999) (#("	" 0 1 (c-is-sws t fontified nil)) . 91997) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 91975) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 91931) (91887 . 91889) (#("	" 0 1 (fontified t)) . 91887) (91841 . 91843) (#("	" 0 1 (c-is-sws t fontified nil)) . 91841) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 91802) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 91778) (91731 . 91733) (#("	" 0 1 (c-is-sws t fontified nil)) . 91731) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 91713) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 91689) (91644 . 91646) (#("	" 0 1 (c-is-sws t fontified nil)) . 91644) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 91626) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 91599) (91552 . 91554) (#("	" 0 1 (c-is-sws t fontified nil)) . 91552) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 91531) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 91505) (91458 . 91460) (#("	" 0 1 (c-is-sws t fontified nil)) . 91458) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 91438) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 91411) (91363 . 91365) (#("	" 0 1 (fontified t)) . 91363) (91316 . 91318) (#("	" 0 1 (c-is-sws t fontified nil)) . 91316) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 91295) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 91270) (91223 . 91225) (#("	" 0 1 (fontified t)) . 91223) (91168 . 91170) (#("	" 0 1 (fontified t)) . 91168) (91111 . 91113) (#("	" 0 1 (c-is-sws t fontified nil)) . 91111) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 91092) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 91067) (91019 . 91021) (#("	" 0 1 (c-is-sws t fontified nil)) . 91019) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 91000) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 90970) (90919 . 90921) (#("	" 0 1 (c-is-sws t fontified nil)) . 90919) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 90895) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 90862) (90807 . 90809) (#("	" 0 1 (fontified t)) . 90807) (90753 . 90755) (#("	" 0 1 (fontified t)) . 90753) (90705 . 90707) (#("	" 0 1 (fontified t)) . 90705) (90658 . 90660) (#("	" 0 1 (fontified t)) . 90658) (90609 . 90611) (#("	" 0 1 (fontified t)) . 90609) (90561 . 90563) (#("	" 0 1 (c-is-sws t fontified nil)) . 90561) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 90534) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 90506) (90457 . 90459) (#("	" 0 1 (c-is-sws t fontified nil)) . 90457) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 90435) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 90402) (90352 . 90354) (#("	" 0 1 (fontified t)) . 90352) (90299 . 90301) (#("	" 0 1 (fontified t)) . 90299) (90245 . 90247) (#("	" 0 1 (fontified t)) . 90245) (90198 . 90200) (#("	" 0 1 (c-is-sws t fontified nil)) . 90198) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 90171) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 90144) (90096 . 90098) (#("	" 0 1 (c-is-sws t fontified nil)) . 90096) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 90075) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 90050) (90005 . 90007) (#("	" 0 1 (c-is-sws t fontified nil)) . 90005) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 89986) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 89948) (89890 . 89892) (#("	" 0 1 (c-is-sws t fontified nil)) . 89890) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 89833) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 89808) (89756 . 89758) (#("	" 0 1 (fontified t)) . 89756) (89698 . 89700) (#("	" 0 1 (fontified t)) . 89698) (89638 . 89640) (#("	" 0 1 (fontified t)) . 89638) (89593 . 89595) (#("	" 0 1 (c-is-sws t fontified nil)) . 89593) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 89574) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 89545) (89496 . 89498) (#("	" 0 1 (c-is-sws t fontified nil)) . 89496) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 89473) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 89450) (89403 . 89405) (#("	" 0 1 (c-is-sws t fontified nil)) . 89403) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 89386) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 89358) (89311 . 89313) (#("	" 0 1 (c-is-sws t fontified nil)) . 89311) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 89289) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 89252) (89202 . 89204) (#("	" 0 1 (fontified nil c-is-sws t c-in-sws t)) . 89202) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 89171) (89129 . 89131) (#("	" 0 1 (fontified t)) . 89129) (89087 . 89089) (#("	" 0 1 (fontified t)) . 89087) (89039 . 89041) (#("	" 0 1 (fontified t)) . 89039) (88992 . 88994) (#("	" 0 1 (fontified t)) . 88992) (88940 . 88942) (#("	" 0 1 (fontified t)) . 88940) (88893 . 88895) (#("	" 0 1 (fontified t)) . 88893) (88849 . 88851) (#("	" 0 1 (fontified t)) . 88849) (88808 . 88810) (#("	" 0 1 (fontified t)) . 88808) (88762 . 88764) (#("	" 0 1 (fontified t)) . 88762) (88715 . 88717) (#("	" 0 1 (fontified t)) . 88715) (88665 . 88667) (#("	" 0 1 (fontified t)) . 88665) (88623 . 88625) (#("	" 0 1 (fontified t)) . 88623) (88575 . 88577) (#("	" 0 1 (fontified t)) . 88575) (88527 . 88529) (#("	" 0 1 (fontified t)) . 88527) (88479 . 88481) (#("	" 0 1 (fontified t)) . 88479) (88433 . 88435) (#("	" 0 1 (fontified t)) . 88433) (88262 . 88264) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 88262) (88215 . 88217) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t)) . 88215) (87993 . 87995) (#("	" 0 1 (fontified t)) . 87993) (87949 . 87951) (#("	" 0 1 (fontified t)) . 87949) (87910 . 87912) (#("	" 0 1 (fontified nil c-is-sws t c-in-sws t)) . 87910) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 87878) (87831 . 87833) (#("	" 0 1 (fontified t)) . 87831) (87784 . 87786) (#("	" 0 1 (c-is-sws t fontified nil)) . 87784) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 87758) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 87737) (87698 . 87700) (#("	" 0 1 (c-is-sws t fontified nil)) . 87698) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 87660) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 87636) (87594 . 87596) (#("	" 0 1 (fontified nil c-is-sws t c-in-sws t)) . 87594) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 87576) (87531 . 87533) (#("	" 0 1 (fontified nil c-is-sws t c-in-sws t)) . 87531) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 87500) (87451 . 87453) (#("	" 0 1 (c-is-sws t fontified nil)) . 87451) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 87426) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 87398) (87350 . 87352) (#("	" 0 1 (c-is-sws t fontified nil)) . 87350) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 87298) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 87273) (87229 . 87231) (#("	" 0 1 (fontified t)) . 87229) (87177 . 87179) (#("	" 0 1 (fontified t)) . 87177) (87123 . 87125) (#("	" 0 1 (c-is-sws t fontified nil)) . 87123) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 87104) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 87077) (87032 . 87034) (#("	" 0 1 (c-is-sws t fontified nil)) . 87032) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 87011) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 86973) (86918 . 86920) (#("	" 0 1 (c-is-sws t fontified nil)) . 86918) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 86861) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 86828) (86777 . 86779) (#("	" 0 1 (c-is-sws t fontified nil)) . 86777) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 86750) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 86713) (86666 . 86668) (#("	" 0 1 (c-is-sws t fontified nil)) . 86666) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 86635) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 86608) (86564 . 86566) (#("	" 0 1 (c-is-sws t fontified nil)) . 86564) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 86543) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 86517) (86473 . 86475) (#("	" 0 1 (fontified nil c-is-sws t c-in-sws t)) . 86473) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 86453) (86407 . 86409) (#("	" 0 1 (fontified t)) . 86407) (86363 . 86365) (#("	" 0 1 (fontified t)) . 86363) (86323 . 86325) (#("	" 0 1 (fontified t)) . 86323) (86280 . 86282) (#("	" 0 1 (fontified t)) . 86280) (86242 . 86244) (#("	" 0 1 (fontified t)) . 86242) (86195 . 86197) (#("	" 0 1 (fontified nil c-is-sws t c-in-sws t)) . 86195) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 86168) (86123 . 86125) (#("	" 0 1 (fontified t)) . 86123) (86079 . 86081) (#("	" 0 1 (c-is-sws t fontified nil)) . 86079) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 86058) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 86029) (85983 . 85985) (#("	" 0 1 (c-is-sws t fontified nil)) . 85983) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 85960) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 85932) (85886 . 85888) (#("	" 0 1 (c-is-sws t fontified nil)) . 85886) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 85864) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 85841) (85794 . 85796) (#("	" 0 1 (c-is-sws t fontified nil)) . 85794) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 85777) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 85749) (85705 . 85707) (#("	" 0 1 (c-is-sws t fontified nil)) . 85705) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 85683) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 85655) (85608 . 85610) (#("	" 0 1 (c-is-sws t fontified nil)) . 85608) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 85586) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 85556) (85508 . 85510) (#("	" 0 1 (c-is-sws t fontified nil)) . 85508) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 85466) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 85432) (85381 . 85383) (#("	" 0 1 (c-is-sws t fontified nil)) . 85381) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 85353) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 85327) (85283 . 85285) (#("	" 0 1 (c-is-sws t fontified nil)) . 85283) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 85263) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 85231) (85181 . 85183) (#("	" 0 1 (c-is-sws t fontified nil)) . 85181) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 85155) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 85130) (85087 . 85089) (#("	" 0 1 (c-is-sws t fontified nil)) . 85087) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 85068) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 85042) (84998 . 85000) (#("	" 0 1 (c-is-sws t fontified nil)) . 84998) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 84978) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 84942) (84893 . 84895) (#("	" 0 1 (fontified nil c-is-sws t c-in-sws t)) . 84893) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 84863) (84818 . 84820) (#("	" 0 1 (fontified t)) . 84818) (84777 . 84779) (#("	" 0 1 (fontified t)) . 84777) (84733 . 84735) (#("	" 0 1 (fontified t)) . 84733) (84694 . 84696) (#("	" 0 1 (fontified nil c-is-sws t c-in-sws t)) . 84694) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 84667) (84623 . 84625) (#("	" 0 1 (fontified t)) . 84623) (84577 . 84579) (#("	" 0 1 (fontified t)) . 84577) (84532 . 84534) (#("	" 0 1 (fontified t)) . 84532) (84487 . 84489) (#("	" 0 1 (fontified t)) . 84487) (84442 . 84444) (#("	" 0 1 (fontified t)) . 84442) (84397 . 84399) (#("	" 0 1 (fontified t)) . 84397) (84352 . 84354) (#("	" 0 1 (fontified t)) . 84352) (84308 . 84310) (#("	" 0 1 (fontified t)) . 84308) (84264 . 84266) (#("	" 0 1 (fontified t)) . 84264) (84221 . 84223) (#("	" 0 1 (fontified nil c-is-sws t c-in-sws t)) . 84221) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 84200) (84161 . 84163) (#("	" 0 1 (fontified t)) . 84161) (84120 . 84122) (#("	" 0 1 (fontified nil c-is-sws t c-in-sws t)) . 84120) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 84091) (84045 . 84047) (#("	" 0 1 (c-is-sws t fontified nil)) . 84045) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 84022) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 83997) (83954 . 83956) (#("	" 0 1 (c-is-sws t fontified nil)) . 83954) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 83935) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 83910) (83865 . 83867) (#("	" 0 1 (c-is-sws t fontified nil)) . 83865) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 83846) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 83821) (83772 . 83774) (#("	" 0 1 (fontified t)) . 83772) (83717 . 83719) (#("	" 0 1 (fontified t)) . 83717) (83660 . 83662) (#("	" 0 1 (fontified t)) . 83660) (83618 . 83620) (#("	" 0 1 (c-is-sws t fontified nil)) . 83618) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 83599) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 83575) (83533 . 83535) (#("	" 0 1 (c-is-sws t fontified nil)) . 83533) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 83515) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 83489) (83445 . 83447) (#("	" 0 1 (c-is-sws t fontified nil)) . 83445) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 83425) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 83402) (83359 . 83361) (#("	" 0 1 (c-is-sws t fontified nil)) . 83359) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 83342) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 83309) (83262 . 83264) (#("	" 0 1 (fontified t)) . 83262) (83212 . 83214) (#("	" 0 1 (fontified t)) . 83212) (83161 . 83163) (#("	" 0 1 (fontified t)) . 83161) (83117 . 83119) (#("	" 0 1 (c-is-sws t fontified nil)) . 83117) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 83090) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 83046) (83005 . 83007) (#("	" 0 1 (fontified t)) . 83005) (82962 . 82964) (#("	" 0 1 (c-is-sws t fontified nil)) . 82962) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 82923) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 82893) (82845 . 82847) (#("	" 0 1 (c-is-sws t fontified nil)) . 82845) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 82821) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 82793) (82747 . 82749) (#("	" 0 1 (c-is-sws t fontified nil)) . 82747) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 82725) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 82699) (82655 . 82657) (#("	" 0 1 (c-is-sws t fontified nil)) . 82655) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 82635) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 82609) (82565 . 82567) (#("	" 0 1 (c-is-sws t fontified nil)) . 82565) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 82529) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 82496) (82444 . 82446) (#("	" 0 1 (fontified t)) . 82444) (82393 . 82395) (#("	" 0 1 (fontified t)) . 82393) (82349 . 82351) (#("	" 0 1 (fontified t)) . 82349) (82305 . 82307) (#("	" 0 1 (fontified t)) . 82305) (82259 . 82261) (#("	" 0 1 (fontified t)) . 82259) (82214 . 82216) (#("	" 0 1 (c-is-sws t fontified nil)) . 82214) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 82187) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 82159) (82113 . 82115) (#("	" 0 1 (c-is-sws t fontified nil)) . 82113) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 82091) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 82066) (82023 . 82025) (#("	" 0 1 (c-is-sws t fontified nil)) . 82023) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 82004) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 81980) (81936 . 81938) (#("	" 0 1 (fontified nil c-is-sws t c-in-sws t)) . 81936) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 81918) (81875 . 81877) (#("	" 0 1 (fontified t)) . 81875) (81826 . 81828) (#("	" 0 1 (fontified t)) . 81826) (81781 . 81783) (#("	" 0 1 (fontified t)) . 81781) (81737 . 81739) (#("	" 0 1 (fontified t)) . 81737) (81694 . 81696) (#("	" 0 1 (fontified t)) . 81694) (81649 . 81651) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 81649) (81606 . 81608) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t)) . 81606) (#("	" 0 1 (fontified t face font-lock-preprocessor-face)) . 81390) (81304 . 81306) (#("	" 0 1 (fontified nil c-is-sws t c-in-sws t)) . 81304) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 81290) (81204 . 81206) (#("	" 0 1 (fontified t)) . 81204) (81118 . 81120) (#("	" 0 1 (fontified t)) . 81118) (81032 . 81034) (#("	" 0 1 (fontified t)) . 81032) (80946 . 80948) (#("	" 0 1 (fontified nil c-is-sws t c-in-sws t)) . 80946) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 80920) (80834 . 80836) (#("	" 0 1 (c-is-sws t fontified nil)) . 80834) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 80814) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 80788) (80702 . 80704) (#("	" 0 1 (c-is-sws t fontified nil)) . 80702) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 80666) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 80640) (80533 . 80535) (#("	" 0 1 (fontified t)) . 80533) (80426 . 80428) (#("	" 0 1 (fontified t)) . 80426) (80319 . 80321) (#("	" 0 1 (fontified t)) . 80319) (80212 . 80214) (#("	" 0 1 (fontified nil c-is-sws t c-in-sws t)) . 80212) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 80192) (80106 . 80108) (#("	" 0 1 (fontified t)) . 80106) (80020 . 80022) (#("	" 0 1 (fontified nil c-is-sws t c-in-sws t)) . 80020) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 79993) (79907 . 79909) (#("	" 0 1 (fontified nil c-is-sws t c-in-sws t)) . 79907) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 79901) (79810 . 79812) (#("	" 0 1 (fontified t c-is-sws t)) . 79810) (79804 . 79807) (#("	 " 0 2 (fontified t face font-lock-comment-delimiter-face)) . 79804) (79772 . 79775) (#("	 " 0 2 (fontified t face font-lock-comment-face)) . 79772) (79688 . 79691) (#("	 " 0 2 (fontified t face font-lock-comment-face)) . 79688) (79605 . 79608) (#("	 " 0 2 (fontified t face font-lock-comment-face)) . 79605) (79523 . 79526) (#("	 " 0 2 (fontified t face font-lock-comment-face)) . 79523) (79518 . 79521) (#("	 " 0 2 (fontified t face font-lock-comment-face)) . 79518) (79469 . 79472) (#("	 " 0 2 (fontified t face font-lock-comment-face)) . 79469) (79413 . 79416) (#("	 " 0 2 (fontified t face font-lock-comment-face)) . 79413) (79358 . 79361) (#("	 " 0 2 (c-in-sws t fontified t face font-lock-comment-face)) . 79358) (79300 . 79302) (#("	" 0 1 (fontified nil c-is-sws t)) . 79300) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 79279) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 79249) (79151 . 79153) (#("	" 0 1 (fontified nil c-is-sws t c-in-sws t)) . 79151) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 79145) (79045 . 79047) (#("	" 0 1 (fontified t)) . 79045) (78945 . 78947) (#("	" 0 1 (fontified t)) . 78945) (78845 . 78847) (#("	" 0 1 (fontified nil c-is-sws t c-in-sws t)) . 78845) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 78819) (78727 . 78729) (#("	" 0 1 (fontified t)) . 78727) (78635 . 78637) (#("	" 0 1 (fontified t)) . 78635) (78543 . 78545) (#("	" 0 1 (fontified nil c-is-sws t c-in-sws t)) . 78543) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 78496) (78410 . 78412) (#("	" 0 1 (fontified nil c-is-sws t c-in-sws t)) . 78410) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 78374) (78288 . 78290) (#("	" 0 1 (fontified t)) . 78288) (78202 . 78204) (#("	" 0 1 (c-is-sws t fontified nil)) . 78202) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 78172) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 78141) (78040 . 78042) (#("	" 0 1 (fontified nil c-is-sws t c-in-sws t)) . 78040) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 78034) (77948 . 77950) (#("	" 0 1 (fontified nil c-is-sws t c-in-sws t)) . 77948) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 77923) (77837 . 77839) (#("	" 0 1 (fontified nil c-is-sws t c-in-sws t)) . 77837) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 77804) (77706 . 77708) (#("	" 0 1 (c-is-sws t fontified nil)) . 77706) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face)) . 77679) (77588 . 77590) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t)) . 77588) (77126 . 77128) (#("	" 0 1 (fontified t)) . 77126) (77000 . 77002) (#("	" 0 1 (fontified t)) . 77000) (76880 . 76882) (#("	" 0 1 (fontified t)) . 76880) (76760 . 76762) (#("	" 0 1 (fontified t)) . 76760) (76629 . 76631) (#("	" 0 1 (fontified t)) . 76629) (76498 . 76500) (#("	" 0 1 (fontified t)) . 76498) (76369 . 76371) (#("	" 0 1 (fontified t)) . 76369) (76240 . 76242) (#("	" 0 1 (fontified t)) . 76240) (76111 . 76113) (#("	" 0 1 (fontified t)) . 76111) (75976 . 75978) (#("	" 0 1 (fontified t)) . 75976) (75856 . 75858) (#("	" 0 1 (fontified t)) . 75856) (75721 . 75723) (#("	" 0 1 (fontified t)) . 75721) (75586 . 75588) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t)) . 75586) (75091 . 75093) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t)) . 75091) (74951 . 74953) (#("	" 0 1 (rear-nonsticky t fontified t)) . 74951) (74851 . 74853) (#("	" 0 1 (rear-nonsticky t fontified t)) . 74851) (74751 . 74753) (#("	" 0 1 (rear-nonsticky t fontified t)) . 74751) (74653 . 74655) (#("	" 0 1 (fontified t)) . 74653) (74571 . 74573) (#("	" 0 1 (fontified t)) . 74571) (74489 . 74491) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 74489) (74402 . 74404) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t)) . 74402) (74272 . 74274) (#("	" 0 1 (fontified t)) . 74272) (74196 . 74198) (#("	" 0 1 (fontified t)) . 74196) (74120 . 74122) (#("	" 0 1 (fontified t)) . 74120) (74044 . 74046) (#("	" 0 1 (fontified t)) . 74044) (73968 . 73970) (#("	" 0 1 (fontified t)) . 73968) (73892 . 73894) (#("	" 0 1 (fontified t)) . 73892) (73816 . 73818) (#("	" 0 1 (fontified t)) . 73816) (73740 . 73742) (#("	" 0 1 (fontified t)) . 73740) (73664 . 73666) (#("	" 0 1 (fontified nil c-is-sws t c-in-sws t)) . 73664) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 73637) (73557 . 73559) (#("	" 0 1 (fontified t)) . 73557) (73471 . 73473) (#("	" 0 1 (fontified t)) . 73471) (73385 . 73387) (#("	" 0 1 (c-is-sws t fontified nil)) . 73385) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 73364) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 73335) (73248 . 73250) (#("	" 0 1 (fontified t)) . 73248) (73161 . 73163) (#("	" 0 1 (c-is-sws t fontified nil)) . 73161) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 73138) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 73110) (73024 . 73026) (#("	" 0 1 (fontified t)) . 73024) (72937 . 72939) (#("	" 0 1 (fontified t)) . 72937) (72850 . 72852) (#("	" 0 1 (c-is-sws t fontified nil)) . 72850) (#("	" 0 1 (c-is-sws t c-in-sws t fontified nil face font-lock-preprocessor-face)) . 72828) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 72803) (72702 . 72704) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 72702) (72601 . 72603) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 72601) (72500 . 72502) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 72500) (72399 . 72401) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 72399) (72298 . 72300) (#("	" 0 1 (c-is-sws t fontified t)) . 72298) (72197 . 72199) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 72197) (72096 . 72098) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 72096) (71995 . 71997) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 71995) (71894 . 71896) (#("	" 0 1 (fontified t c-is-sws t)) . 71894) (71795 . 71797) (#("	" 0 1 (fontified t c-is-sws t)) . 71795) (71692 . 71694) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 71692) (71589 . 71591) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 71589) (71486 . 71488) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 71486) (71383 . 71385) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 71383) (71280 . 71282) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 71280) (71177 . 71179) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 71177) (71074 . 71076) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 71074) (70971 . 70973) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 70971) (70868 . 70870) (#("	" 0 1 (fontified t c-is-sws t)) . 70868) (70763 . 70765) (#("	" 0 1 (fontified t c-is-sws t)) . 70763) (70660 . 70662) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 70660) (70557 . 70559) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 70557) (70454 . 70456) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 70454) (70351 . 70353) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 70351) (70248 . 70250) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 70248) (70145 . 70147) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 70145) (70042 . 70044) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 70042) (69939 . 69941) (#("	" 0 1 (fontified t c-is-sws t)) . 69939) (69869 . 69871) (#("	" 0 1 (fontified t c-is-sws t)) . 69869) (69766 . 69768) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 69766) (69663 . 69665) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 69663) (69560 . 69562) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 69560) (69457 . 69459) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 69457) (69354 . 69356) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 69354) (69251 . 69253) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 69251) (69148 . 69150) (#("	" 0 1 (c-is-sws t fontified t)) . 69148) (69045 . 69047) (#("	" 0 1 (fontified t c-is-sws t)) . 69045) (68987 . 68989) (#("	" 0 1 (fontified t c-is-sws t)) . 68987) (68898 . 68901) (#("	 " 0 2 (c-in-sws t fontified t face font-lock-comment-face)) . 68898) (68802 . 68804) (#("	" 0 1 (fontified nil c-is-sws t)) . 68802) (#("	" 0 1 (c-is-sws t c-in-sws t fontified nil face font-lock-preprocessor-face)) . 68783) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 68758) (68652 . 68654) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 68652) (68546 . 68548) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 68546) (68440 . 68442) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 68440) (68334 . 68336) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 68334) (68228 . 68230) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 68228) (68122 . 68124) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 68122) (68016 . 68018) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 68016) (67910 . 67912) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 67910) (67804 . 67806) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 67804) (67680 . 67682) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 67680) (67557 . 67559) (#("	" 0 1 (c-is-sws t fontified t)) . 67557) (67434 . 67436) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 67434) (67311 . 67313) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 67311) (67188 . 67190) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 67188) (67065 . 67067) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 67065) (66953 . 66955) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 66953) (66842 . 66844) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 66842) (66731 . 66733) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 66731) (66620 . 66622) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 66620) (66509 . 66511) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 66509) (66398 . 66400) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 66398) (66287 . 66289) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 66287) (66176 . 66178) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 66176) (66065 . 66067) (#("	" 0 1 (c-is-sws t fontified nil)) . 66065) (#("	" 0 1 (c-is-sws t c-in-sws t fontified nil face font-lock-preprocessor-face)) . 66046) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face)) . 66020) (65908 . 65910) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 65908) (65796 . 65798) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 65796) (65684 . 65686) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 65684) (65572 . 65574) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 65572) (65460 . 65462) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 65460) (65348 . 65350) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 65348) (65236 . 65238) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 65236) (65124 . 65126) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 65124) (65012 . 65014) (#("	" 0 1 (c-is-sws t fontified nil)) . 65012) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 64992) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 64964) (64829 . 64831) (#("	" 0 1 (fontified t)) . 64829) (64694 . 64696) (#("	" 0 1 (fontified t)) . 64694) (64559 . 64561) (#("	" 0 1 (fontified t)) . 64559) (64424 . 64426) (#("	" 0 1 (fontified t)) . 64424) (64305 . 64307) (#("	" 0 1 (fontified t)) . 64305) (64186 . 64188) (#("	" 0 1 (fontified t)) . 64186) (64067 . 64069) (#("	" 0 1 (fontified t)) . 64067) (63948 . 63950) (#("	" 0 1 (c-is-sws t fontified nil)) . 63948) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 63926) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 63902) (63822 . 63824) (#("	" 0 1 (c-is-sws t fontified nil)) . 63822) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 63804) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 63767) (63687 . 63689) (#("	" 0 1 (c-is-sws t fontified nil)) . 63687) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 63656) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 63629) (63542 . 63544) (#("	" 0 1 (fontified t)) . 63542) (63455 . 63457) (#("	" 0 1 (c-is-sws t fontified nil)) . 63455) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 63434) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 63408) (63321 . 63323) (#("	" 0 1 (fontified t)) . 63321) (63234 . 63236) (#("	" 0 1 (c-is-sws t fontified nil)) . 63234) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 63214) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 63191) (63104 . 63106) (#("	" 0 1 (fontified t)) . 63104) (63017 . 63019) (#("	" 0 1 (fontified t)) . 63017) (62930 . 62932) (#("	" 0 1 (fontified t)) . 62930) (62843 . 62845) (#("	" 0 1 (fontified t)) . 62843) (62756 . 62758) (#("	" 0 1 (fontified t)) . 62756) (62669 . 62671) (#("	" 0 1 (fontified t)) . 62669) (62582 . 62584) (#("	" 0 1 (fontified t)) . 62582) (62495 . 62497) (#("	" 0 1 (fontified t)) . 62495) (62408 . 62410) (#("	" 0 1 (fontified t)) . 62408) (62320 . 62322) (#("	" 0 1 (fontified t)) . 62320) (62232 . 62234) (#("	" 0 1 (fontified t)) . 62232) (62144 . 62146) (#("	" 0 1 (fontified t)) . 62144) (62056 . 62058) (#("	" 0 1 (fontified t)) . 62056) (61968 . 61970) (#("	" 0 1 (fontified t)) . 61968) (61880 . 61882) (#("	" 0 1 (fontified t)) . 61880) (61792 . 61794) (#("	" 0 1 (fontified t)) . 61792) (61704 . 61706) (#("	" 0 1 (fontified t)) . 61704) (61616 . 61618) (#("	" 0 1 (c-is-sws t fontified nil)) . 61616) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 61599) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 61566) (61486 . 61488) (#("	" 0 1 (fontified t)) . 61486) (61406 . 61408) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 61406) (61284 . 61286) (#("	" 0 1 (c-is-sws t fontified t)) . 61284) (61162 . 61164) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 61162) (61040 . 61042) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 61040) (60918 . 60920) (#("	" 0 1 (fontified nil c-is-sws t c-in-sws t)) . 60918) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 60891) (60804 . 60806) (#("	" 0 1 (fontified t)) . 60804) (60717 . 60719) (#("	" 0 1 (fontified t)) . 60717) (60630 . 60632) (#("	" 0 1 (fontified t)) . 60630) (60543 . 60545) (#("	" 0 1 (fontified nil c-is-sws t c-in-sws t)) . 60543) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 60510) (60422 . 60424) (#("	" 0 1 (fontified t)) . 60422) (60334 . 60336) (#("	" 0 1 (fontified nil c-is-sws t c-in-sws t)) . 60334) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 60328) (60232 . 60234) (#("	" 0 1 (fontified t)) . 60232) (60136 . 60138) (#("	" 0 1 (fontified nil c-is-sws t c-in-sws t)) . 60136) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 60082) (60002 . 60004) (#("	" 0 1 (fontified t)) . 60002) (59922 . 59924) (#("	" 0 1 (fontified t)) . 59922) (59842 . 59844) (#("	" 0 1 (c-is-sws t fontified nil)) . 59842) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 59815) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 59792) (59712 . 59714) (#("	" 0 1 (c-is-sws t fontified nil)) . 59712) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 59695) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 59668) (59588 . 59590) (#("	" 0 1 (c-is-sws t fontified nil)) . 59588) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 59567) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 59529) (59449 . 59451) (#("	" 0 1 (c-is-sws t fontified nil)) . 59449) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 59392) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 59359) (59279 . 59281) (#("	" 0 1 (c-is-sws t fontified nil)) . 59279) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 59252) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 59221) (59126 . 59128) (#("	" 0 1 (fontified t)) . 59126) (59046 . 59048) (#("	" 0 1 (c-is-sws t fontified nil)) . 59046) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 59021) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 58965) (58878 . 58880) (#("	" 0 1 (fontified t)) . 58878) (58791 . 58793) (#("	" 0 1 (fontified t)) . 58791) (58704 . 58706) (#("	" 0 1 (fontified nil c-is-sws t c-in-sws t)) . 58704) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 58680) (58582 . 58584) (#("	" 0 1 (fontified t)) . 58582) (58484 . 58486) (#("	" 0 1 (fontified t)) . 58484) (58386 . 58388) (#("	" 0 1 (c-is-sws t fontified nil)) . 58386) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 58356) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 58325) (58245 . 58247) (#("	" 0 1 (c-is-sws t fontified nil)) . 58245) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 58220) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 58195) (58115 . 58117) (#("	" 0 1 (fontified t)) . 58115) (58035 . 58037) (#("	" 0 1 (fontified t)) . 58035) (57955 . 57957) (#("	" 0 1 (fontified t)) . 57955) (57875 . 57877) (#("	" 0 1 (fontified t)) . 57875) (57795 . 57797) (#("	" 0 1 (fontified nil c-is-sws t c-in-sws t)) . 57795) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 57776) (57696 . 57698) (#("	" 0 1 (fontified t)) . 57696) (57616 . 57618) (#("	" 0 1 (c-is-sws t fontified nil)) . 57616) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 57583) (57450 . 57452) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 57450) (57320 . 57322) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 57320) (57200 . 57202) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 57200) (57079 . 57081) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 57079) (56958 . 56960) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 56958) (56828 . 56830) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 56828) (56708 . 56710) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 56708) (56587 . 56589) (#("	" 0 1 (c-is-sws t fontified t)) . 56587) (56466 . 56468) (#("	" 0 1 (c-is-sws t fontified nil)) . 56466) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 56439) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 56414) (56319 . 56321) (#("	" 0 1 (fontified nil c-is-sws t c-in-sws t)) . 56319) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 56300) (56205 . 56207) (#("	" 0 1 (fontified t)) . 56205) (56110 . 56112) (#("	" 0 1 (fontified t)) . 56110) (56015 . 56017) (#("	" 0 1 (fontified nil c-is-sws t c-in-sws t)) . 56015) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 55994) (55905 . 55907) (#("	" 0 1 (c-is-sws t fontified nil)) . 55905) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 55867) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 55843) (55763 . 55765) (#("	" 0 1 (c-is-sws t fontified nil)) . 55763) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 55745) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 55717) (55637 . 55639) (#("	" 0 1 (c-is-sws t fontified nil)) . 55637) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 55615) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 55587) (55507 . 55509) (#("	" 0 1 (c-is-sws t fontified nil)) . 55507) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 55485) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 55458) (55378 . 55380) (#("	" 0 1 (fontified nil c-is-sws t c-in-sws t)) . 55378) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 55357) (55277 . 55279) (#("	" 0 1 (fontified nil c-is-sws t c-in-sws t)) . 55277) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 55249) (55169 . 55171) (#("	" 0 1 (c-is-sws t fontified nil)) . 55169) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 55147) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 55121) (55041 . 55043) (#("	" 0 1 (fontified nil c-is-sws t c-in-sws t)) . 55041) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 55021) (54941 . 54943) (#("	" 0 1 (fontified nil c-is-sws t c-in-sws t)) . 54941) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 54905) (54825 . 54827) (#("	" 0 1 (c-is-sws t fontified nil)) . 54825) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 54795) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 54765) (54677 . 54679) (#("	" 0 1 (fontified t)) . 54677) (54589 . 54591) (#("	" 0 1 (c-is-sws t fontified nil)) . 54589) (#("	" 0 1 (c-is-sws t c-in-sws t fontified nil face font-lock-preprocessor-face)) . 54547) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 54521) (54365 . 54367) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 54365) (54210 . 54212) (#("	" 0 1 (c-is-sws t fontified nil)) . 54210) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 54190) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 54156) (54068 . 54070) (#("	" 0 1 (fontified t)) . 54068) (53980 . 53982) (#("	" 0 1 (c-is-sws t fontified nil)) . 53980) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 53952) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 53926) (53838 . 53840) (#("	" 0 1 (fontified t)) . 53838) (53750 . 53752) (#("	" 0 1 (c-is-sws t fontified nil)) . 53750) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 53730) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 53698) (53610 . 53612) (#("	" 0 1 (fontified t)) . 53610) (53522 . 53524) (#("	" 0 1 (c-is-sws t fontified nil)) . 53522) (#("	" 0 1 (c-is-sws t c-in-sws t fontified nil face font-lock-preprocessor-face)) . 53496) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 53471) (53322 . 53324) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 53322) (53174 . 53176) (#("	" 0 1 (c-is-sws t fontified nil)) . 53174) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 53155) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 53131) (53051 . 53053) (#("	" 0 1 (fontified nil c-is-sws t c-in-sws t)) . 53051) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 53045) (52965 . 52967) (#("	" 0 1 (c-is-sws t fontified nil)) . 52965) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 52947) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 52920) (52840 . 52842) (#("	" 0 1 (fontified t)) . 52840) (52760 . 52762) (#("	" 0 1 (fontified t)) . 52760) (52673 . 52675) (#("	" 0 1 (fontified t)) . 52673) (52586 . 52588) (#("	" 0 1 (fontified t)) . 52586) (52499 . 52501) (#("	" 0 1 (fontified t)) . 52499) (52412 . 52414) (#("	" 0 1 (fontified t)) . 52412) (52325 . 52327) (#("	" 0 1 (fontified t)) . 52325) (52238 . 52240) (#("	" 0 1 (fontified t)) . 52238) (52151 . 52153) (#("	" 0 1 (fontified t)) . 52151) (52064 . 52066) (#("	" 0 1 (fontified t)) . 52064) (51977 . 51979) (#("	" 0 1 (fontified t)) . 51977) (51890 . 51892) (#("	" 0 1 (fontified t)) . 51890) (51803 . 51805) (#("	" 0 1 (fontified t)) . 51803) (51716 . 51718) (#("	" 0 1 (fontified t)) . 51716) (51629 . 51631) (#("	" 0 1 (fontified t)) . 51629) (51542 . 51544) (#("	" 0 1 (fontified nil c-is-sws t c-in-sws t)) . 51542) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 51521) (51441 . 51443) (#("	" 0 1 (fontified nil c-is-sws t c-in-sws t)) . 51441) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 51418) (51319 . 51321) (#("	" 0 1 (c-is-sws t fontified nil)) . 51319) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 51302) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 51271) (51191 . 51193) (#("	" 0 1 (c-is-sws t fontified nil)) . 51191) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 51166) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 51135) (51055 . 51057) (#("	" 0 1 (c-is-sws t fontified nil)) . 51055) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 51030) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 51001) (50921 . 50923) (#("	" 0 1 (c-is-sws t fontified nil)) . 50921) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 50898) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 50873) (50793 . 50795) (#("	" 0 1 (c-is-sws t fontified nil)) . 50793) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 50774) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 50748) (50661 . 50663) (#("	" 0 1 (fontified t)) . 50661) (50574 . 50576) (#("	" 0 1 (c-is-sws t fontified nil)) . 50574) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 50554) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 50527) (50427 . 50429) (#("	" 0 1 (fontified t)) . 50427) (50328 . 50330) (#("	" 0 1 (fontified t)) . 50328) (50228 . 50230) (#("	" 0 1 (fontified t)) . 50228) (50129 . 50131) (#("	" 0 1 (fontified t)) . 50129) (50029 . 50031) (#("	" 0 1 (fontified t)) . 50029) (49930 . 49932) (#("	" 0 1 (fontified t)) . 49930) (49830 . 49832) (#("	" 0 1 (fontified t)) . 49830) (49731 . 49733) (#("	" 0 1 (c-is-sws t fontified nil)) . 49731) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 49710) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 49681) (49594 . 49596) (#("	" 0 1 (fontified t)) . 49594) (49507 . 49509) (#("	" 0 1 (c-is-sws t fontified nil)) . 49507) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 49484) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 49461) (49381 . 49383) (#("	" 0 1 (fontified t)) . 49381) (49292 . 49294) (#("	" 0 1 (fontified t)) . 49292) (49203 . 49205) (#("	" 0 1 (fontified nil c-is-sws t c-in-sws t)) . 49203) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 49186) (49097 . 49099) (#("	" 0 1 (fontified t)) . 49097) (49008 . 49010) (#("	" 0 1 (fontified nil c-is-sws t c-in-sws t)) . 49008) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 48975) (48888 . 48890) (#("	" 0 1 (fontified t)) . 48888) (48801 . 48803) (#("	" 0 1 (fontified nil c-is-sws t c-in-sws t)) . 48801) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 48774) (48687 . 48689) (#("	" 0 1 (fontified t)) . 48687) (48600 . 48602) (#("	" 0 1 (fontified nil c-is-sws t c-in-sws t)) . 48600) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 48556) (48476 . 48478) (#("	" 0 1 (fontified t)) . 48476) (48396 . 48398) (#("	" 0 1 (c-is-sws t c-in-sws t fontified nil)) . 48396) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 48357) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 48327) (48241 . 48243) (#("	" 0 1 (fontified t)) . 48241) (48155 . 48157) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 48155) (48044 . 48046) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 48044) (47934 . 47936) (#("	" 0 1 (c-is-sws t fontified nil)) . 47934) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 47910) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 47882) (47795 . 47797) (#("	" 0 1 (fontified t)) . 47795) (47708 . 47710) (#("	" 0 1 (c-is-sws t fontified nil)) . 47708) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 47686) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 47660) (47580 . 47582) (#("	" 0 1 (c-is-sws t fontified nil)) . 47580) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 47560) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 47534) (47447 . 47449) (#("	" 0 1 (c-is-sws t fontified nil)) . 47447) (#("	" 0 1 (c-is-sws t c-in-sws t fontified nil face font-lock-preprocessor-face)) . 47411) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 47386) (47292 . 47294) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 47292) (47200 . 47202) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 47200) (47105 . 47107) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 47105) (47011 . 47013) (#("	" 0 1 (c-is-sws t fontified nil)) . 47011) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 46992) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 46968) (46881 . 46883) (#("	" 0 1 (fontified t)) . 46881) (46794 . 46796) (#("	" 0 1 (fontified nil c-is-sws t c-in-sws t)) . 46794) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 46788) (46733 . 46735) (#("	" 0 1 (fontified t)) . 46733) (46677 . 46679) (#("	" 0 1 (c-is-sws t fontified nil)) . 46677) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 46659) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 46631) (46551 . 46553) (#("	" 0 1 (c-is-sws t fontified nil)) . 46551) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 46529) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 46509) (46428 . 46430) (#("	" 0 1 (fontified nil c-is-sws t c-in-sws t)) . 46428) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 46414) (46334 . 46336) (#("	" 0 1 (fontified nil c-is-sws t c-in-sws t)) . 46334) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 46310) (46230 . 46232) (#("	" 0 1 (fontified t)) . 46230) (46138 . 46140) (#("	" 0 1 (fontified t)) . 46138) (46046 . 46048) (#("	" 0 1 (fontified nil c-is-sws t c-in-sws t)) . 46046) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 46028) (45924 . 45926) (#("	" 0 1 (fontified t)) . 45924) (45826 . 45828) (#("	" 0 1 (fontified nil c-is-sws t c-in-sws t)) . 45826) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 45801) (45703 . 45705) (#("	" 0 1 (c-is-sws t fontified nil)) . 45703) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face)) . 45684) (45599 . 45601) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t)) . 45599) (45462 . 45464) (#("	" 0 1 (c-is-sws t c-in-sws t fontified t)) . 45462) (45397 . 45399) (#("	" 0 1 (c-in-sws t c-is-sws t fontified t)) . 45397) (45023 . 45025) (#("	" 0 1 (fontified t)) . 45023) (44988 . 44990) (#("	" 0 1 (fontified t)) . 44988) (44950 . 44952) (#("	" 0 1 (fontified t)) . 44950) (43990 . 43992) (#(" " 0 1 (fontified nil c-in-sws t)) . 43990) (43941 . 43943) (#(" " 0 1 (fontified nil c-in-sws t)) . 43941) (43892 . 43894) (#(" " 0 1 (fontified nil c-in-sws t)) . 43892) (43844 . 43845) (#(" " 0 1 (fontified nil c-in-sws t)) . 43844) (43790 . 43791) (#(" " 0 1 (fontified nil c-in-sws t)) . 43790) (43735 . 43737) (#(" " 0 1 (fontified nil c-in-sws t)) . 43735) (43676 . 43681) (#(" " 0 1 (fontified nil c-in-sws t)) . 43676) (43679 . 43681) (#("	" 0 1 (fontified t c-in-sws t)) . 43679) (43234 . 43240) (#(" " 0 1 (fontified nil c-in-sws t)) . 43234) (43237 . 43239) (#("	" 0 1 (fontified t c-in-sws t)) . 43237) (42711 . 42717) (#(" " 0 1 (fontified nil c-in-sws t)) . 42711) (42714 . 42716) (#("	" 0 1 (fontified t c-in-sws t)) . 42714) (42247 . 42253) (#(" " 0 1 (fontified nil c-in-sws t)) . 42247) (42250 . 42252) (#("	" 0 1 (fontified t c-in-sws t)) . 42250) (41628 . 41634) (#(" " 0 1 (fontified nil c-in-sws t)) . 41628) (41631 . 41633) (#("	" 0 1 (fontified t c-in-sws t)) . 41631) (41227 . 41233) (#(" " 0 1 (fontified nil c-in-sws t)) . 41227) (41230 . 41232) (#("	" 0 1 (fontified t c-in-sws t)) . 41230) (40692 . 40698) (#(" " 0 1 (fontified nil c-in-sws t)) . 40692) (40695 . 40697) (#("	" 0 1 (fontified t c-in-sws t)) . 40695) (40213 . 40219) (#(" " 0 1 (fontified nil c-in-sws t)) . 40213) (40216 . 40218) (#("	" 0 1 (fontified t c-in-sws t)) . 40216) (39579 . 39585) (#(" " 0 1 (fontified nil c-in-sws t)) . 39579) (39582 . 39584) (#("	" 0 1 (fontified t c-in-sws t)) . 39582) (39418 . 39420) (#("	" 0 1 (fontified t)) . 39418) (39410 . 39412) (#("	" 0 1 (fontified t)) . 39410) (#("	" 0 1 (fontified t face font-lock-preprocessor-face)) . 39295) (39271 . 39273) (#("	" 0 1 (fontified nil c-is-sws t)) . 39271) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 39248) (#("	" 0 1 (fontified t face font-lock-preprocessor-face c-in-sws t c-is-sws t)) . 39241) (39213 . 39215) (#("	" 0 1 (fontified nil c-is-sws t)) . 39213) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 39193) (#("	" 0 1 (fontified t face font-lock-preprocessor-face c-in-sws t c-is-sws t)) . 39186) (39155 . 39157) (#("	" 0 1 (fontified nil c-is-sws t)) . 39155) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 39131) (#("	" 0 1 (fontified t face font-lock-preprocessor-face c-in-sws t c-is-sws t)) . 39124) (39095 . 39097) (#("	" 0 1 (fontified nil c-is-sws t)) . 39095) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 39074) (#("	" 0 1 (fontified t face font-lock-preprocessor-face c-in-sws t c-is-sws t)) . 39067) (39043 . 39045) (#("	" 0 1 (fontified nil c-is-sws t)) . 39043) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 39023) (#("	" 0 1 (fontified t face font-lock-preprocessor-face c-in-sws t c-is-sws t)) . 39016) (38989 . 38991) (#("	" 0 1 (fontified nil c-is-sws t)) . 38989) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 38960) (#("	" 0 1 (fontified t face font-lock-preprocessor-face c-in-sws t c-is-sws t)) . 38953) (38929 . 38931) (#("	" 0 1 (fontified nil c-is-sws t)) . 38929) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 38913) (#("	" 0 1 (fontified t face font-lock-preprocessor-face c-in-sws t c-is-sws t)) . 38906) (38883 . 38885) (#("	" 0 1 (fontified nil c-is-sws t)) . 38883) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 38864) (#("	" 0 1 (fontified t face font-lock-preprocessor-face c-in-sws t c-is-sws t)) . 38857) (38815 . 38817) (#("	" 0 1 (fontified nil c-is-sws t c-in-sws t)) . 38815) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 38781) (#("	" 0 1 (fontified t c-in-sws t c-is-sws t face font-lock-preprocessor-face)) . 38774) (38740 . 38742) (#("	" 0 1 (fontified nil c-is-sws t)) . 38740) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 38714) (#("	" 0 1 (fontified t c-in-sws t c-is-sws t face font-lock-preprocessor-face)) . 38707) (38676 . 38678) (#("	" 0 1 (fontified nil c-is-sws t)) . 38676) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 38653) (#("	" 0 1 (fontified t c-in-sws t c-is-sws t face font-lock-preprocessor-face)) . 38646) (38620 . 38622) (#("	" 0 1 (fontified nil c-is-sws t)) . 38620) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 38602) (#("	" 0 1 (fontified t c-in-sws t c-is-sws t face font-lock-preprocessor-face)) . 38595) (38568 . 38570) (#("	" 0 1 (fontified nil c-is-sws t)) . 38568) (#("	" 0 1 (fontified t c-in-sws t c-is-sws t face font-lock-preprocessor-face)) . 38549) (38473 . 38475) (#("	" 0 1 (fontified nil c-is-sws t)) . 38473) (#("	" 0 1 (fontified t c-in-sws t c-is-sws t face font-lock-preprocessor-face)) . 38466) (38410 . 38412) (#("	" 0 1 (fontified nil c-is-sws t)) . 38410) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 38394) (#("	" 0 1 (fontified t c-in-sws t c-is-sws t face font-lock-preprocessor-face)) . 38387) (38361 . 38363) (#("	" 0 1 (fontified nil c-is-sws t)) . 38361) (#("	" 0 1 (fontified t c-in-sws t c-is-sws t face font-lock-preprocessor-face)) . 38333) (38297 . 38299) (#("	" 0 1 (fontified t c-in-sws t c-is-sws t)) . 38297) (#("	" 0 1 (fontified t face font-lock-preprocessor-face)) . 38247) (38206 . 38208) (#("	" 0 1 (fontified nil c-is-sws t)) . 38206) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 38183) (#("	" 0 1 (fontified t face font-lock-preprocessor-face c-in-sws t c-is-sws t)) . 38176) (38135 . 38137) (#("	" 0 1 (fontified nil c-is-sws t)) . 38135) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 38115) (#("	" 0 1 (fontified t face font-lock-preprocessor-face c-in-sws t c-is-sws t)) . 38108) (38067 . 38069) (#("	" 0 1 (fontified nil c-is-sws t)) . 38067) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 38043) (#("	" 0 1 (fontified t face font-lock-preprocessor-face c-in-sws t c-is-sws t)) . 38036) (37995 . 37997) (#("	" 0 1 (fontified nil c-is-sws t)) . 37995) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 37974) (#("	" 0 1 (fontified t face font-lock-preprocessor-face c-in-sws t c-is-sws t)) . 37967) (37926 . 37928) (#("	" 0 1 (fontified nil c-is-sws t)) . 37926) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 37906) (#("	" 0 1 (fontified t face font-lock-preprocessor-face c-in-sws t c-is-sws t)) . 37899) (37858 . 37860) (#("	" 0 1 (fontified nil c-is-sws t)) . 37858) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 37829) (#("	" 0 1 (fontified t face font-lock-preprocessor-face c-in-sws t c-is-sws t)) . 37822) (37781 . 37783) (#("	" 0 1 (fontified nil c-is-sws t)) . 37781) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 37753) (#("	" 0 1 (fontified t face font-lock-preprocessor-face c-in-sws t c-is-sws t)) . 37746) (37705 . 37707) (#("	" 0 1 (fontified nil c-is-sws t)) . 37705) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 37689) (#("	" 0 1 (fontified t face font-lock-preprocessor-face c-in-sws t c-is-sws t)) . 37682) (37641 . 37643) (#("	" 0 1 (fontified nil c-is-sws t)) . 37641) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 37622) (#("	" 0 1 (fontified t face font-lock-preprocessor-face c-in-sws t c-is-sws t)) . 37615) (37568 . 37570) (#("	" 0 1 (fontified nil c-is-sws t)) . 37568) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 37534) (#("	" 0 1 (fontified t face font-lock-preprocessor-face c-in-sws t c-is-sws t)) . 37527) (37486 . 37488) (#("	" 0 1 (fontified nil c-is-sws t)) . 37486) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 37460) (#("	" 0 1 (fontified t face font-lock-preprocessor-face c-in-sws t c-is-sws t)) . 37453) (37412 . 37414) (#("	" 0 1 (fontified nil c-is-sws t)) . 37412) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 37389) (#("	" 0 1 (fontified t face font-lock-preprocessor-face c-in-sws t c-is-sws t)) . 37382) (37341 . 37343) (#("	" 0 1 (fontified nil c-is-sws t)) . 37341) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 37323) (#("	" 0 1 (fontified t face font-lock-preprocessor-face c-in-sws t c-is-sws t)) . 37316) (37275 . 37277) (#("	" 0 1 (fontified nil c-is-sws t)) . 37275) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 37256) (#("	" 0 1 (fontified t face font-lock-preprocessor-face c-in-sws t c-is-sws t)) . 37249) (37208 . 37210) (#("	" 0 1 (fontified nil c-is-sws t)) . 37208) (#("	" 0 1 (fontified t face font-lock-preprocessor-face c-in-sws t c-is-sws t)) . 37192) (37081 . 37083) (#("	" 0 1 (fontified t c-is-sws t c-in-sws t)) . 37081) (36978 . 36980) (#("	" 0 1 (fontified t c-is-sws t c-in-sws t)) . 36978) (36872 . 36874) (#("	" 0 1 (fontified t c-is-sws t c-in-sws t)) . 36872) (36760 . 36762) (#("	" 0 1 (fontified t c-is-sws t c-in-sws t)) . 36760) (36610 . 36612) (#("	" 0 1 (fontified t c-is-sws t c-in-sws t)) . 36610) (36468 . 36470) (#("	" 0 1 (fontified t c-is-sws t c-in-sws t)) . 36468) (36348 . 36350) (#("	" 0 1 (fontified t c-is-sws t c-in-sws t)) . 36348) (36233 . 36235) (#("	" 0 1 (fontified t c-is-sws t c-in-sws t)) . 36233) (36128 . 36130) (#("	" 0 1 (fontified t c-is-sws t c-in-sws t)) . 36128) (36005 . 36007) (#("	" 0 1 (fontified t c-is-sws t c-in-sws t)) . 36005) (35878 . 35880) (#("	" 0 1 (fontified t c-is-sws t c-in-sws t)) . 35878) (35782 . 35784) (#("	" 0 1 (fontified t c-is-sws t)) . 35782) (35689 . 35691) (#(" 	" 0 2 (fontified t c-is-sws t c-in-sws t)) . 35689) (35563 . 35565) (#("	" 0 1 (fontified t c-is-sws t c-in-sws t)) . 35563) (35438 . 35440) (#("	" 0 1 (fontified t c-in-sws t c-is-sws t)) . 35438) (35313 . 35315) (#("	" 0 1 (fontified t)) . 35313) (35277 . 35279) (#("	" 0 1 (fontified t)) . 35277) (35248 . 35250) (#("	" 0 1 (fontified t)) . 35248) (35219 . 35221) (#("	" 0 1 (fontified t c-is-sws t)) . 35219) (35176 . 35178) (#("	" 0 1 (fontified t)) . 35176) (#("	" 0 1 (fontified nil c-is-sws t face font-lock-preprocessor-face)) . 34225) (#("	" 0 1 (fontified t face font-lock-preprocessor-face)) . 34187) (34024 . 34026) (#("	" 0 1 (fontified nil c-is-sws t)) . 34024) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 33992) (#("	" 0 1 (fontified t face font-lock-preprocessor-face c-in-sws t c-is-sws t)) . 33985) (33824 . 33826) (#("	" 0 1 (fontified nil c-is-sws t)) . 33824) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 33794) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 33767) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 33735) (#("	" 0 1 (fontified t face font-lock-preprocessor-face c-in-sws t c-is-sws t)) . 33684) (33529 . 33531) (#("	" 0 1 (fontified nil c-is-sws t c-in-sws t)) . 33529) (#("	" 0 1 (fontified t face font-lock-preprocessor-face c-in-sws t c-is-sws t)) . 33506) (33351 . 33353) (#("	" 0 1 (fontified nil c-is-sws t c-in-sws t)) . 33351) (#("	" 0 1 (fontified t face font-lock-preprocessor-face c-in-sws t c-is-sws t)) . 33305) (33143 . 33145) (#("	" 0 1 (fontified nil c-is-sws t c-in-sws t)) . 33143) (#("	" 0 1 (fontified t face font-lock-preprocessor-face c-in-sws t c-is-sws t)) . 33110) (32953 . 32955) (#("	" 0 1 (fontified nil c-is-sws t c-in-sws t)) . 32953) (#("	" 0 1 (fontified t face font-lock-preprocessor-face c-in-sws t c-is-sws t)) . 32928) (32771 . 32773) (#("	" 0 1 (fontified nil c-is-sws t c-in-sws t)) . 32771) (#("	" 0 1 (fontified t face font-lock-preprocessor-face c-in-sws t c-is-sws t)) . 32723) (32562 . 32564) (#("	" 0 1 (fontified nil c-is-sws t c-in-sws t)) . 32562) (#("	" 0 1 (fontified t face font-lock-preprocessor-face c-in-sws t c-is-sws t)) . 32533) (32372 . 32374) (#("	" 0 1 (fontified nil c-is-sws t)) . 32372) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 32322) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 32296) (#("	" 0 1 (fontified t face font-lock-preprocessor-face c-in-sws t c-is-sws t)) . 32201) (32047 . 32049) (#("	" 0 1 (fontified nil c-is-sws t c-in-sws t)) . 32047) (#("	" 0 1 (fontified t face font-lock-preprocessor-face c-in-sws t c-is-sws t)) . 32022) (31868 . 31870) (#("	" 0 1 (fontified nil c-is-sws t c-in-sws t)) . 31868) (#("	" 0 1 (fontified t face font-lock-preprocessor-face c-in-sws t c-is-sws t)) . 31843) (31687 . 31689) (#("	" 0 1 (fontified nil c-is-sws t c-in-sws t)) . 31687) (#("	" 0 1 (fontified t face font-lock-preprocessor-face c-in-sws t c-is-sws t)) . 31660) (31502 . 31504) (#("	" 0 1 (fontified nil c-is-sws t c-in-sws t)) . 31502) (#("	" 0 1 (fontified t face font-lock-preprocessor-face c-in-sws t c-is-sws t)) . 31476) (31318 . 31320) (#("	" 0 1 (fontified nil c-is-sws t)) . 31318) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 31291) (#("	" 0 1 (fontified t face font-lock-preprocessor-face c-in-sws t c-is-sws t)) . 31271) (31122 . 31124) (#("	" 0 1 (fontified nil c-is-sws t)) . 31122) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 31108) (#("	" 0 1 (fontified t face font-lock-preprocessor-face c-in-sws t c-is-sws t)) . 31057) (30905 . 30907) (#("	" 0 1 (fontified nil c-is-sws t c-in-sws t)) . 30905) (#("	" 0 1 (fontified t face font-lock-preprocessor-face c-in-sws t c-is-sws t)) . 30882) (30730 . 30732) (#("	" 0 1 (fontified nil c-is-sws t c-in-sws t)) . 30730) (#("	" 0 1 (fontified t face font-lock-preprocessor-face c-in-sws t c-is-sws t)) . 30684) (30522 . 30524) (#("	" 0 1 (fontified nil c-is-sws t c-in-sws t)) . 30522) (#("	" 0 1 (fontified t face font-lock-preprocessor-face c-in-sws t c-is-sws t)) . 30489) (30335 . 30337) (#("	" 0 1 (fontified nil c-is-sws t c-in-sws t)) . 30335) (#("	" 0 1 (fontified t face font-lock-preprocessor-face c-in-sws t c-is-sws t)) . 30310) (30156 . 30158) (#("	" 0 1 (fontified nil c-is-sws t c-in-sws t)) . 30156) (#("	" 0 1 (fontified t face font-lock-preprocessor-face c-in-sws t c-is-sws t)) . 30108) (29950 . 29952) (#("	" 0 1 (fontified nil c-is-sws t c-in-sws t)) . 29950) (#("	" 0 1 (fontified t face font-lock-preprocessor-face c-in-sws t c-is-sws t)) . 29921) (29763 . 29765) (#("	" 0 1 (fontified nil c-is-sws t)) . 29763) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 29713) (#("	" 0 1 (fontified t face font-lock-preprocessor-face c-in-sws t c-is-sws t)) . 29684) (29532 . 29534) (#("	" 0 1 (fontified nil c-is-sws t)) . 29532) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 29509) (#("	" 0 1 (fontified t face font-lock-preprocessor-face c-in-sws t c-is-sws t)) . 29481) (29328 . 29330) (#("	" 0 1 (fontified nil c-is-sws t)) . 29328) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 29306) (#("	" 0 1 (fontified t face font-lock-preprocessor-face c-in-sws t c-is-sws t)) . 29278) (29125 . 29127) (#("	" 0 1 (fontified nil c-is-sws t)) . 29125) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 29103) (#("	" 0 1 (fontified t face font-lock-preprocessor-face c-in-sws t c-is-sws t)) . 29073) (28918 . 28920) (#("	" 0 1 (fontified nil c-is-sws t)) . 28918) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 28894) (#("	" 0 1 (fontified t face font-lock-preprocessor-face c-in-sws t c-is-sws t)) . 28869) (28719 . 28721) (#("	" 0 1 (fontified nil c-is-sws t)) . 28719) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 28700) (#("	" 0 1 (fontified t face font-lock-preprocessor-face c-in-sws t c-is-sws t)) . 28665) (28505 . 28507) (#("	" 0 1 (fontified nil c-is-sws t)) . 28505) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 28476) (#("	" 0 1 (fontified t face font-lock-preprocessor-face c-in-sws t c-is-sws t)) . 28443) (28285 . 28287) (#("	" 0 1 (fontified nil c-is-sws t)) . 28285) (#("	" 0 1 (fontified t face font-lock-preprocessor-face c-in-sws t c-is-sws t)) . 28258) (28110 . 28112) (#("	" 0 1 (fontified t c-in-sws t c-is-sws t)) . 28110) (27457 . 27459) (#("	" 0 1 (fontified t)) . 27457) (27447 . 27449) (#("	" 0 1 (fontified t)) . 27447) (27436 . 27438) (#("	" 0 1 (fontified t)) . 27436) (27426 . 27428) (#("	" 0 1 (fontified t)) . 27426) (27247 . 27249) (#("	" 0 1 (fontified t c-is-sws t)) . 27247) (27141 . 27143) (#("	" 0 1 (fontified t c-is-sws t)) . 27141) (27084 . 27086) (#("	" 0 1 (fontified t)) . 27084) (26961 . 26963) (#("	" 0 1 (fontified t c-is-sws t)) . 26961) (26849 . 26851) (#("	" 0 1 (fontified t c-is-sws t)) . 26849) (26786 . 26788) (#("	" 0 1 (fontified t)) . 26786) (#("	" 0 1 (fontified t face font-lock-preprocessor-face)) . 26673) (26609 . 26611) (#("	" 0 1 (fontified nil c-is-sws t c-in-sws t)) . 26609) (#("	" 0 1 (fontified t face font-lock-preprocessor-face c-in-sws t c-is-sws t)) . 26585) (26520 . 26522) (#("	" 0 1 (fontified nil c-is-sws t c-in-sws t)) . 26520) (#("	" 0 1 (fontified t face font-lock-preprocessor-face c-in-sws t c-is-sws t)) . 26490) (26447 . 26449) (#("	" 0 1 (fontified t)) . 26447) (26407 . 26409) (#("	" 0 1 (fontified t)) . 26407) (26356 . 26358) (#("	" 0 1 (fontified t)) . 26356) (26304 . 26306) (#("	" 0 1 (fontified t)) . 26304) (26252 . 26254) (#("	" 0 1 (fontified t)) . 26252) (26201 . 26203) (#("	" 0 1 (fontified t c-is-sws t)) . 26201) (26195 . 26198) (#("	 " 0 2 (fontified t face font-lock-comment-delimiter-face)) . 26195) (26154 . 26157) (#("	 " 0 2 (fontified t face font-lock-comment-face)) . 26154) (26119 . 26122) (#("	 " 0 2 (fontified t face font-lock-comment-face)) . 26119) (26090 . 26093) (#("	 " 0 2 (fontified t face font-lock-comment-face)) . 26090) (26050 . 26053) (#("	 " 0 2 (fontified t face font-lock-comment-face c-in-sws t)) . 26050) (26035 . 26037) (#("	" 0 1 (fontified t c-in-sws t c-is-sws t)) . 26035) (24801 . 24803) (24706 . 24710) (#("	" 0 1 (fontified t)) . 24706) (24629 . 24633) (#("	" 0 1 (fontified t)) . 24629) (24552 . 24556) (#("	" 0 1 (fontified t)) . 24552) (24548 . 24550) (24487 . 24489) (22830 . 22832) (#("   " 0 3 (fontified t c-is-sws t c-in-sws t)) . 22830) (22803 . 22805) (#("   " 0 3 (fontified t c-in-sws t c-is-sws t)) . 22803) (22189 . 22191) (#("	" 0 1 (fontified t)) . 22189) (22093 . 22095) (#("	" 0 1 (fontified t)) . 22093) (21997 . 21999) (#("	" 0 1 (fontified t)) . 21997) (21891 . 21893) (#("	" 0 1 (fontified t)) . 21891) (21784 . 21786) (#("	" 0 1 (fontified t)) . 21784) (21677 . 21679) (#("	" 0 1 (fontified t)) . 21677) (21569 . 21571) (#("	" 0 1 (fontified t)) . 21569) (21467 . 21469) (#("	" 0 1 (fontified t)) . 21467) (21364 . 21366) (#("	" 0 1 (fontified t c-is-sws t c-in-sws t)) . 21364) (21270 . 21272) (#("	" 0 1 (fontified t c-in-sws t c-is-sws t)) . 21270) (#("	" 0 1 (fontified t face font-lock-preprocessor-face)) . 21160) (21064 . 21066) (#("	" 0 1 (fontified t)) . 21064) (20968 . 20970) (#("	" 0 1 (fontified t)) . 20968) (20872 . 20874) (#("	" 0 1 (fontified t)) . 20872) (20776 . 20778) (#("	" 0 1 (fontified t)) . 20776) (20680 . 20682) (#("	" 0 1 (fontified t)) . 20680) (20584 . 20586) (#("	" 0 1 (fontified t)) . 20584) (20488 . 20490) (#("	" 0 1 (fontified t)) . 20488) (20392 . 20394) (#("	" 0 1 (fontified t)) . 20392) (20296 . 20298) (#("	" 0 1 (fontified t)) . 20296) (20200 . 20202) (#("	" 0 1 (fontified t)) . 20200) (20104 . 20106) (#("	" 0 1 (fontified t)) . 20104) (20008 . 20010) (#("	" 0 1 (fontified t)) . 20008) (19912 . 19914) (#("	" 0 1 (fontified t)) . 19912) (19816 . 19818) (#("	" 0 1 (fontified t)) . 19816) (19720 . 19722) (#("	" 0 1 (fontified t)) . 19720) (19624 . 19626) (#("	" 0 1 (fontified t)) . 19624) (19528 . 19530) (#("	" 0 1 (fontified t)) . 19528) (19432 . 19434) (#("	" 0 1 (fontified t)) . 19432) (19336 . 19338) (#("	" 0 1 (fontified t)) . 19336) (19240 . 19242) (#("	" 0 1 (fontified t)) . 19240) (19144 . 19146) (#("	" 0 1 (fontified t)) . 19144) (19048 . 19050) (#("	" 0 1 (fontified t)) . 19048) (18952 . 18954) (#("	" 0 1 (fontified t)) . 18952) (18856 . 18858) (#("	" 0 1 (fontified t)) . 18856) (18760 . 18762) (#("	" 0 1 (fontified t)) . 18760) (18664 . 18666) (#("	" 0 1 (fontified t)) . 18664) (18568 . 18570) (#("	" 0 1 (fontified t)) . 18568) (18472 . 18474) (#("	" 0 1 (fontified t)) . 18472) (18376 . 18378) (#("	" 0 1 (fontified t)) . 18376) (18280 . 18282) (#("	" 0 1 (fontified t)) . 18280) (18184 . 18186) (#("	" 0 1 (fontified t)) . 18184) (18088 . 18090) (#("	" 0 1 (fontified t)) . 18088) (17992 . 17994) (#("	" 0 1 (fontified nil c-is-sws t)) . 17992) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 17965) (#("	" 0 1 (fontified t face font-lock-preprocessor-face c-in-sws t c-is-sws t)) . 17929) (17814 . 17816) (#("	" 0 1 (fontified t)) . 17814) (17703 . 17705) (#("	" 0 1 (fontified nil c-is-sws t c-in-sws t)) . 17703) (#("	" 0 1 (fontified t face font-lock-preprocessor-face c-in-sws t c-is-sws t)) . 17673) (17571 . 17573) (#("	" 0 1 (fontified t)) . 17571) (17475 . 17477) (#("	" 0 1 (fontified t)) . 17475) (17379 . 17381) (#("	" 0 1 (fontified t)) . 17379) (17273 . 17275) (#("	" 0 1 (fontified t)) . 17273) (17166 . 17168) (#("	" 0 1 (fontified t)) . 17166) (17059 . 17061) (#("	" 0 1 (fontified t)) . 17059) (16951 . 16953) (#("	" 0 1 (fontified t)) . 16951) (16849 . 16851) (#("	" 0 1 (fontified t)) . 16849) (16746 . 16748) (#("	" 0 1 (fontified t c-is-sws t c-in-sws t)) . 16746) (16652 . 16654) (#("	" 0 1 (fontified t c-in-sws t c-is-sws t)) . 16652) (16526 . 16528) (#("	" 0 1 (fontified t)) . 16526) (16469 . 16471) (#("	" 0 1 (fontified t)) . 16469) (16412 . 16414) (#("	" 0 1 (fontified t)) . 16412) (16355 . 16357) (#("	" 0 1 (fontified t)) . 16355) (16298 . 16300) (#("	" 0 1 (fontified t)) . 16298) (16241 . 16243) (#("	" 0 1 (fontified t)) . 16241) (16184 . 16186) (#("	" 0 1 (fontified t)) . 16184) (16127 . 16129) (#("	" 0 1 (fontified t)) . 16127) (16070 . 16072) (#("	" 0 1 (fontified t c-is-sws t c-in-sws t)) . 16070) (16010 . 16012) (#("	" 0 1 (fontified t c-in-sws t c-is-sws t)) . 16010) (#("	" 0 1 (fontified t face font-lock-preprocessor-face)) . 15783) (15723 . 15725) (#("	" 0 1 (fontified t)) . 15723) (15663 . 15665) (#("	" 0 1 (fontified t)) . 15663) (15603 . 15605) (#("	" 0 1 (fontified t)) . 15603) (15543 . 15545) (#("	" 0 1 (fontified t)) . 15543) (15483 . 15485) (#("	" 0 1 (fontified t)) . 15483) (15423 . 15425) (#("	" 0 1 (fontified t)) . 15423) (15363 . 15365) (#("	" 0 1 (fontified t)) . 15363) (15303 . 15305) (#("	" 0 1 (fontified t)) . 15303) (15243 . 15245) (#("	" 0 1 (fontified t)) . 15243) (15183 . 15185) (#("	" 0 1 (fontified t)) . 15183) (15123 . 15125) (#("	" 0 1 (fontified t)) . 15123) (15063 . 15065) (#("	" 0 1 (fontified t)) . 15063) (15003 . 15005) (#("	" 0 1 (fontified t)) . 15003) (14943 . 14945) (#("	" 0 1 (fontified t)) . 14943) (14883 . 14885) (#("	" 0 1 (fontified t)) . 14883) (14823 . 14825) (#("	" 0 1 (fontified t)) . 14823) (14763 . 14765) (#("	" 0 1 (fontified t)) . 14763) (14703 . 14705) (#("	" 0 1 (fontified t)) . 14703) (14643 . 14645) (#("	" 0 1 (fontified t)) . 14643) (14583 . 14585) (#("	" 0 1 (fontified t)) . 14583) (14523 . 14525) (#("	" 0 1 (fontified t)) . 14523) (14463 . 14465) (#("	" 0 1 (fontified t)) . 14463) (14403 . 14405) (#("	" 0 1 (fontified t)) . 14403) (14343 . 14345) (#("	" 0 1 (fontified t)) . 14343) (14283 . 14285) (#("	" 0 1 (fontified t)) . 14283) (14223 . 14225) (#("	" 0 1 (fontified t)) . 14223) (14163 . 14165) (#("	" 0 1 (fontified t)) . 14163) (14103 . 14105) (#("	" 0 1 (fontified t)) . 14103) (14043 . 14045) (#("	" 0 1 (fontified t)) . 14043) (13983 . 13985) (#("	" 0 1 (fontified t)) . 13983) (13923 . 13925) (#("	" 0 1 (fontified t)) . 13923) (13863 . 13865) (#("	" 0 1 (fontified t)) . 13863) (13803 . 13805) (#("	" 0 1 (fontified nil c-is-sws t)) . 13803) (#("	" 0 1 (fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 13776) (#("	" 0 1 (fontified t face font-lock-preprocessor-face c-in-sws t c-is-sws t)) . 13740) (13681 . 13683) (#("	" 0 1 (fontified t)) . 13681) (13622 . 13624) (#("	" 0 1 (fontified nil c-is-sws t c-in-sws t)) . 13622) (#("	" 0 1 (fontified t face font-lock-preprocessor-face c-in-sws t c-is-sws t)) . 13592) (13532 . 13534) (#("	" 0 1 (fontified t)) . 13532) (13472 . 13474) (#("	" 0 1 (fontified t)) . 13472) (13412 . 13414) (#("	" 0 1 (fontified t)) . 13412) (13352 . 13354) (#("	" 0 1 (fontified t)) . 13352) (13292 . 13294) (#("	" 0 1 (fontified t)) . 13292) (13232 . 13234) (#("	" 0 1 (fontified t)) . 13232) (13172 . 13174) (#("	" 0 1 (fontified t)) . 13172) (13112 . 13114) (#("	" 0 1 (fontified t)) . 13112) (13052 . 13054) (#("	" 0 1 (fontified t c-is-sws t c-in-sws t)) . 13052) (12993 . 12995) (#("	" 0 1 (fontified t c-in-sws t c-is-sws t)) . 12993) 94668) nil (25659 46391 402368 682000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . 46022) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1)) nil (25659 46391 402129 678000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 46022) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1)) nil (25659 46391 402126 302000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . 46022) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1)) nil (25659 46391 402122 645000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . 46022) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1)) nil (25659 46391 402118 988000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . 46022) (undo-tree-id131 . -1) (undo-tree-id132 . -1)) nil (25659 46391 402115 472000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 46022) (undo-tree-id129 . -1) (undo-tree-id130 . -1)) nil (25659 46391 402113 17000) 0 nil])
([nil nil ((#("  { ControlMask,                 XK_o,                    spawn,           {.v = browsercmd    } },
  { ControlMask,                 XK_o,                    spawn,           {.v = screenlockcmd } },
  { ControlMask,                 XK_o,                    spawn,           {.v = discordcmd    } },
" 0 2 (fontified t) 2 3 (fontified t c-type c-not-decl face (rainbow-delimiters-depth-2-face)) 3 4 (fontified t) 4 14 (fontified t) 14 15 (rear-nonsticky t fontified t) 15 16 (fontified t c-type c-not-decl) 16 33 (fontified t) 33 36 (fontified t) 36 37 (fontified t) 37 38 (fontified t c-type c-not-decl) 38 39 (fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 42 (fontified t) 42 43 (fontified t) 43 44 (fontified t) 44 45 (fontified t) 45 46 (fontified t) 46 47 (fontified t) 47 48 (fontified t) 48 63 (fontified t) 63 64 (fontified t c-type c-not-decl) 64 75 (fontified t) 75 76 (fontified t face (rainbow-delimiters-depth-3-face)) 76 81 (fontified t) 81 82 (fontified t) 82 83 (fontified t) 83 84 (fontified t) 84 85 (fontified t) 85 86 (fontified t) 86 87 (fontified t) 87 88 (fontified t) 88 91 (fontified t) 91 94 (fontified t) 94 95 (fontified t) 95 96 (fontified t face (rainbow-delimiters-depth-3-face)) 96 97 (fontified t) 97 98 (fontified t face (rainbow-delimiters-depth-2-face)) 98 99 (fontified t) 99 102 (fontified t) 102 103 (fontified t c-type c-not-decl face (rainbow-delimiters-depth-2-face)) 103 104 (fontified t) 104 114 (fontified t) 114 115 (rear-nonsticky t fontified t) 115 116 (fontified t c-type c-not-decl) 116 133 (fontified t) 133 137 (fontified t) 137 138 (fontified t c-type c-not-decl) 138 139 (fontified t) 139 140 (fontified t) 140 141 (fontified t) 141 142 (fontified t) 142 143 (fontified t) 143 144 (fontified t) 144 145 (fontified t) 145 146 (fontified t) 146 147 (fontified t) 147 148 (fontified t) 148 163 (fontified t) 163 164 (fontified t c-type c-not-decl) 164 175 (fontified t) 175 176 (fontified t face (rainbow-delimiters-depth-3-face)) 176 181 (fontified t) 181 182 (fontified t) 182 183 (fontified t) 183 184 (fontified t) 184 185 (fontified t) 185 186 (fontified t) 186 187 (fontified t) 187 188 (fontified t) 188 189 (fontified t) 189 190 (fontified t) 190 191 (fontified t) 191 194 (fontified t) 194 195 (fontified t) 195 196 (fontified t face (rainbow-delimiters-depth-3-face)) 196 197 (fontified t) 197 198 (fontified t face (rainbow-delimiters-depth-2-face)) 198 199 (fontified t) 199 202 (fontified t) 202 203 (fontified t c-type c-not-decl face (rainbow-delimiters-depth-2-face)) 203 204 (fontified t) 204 214 (fontified t) 214 215 (rear-nonsticky t fontified t) 215 216 (fontified t c-type c-not-decl) 216 233 (fontified t) 233 237 (fontified t) 237 238 (fontified t c-type c-not-decl) 238 239 (fontified t) 239 240 (fontified t) 240 241 (fontified t) 241 242 (fontified t) 242 243 (fontified t) 243 244 (fontified t) 244 245 (fontified t) 245 246 (fontified t) 246 247 (fontified t) 247 248 (fontified t) 248 263 (fontified t) 263 264 (fontified t c-type c-not-decl) 264 275 (fontified t) 275 276 (fontified t face (rainbow-delimiters-depth-3-face)) 276 281 (fontified t) 281 282 (fontified t) 282 283 (fontified t) 283 284 (fontified t) 284 285 (fontified t) 285 286 (fontified t) 286 287 (fontified t) 287 288 (fontified t) 288 291 (fontified t) 291 294 (fontified t) 294 295 (fontified t) 295 296 (fontified t face (rainbow-delimiters-depth-3-face)) 296 297 (fontified t) 297 298 (fontified t face (rainbow-delimiters-depth-2-face)) 298 299 (fontified t) 299 300 (fontified t)) . 74745) (undo-tree-id104 . -204) (undo-tree-id105 . -299) (undo-tree-id106 . -4) (undo-tree-id107 . -204) (undo-tree-id108 . -75) (undo-tree-id109 . -204) (undo-tree-id110 . -4) (undo-tree-id111 . -104) (undo-tree-id112 . -275) (undo-tree-id113 . -75) (undo-tree-id114 . -75) (undo-tree-id115 . -204) (undo-tree-id116 . -200) (undo-tree-id117 . -300) (undo-tree-id118 . -4) (undo-tree-id119 . -300) (undo-tree-id120 . -4) (undo-tree-id121 . -204) (undo-tree-id122 . -4) (undo-tree-id123 . -4) (undo-tree-id124 . -104) (undo-tree-id125 . -200) (undo-tree-id126 . -204) (undo-tree-id127 . -204) (undo-tree-id128 . -300) 74949) nil (25659 46391 402109 701000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 74744) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1)) nil (25659 46391 402087 478000) 0 nil])
([nil nil ((75073 . 75075)) nil (25659 46391 402008 549000) 0 nil])
([nil nil ((75199 . 75203)) nil (25659 46391 402007 737000) 0 nil])
([nil nil ((75215 . 75216) (75214 . 75215) (75213 . 75214) (75212 . 75213) (75086 . 75087) (75085 . 75086) (75084 . 75085) (75083 . 75084) (74954 . 74958)) nil (25659 46391 402006 545000) 0 nil])
([nil nil ((75278 . 75279) (75277 . 75278) (75276 . 75277) (75275 . 75276) (75274 . 75275) (75273 . 75274) (75272 . 75273) (75271 . 75272) (75270 . 75271) (75140 . 75141) (75139 . 75140) (75138 . 75139) (75137 . 75138) (75136 . 75137) (75135 . 75136) (75134 . 75135) (75133 . 75134) (75132 . 75133) (74994 . 75003)) nil (25659 46391 401995 254000) 0 nil])
([nil nil ((#("
" 0 1 (c-is-sws t fontified t)) . 74909) (undo-tree-id150 . -1) (t 25659 46391 437140 788000)) nil (25659 46630 636768 299000) 0 nil])
([nil nil ((nil rear-nonsticky nil 44631 . 44632) (#("
" 0 1 (fontified nil)) . -44687) (44631 . 44688) 44605 (t 25659 46630 651669 161000)) nil (25659 47797 267409 50000) 0 nil])
([nil nil ((44655 . 44656) (44651 . 44655) (#("discord" 0 7 (face font-lock-variable-name-face fontified t)) . 44651) (undo-tree-id24 . -6) (undo-tree-id25 . -6) (undo-tree-id26 . -6) (undo-tree-id27 . -6) (undo-tree-id28 . -6) 44657) nil (25659 47797 267407 16000) 0 nil])
([nil nil ((nil rear-nonsticky nil 44691 . 44692) (nil fontified nil 44668 . 44692) (44668 . 44692)) nil (25659 47797 267403 249000) 0 nil])
([nil nil ((#("Discord" 0 7 (face font-lock-string-face fontified t)) . 44692) (undo-tree-id6 . -6) (undo-tree-id7 . -3) (undo-tree-id8 . -3) (undo-tree-id9 . -3) (undo-tree-id10 . -3) (undo-tree-id11 . -3) (undo-tree-id12 . -3) (undo-tree-id13 . -3) (undo-tree-id14 . -3) (undo-tree-id15 . -3) (undo-tree-id16 . -3) (undo-tree-id17 . -2) (undo-tree-id18 . -1) (undo-tree-id19 . -3) (undo-tree-id20 . 7) (undo-tree-id21 . 7) (undo-tree-id22 . 7) (undo-tree-id23 . -7)) nil (25659 47797 267401 997000) 0 nil])
([nil nil ((44682 . 44683) (nil syntax-table nil 44704 . 44705) (nil syntax-table (1) 44694 . 44695) (44681 . 44682) (nil syntax-table nil 44703 . 44704) (nil syntax-table (1) 44693 . 44694) (44680 . 44681) (nil syntax-table nil 44702 . 44703) (nil syntax-table (1) 44692 . 44693) (44679 . 44680) (#(" " 0 1 (face font-lock-string-face fontified t)) . 44679) (undo-tree-id3 . 1) (undo-tree-id4 . -1) (undo-tree-id5 . -1)) nil (25659 47797 267388 992000) 0 nil])
([nil nil ((44689 . 44690) (nil syntax-table nil 44707 . 44708) (nil syntax-table (1) 44697 . 44698) (44688 . 44689) (nil syntax-table nil 44706 . 44707) (nil syntax-table (1) 44696 . 44697) (44687 . 44688) (nil syntax-table nil 44705 . 44706) (nil syntax-table (1) 44695 . 44696) (44686 . 44687) (#(" " 0 1 (face font-lock-string-face fontified t)) . 44686) (undo-tree-id1 . -1) (undo-tree-id2 . -1)) nil (25659 47797 267381 297000) 0 nil])
([nil nil ((44695 . 44696) (nil syntax-table nil 44710 . 44711) (nil syntax-table (1) 44700 . 44701) (44694 . 44695) (nil syntax-table nil 44709 . 44710) (nil syntax-table (1) 44699 . 44700) (44693 . 44694) (nil syntax-table nil 44708 . 44709) (nil syntax-table (1) 44698 . 44699) (44692 . 44693) (#(" " 0 1 (face font-lock-string-face fontified t)) . 44692)) nil (25659 47797 267377 119000) 0 nil])
([nil nil ((44693 . 44694) (#("." 0 1 (fontified t)) . 44693)) nil (25659 47797 267374 384000) 0 nil])
([nil nil ((44687 . 44688) (#("." 0 1 (fontified t)) . 44687)) nil (25659 47797 267372 731000) 0 nil])
([nil nil ((44680 . 44681) (#("." 0 1 (fontified t)) . 44680) (undo-tree-id0 . -1)) nil (25659 47797 267367 992000) 0 nil])
([nil nil ((nil rear-nonsticky nil 75404 . 75405) (#("
" 0 1 (fontified nil)) . -75540) (75402 . 75541) 75384 (t 25659 47797 282011 756000)) nil (25659 47904 999040 781000) 0 nil])
([nil nil ((75461 . 75462) (#("d" 0 1 (fontified t)) . 75461) (undo-tree-id67 . -1)) nil (25659 47904 999039 668000) 0 nil])
([nil nil ((75522 . 75530) (#("ema" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -75522) (undo-tree-id35 . -3) (undo-tree-id36 . -3) (undo-tree-id37 . -3) (undo-tree-id38 . -3) (undo-tree-id39 . -3) (undo-tree-id40 . -3) (undo-tree-id41 . -3) (undo-tree-id42 . -3) (undo-tree-id43 . -3) (undo-tree-id44 . -3) (undo-tree-id45 . -3) 75525 (75522 . 75525) (#("discord" 0 7 (fontified t)) . 75522) (undo-tree-id46 . -6) (undo-tree-id47 . -6) (undo-tree-id48 . -6) (undo-tree-id49 . -6) (undo-tree-id50 . -7) (undo-tree-id51 . -6) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -2) (undo-tree-id56 . -3) (undo-tree-id57 . -4) (undo-tree-id58 . -4) (undo-tree-id59 . -4) (undo-tree-id60 . -5) (undo-tree-id61 . -6) (undo-tree-id62 . -6) (undo-tree-id63 . -6) (undo-tree-id64 . -6) (undo-tree-id65 . -7) (undo-tree-id66 . -7) 75528) nil (25659 47904 999034 789000) 0 nil])
([nil nil ((#("cmd    " 0 7 (fontified t)) . 75530) (undo-tree-id29 . -6) (undo-tree-id30 . 7) (undo-tree-id31 . 7) (undo-tree-id32 . 7) (undo-tree-id33 . 7) (undo-tree-id34 . -7)) nil (25659 47904 998994 61000) 0 nil])
([nil nil ((75530 . 75536)) nil (25659 47904 998976 107000) 0 nil])
([nil nil ((#("static const char *browsercmd[]  = { \"qutebrowser\", NULL };
static const char *screenlockcmd[]  = { \"slock\", NULL };
static const char *discordcmd[]  = { \"Discord\", NULL };
static const char *emacscmd[]  = { \"emacsclient\", \"-cn\", \"-a\", \"emacs\", NULL };
" 0 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t) 7 12 (fontified t face font-lock-keyword-face) 12 13 (fontified t) 13 16 (fontified t face font-lock-type-face) 16 17 (fontified t c-type c-decl-id-start face font-lock-type-face) 17 19 (fontified t) 19 29 (fontified t face font-lock-variable-name-face) 29 30 (fontified t face (rainbow-delimiters-depth-1-face)) 30 31 (fontified t face (rainbow-delimiters-depth-1-face)) 31 35 (fontified t) 35 36 (fontified t face (rainbow-delimiters-depth-1-face)) 36 37 (fontified t) 37 50 (fontified t face font-lock-string-face) 50 52 (fontified t) 52 56 (fontified t face font-lock-constant-face) 56 57 (fontified t) 57 58 (fontified t face (rainbow-delimiters-depth-1-face)) 58 60 (fontified t) 60 66 (fontified t face font-lock-keyword-face) 66 67 (fontified t) 67 72 (fontified t face font-lock-keyword-face) 72 73 (fontified t) 73 76 (fontified t face font-lock-type-face) 76 77 (fontified t c-type c-decl-id-start face font-lock-type-face) 77 79 (fontified t) 79 92 (fontified t face font-lock-variable-name-face) 92 93 (fontified t face (rainbow-delimiters-depth-1-face)) 93 94 (fontified t face (rainbow-delimiters-depth-1-face)) 94 98 (fontified t) 98 99 (fontified t face (rainbow-delimiters-depth-1-face)) 99 100 (fontified t) 100 107 (fontified t face font-lock-string-face) 107 109 (fontified t) 109 113 (fontified t face font-lock-constant-face) 113 114 (fontified t) 114 115 (fontified t face (rainbow-delimiters-depth-1-face)) 115 117 (fontified t) 117 123 (fontified t face font-lock-keyword-face) 123 124 (fontified t) 124 129 (fontified t face font-lock-keyword-face) 129 130 (fontified t) 130 133 (fontified t face font-lock-type-face) 133 134 (fontified t c-type c-decl-id-start face font-lock-type-face) 134 136 (fontified t) 136 146 (fontified t face font-lock-variable-name-face) 146 147 (fontified t face (rainbow-delimiters-depth-1-face)) 147 148 (fontified t face (rainbow-delimiters-depth-1-face)) 148 152 (fontified t) 152 153 (fontified t face (rainbow-delimiters-depth-1-face)) 153 154 (fontified t) 154 163 (fontified t face font-lock-string-face) 163 165 (fontified t) 165 169 (fontified t face font-lock-constant-face) 169 170 (fontified t) 170 171 (fontified t face (rainbow-delimiters-depth-1-face)) 171 173 (fontified t) 173 179 (fontified t face font-lock-keyword-face) 179 180 (fontified t) 180 185 (fontified t face font-lock-keyword-face) 185 186 (fontified t) 186 189 (fontified t face font-lock-type-face) 189 190 (fontified t c-type c-decl-id-start face font-lock-type-face) 190 192 (fontified t) 192 200 (fontified t face font-lock-variable-name-face) 200 201 (fontified t face (rainbow-delimiters-depth-1-face)) 201 202 (fontified t face (rainbow-delimiters-depth-1-face)) 202 206 (fontified t) 206 207 (fontified t face (rainbow-delimiters-depth-1-face)) 207 208 (fontified t) 208 221 (fontified t face font-lock-string-face) 221 223 (fontified t) 223 228 (fontified t face font-lock-string-face) 228 230 (fontified t) 230 234 (fontified t face font-lock-string-face) 234 236 (fontified t) 236 243 (fontified t face font-lock-string-face) 243 245 (fontified t) 245 249 (fontified t face font-lock-constant-face) 249 250 (fontified t) 250 251 (fontified t face (rainbow-delimiters-depth-1-face)) 251 253 (fontified t)) . 44459) (undo-tree-id65 . -192) (undo-tree-id66 . -173) (undo-tree-id67 . -253) (undo-tree-id68 . -192) (undo-tree-id69 . -19) (undo-tree-id70 . -192) (undo-tree-id71 . -19) (undo-tree-id72 . -192) (undo-tree-id73 . -252) 44651 (t 25659 47905 12126 697000)) nil (25659 48832 184582 302000) 0 nil])
([nil nil ((nil rear-nonsticky nil 45672 . 45673) (nil fontified nil 45663 . 45673) (45663 . 45673) 45662) nil (25659 48832 184571 712000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 45674) (undo-tree-id63 . -1) (undo-tree-id64 . -1)) nil (25659 48832 184570 69000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 45674) (undo-tree-id60 . 1) (undo-tree-id61 . -1) (undo-tree-id62 . -1)) nil (25659 48832 184567 594000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 45674) (undo-tree-id56 . 1) (undo-tree-id57 . 1) (undo-tree-id58 . -1) (undo-tree-id59 . -1)) nil (25659 48832 184564 248000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 45674) (undo-tree-id51 . 1) (undo-tree-id52 . 1) (undo-tree-id53 . 1) (undo-tree-id54 . -1) (undo-tree-id55 . -1)) nil (25659 48832 184560 561000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 45674) (undo-tree-id45 . 1) (undo-tree-id46 . 1) (undo-tree-id47 . 1) (undo-tree-id48 . 1) (undo-tree-id49 . -1) (undo-tree-id50 . -1)) nil (25659 48832 184556 303000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 45674) (undo-tree-id38 . 1) (undo-tree-id39 . 1) (undo-tree-id40 . 1) (undo-tree-id41 . 1) (undo-tree-id42 . 1) (undo-tree-id43 . -1) (undo-tree-id44 . -1)) nil (25659 48832 184551 954000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 45674) (undo-tree-id30 . 1) (undo-tree-id31 . 1) (undo-tree-id32 . 1) (undo-tree-id33 . 1) (undo-tree-id34 . 1) (undo-tree-id35 . 1) (undo-tree-id36 . -1) (undo-tree-id37 . -1)) nil (25659 48832 184546 194000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 45674) (undo-tree-id21 . 1) (undo-tree-id22 . 1) (undo-tree-id23 . 1) (undo-tree-id24 . 1) (undo-tree-id25 . 1) (undo-tree-id26 . 1) (undo-tree-id27 . 1) (undo-tree-id28 . -1) (undo-tree-id29 . -1)) nil (25659 48832 184540 142000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 45674) (undo-tree-id11 . 1) (undo-tree-id12 . 1) (undo-tree-id13 . 1) (undo-tree-id14 . 1) (undo-tree-id15 . 1) (undo-tree-id16 . 1) (undo-tree-id17 . 1) (undo-tree-id18 . 1) (undo-tree-id19 . -1) (undo-tree-id20 . -1)) nil (25659 48832 184531 335000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 45674) (undo-tree-id0 . 1) (undo-tree-id1 . 1) (undo-tree-id2 . 1) (undo-tree-id3 . 1) (undo-tree-id4 . 1) (undo-tree-id5 . 1) (undo-tree-id6 . 1) (undo-tree-id7 . 1) (undo-tree-id8 . 1) (undo-tree-id9 . -1) (undo-tree-id10 . -1)) nil (25798 12267 691446 570000) 0 nil])
([nil current ((#("k" 0 1 (fontified t face font-lock-string-face)) . 44443) (undo-tree-id6 . -1) (undo-tree-id7 . -1)) nil (25798 12273 763583 433000) 0 nil] [nil nil ((44443 . 44452) (#("kitty" 0 5 (face font-lock-string-face fontified t)) . 44443) (t 25659 48832 198523 376000)) ((44443 . 44448) (#("alacritty" 0 9 (fontified t face font-lock-string-face)) . 44443) (t 25783 47986 146983 5000)) (25798 12267 184256 321000) 0 nil])
nil
([nil nil ((#("#if STICKY_PATCH
  { MODKEY|ShiftMask,             XK_s,          togglesticky,           {0} },
" 0 1 (fontified t face font-lock-preprocessor-face c-is-sws t c-in-sws t) 1 3 (fontified t face font-lock-preprocessor-face c-in-sws t) 3 17 (fontified t c-in-sws t) 17 19 (fontified t c-is-sws t) 19 20 (fontified t c-is-sws t c-type c-not-decl face (rainbow-delimiters-depth-2-face)) 20 37 (fontified t) 37 38 (fontified t c-type c-not-decl) 38 55 (fontified t) 55 56 (fontified t c-type c-not-decl) 56 78 (fontified t) 78 79 (fontified t c-type c-not-decl) 79 90 (fontified t) 90 91 (fontified t face (rainbow-delimiters-depth-3-face)) 91 92 (fontified t) 92 93 (fontified t face (rainbow-delimiters-depth-3-face)) 93 94 (fontified t) 94 95 (fontified t face (rainbow-delimiters-depth-2-face)) 95 97 (fontified t)) . 59520) (undo-tree-id0 . -17) (undo-tree-id1 . -16) (undo-tree-id2 . -97) (undo-tree-id3 . -17) (undo-tree-id4 . -97) (undo-tree-id5 . -96) (t 25783 47986 146983 5000)) ((59520 . 59617)) (25798 12267 182603 768000) 0 nil])
nil
